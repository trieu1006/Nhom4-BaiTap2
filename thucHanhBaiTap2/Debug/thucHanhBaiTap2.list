
thucHanhBaiTap2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004774  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000910  08004914  08004914  00014914  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08005224  08005224  0002008c  2**0
                  CONTENTS
  4 .ARM          00000000  08005224  08005224  0002008c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08005224  08005224  0002008c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08005224  08005224  00015224  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08005228  08005228  00015228  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000008c  20000000  0800522c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000012f4  2000008c  080052b8  0002008c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20001380  080052b8  00021380  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0002008c  2**0
                  CONTENTS, READONLY
 12 .debug_info   000379b4  00000000  00000000  000200bc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002de4  00000000  00000000  00057a70  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000d18  00000000  00000000  0005a858  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000b58  00000000  00000000  0005b570  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000fed3  00000000  00000000  0005c0c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000a6ae  00000000  00000000  0006bf9b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0004dfe5  00000000  00000000  00076649  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      000000cb  00000000  00000000  000c462e  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00003778  00000000  00000000  000c46fc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	2000008c 	.word	0x2000008c
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080048fc 	.word	0x080048fc

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000090 	.word	0x20000090
 80001dc:	080048fc 	.word	0x080048fc

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <main>:
static uint8_t temperature1, humidity1;
//static uint8_t temperature2, humidity2;


int main(void)
{
 8000280:	b580      	push	{r7, lr}
 8000282:	af00      	add	r7, sp, #0
	AppCommon();
 8000284:	f000 f838 	bl	80002f8 <AppCommon>

	while(1)
	{
		processGetValueSensor();
 8000288:	f000 fa54 	bl	8000734 <processGetValueSensor>
		processTimerScheduler();
 800028c:	f001 f9d6 	bl	800163c <processTimerScheduler>
		processGetValueSensor();
 8000290:	e7fa      	b.n	8000288 <main+0x8>

08000292 <delay_ms>:
 * @func   delay_ms
 * @brief  delay milisecon
 * @param  None
 * @retval None
 */
void delay_ms(uint32_t ms) {
 8000292:	b580      	push	{r7, lr}
 8000294:	b084      	sub	sp, #16
 8000296:	af00      	add	r7, sp, #0
 8000298:	6078      	str	r0, [r7, #4]

	uint32_t startTime = GetMilSecTick(); //Lưu lại thời điểm hiện tại.
 800029a:	f001 f9c3 	bl	8001624 <GetMilSecTick>
 800029e:	60f8      	str	r0, [r7, #12]
	while (CalculatorTime(startTime, GetMilSecTick()) <= ms)
 80002a0:	bf00      	nop
 80002a2:	f001 f9bf 	bl	8001624 <GetMilSecTick>
 80002a6:	4603      	mov	r3, r0
 80002a8:	4619      	mov	r1, r3
 80002aa:	68f8      	ldr	r0, [r7, #12]
 80002ac:	f000 f809 	bl	80002c2 <CalculatorTime>
 80002b0:	4602      	mov	r2, r0
 80002b2:	687b      	ldr	r3, [r7, #4]
 80002b4:	4293      	cmp	r3, r2
 80002b6:	d2f4      	bcs.n	80002a2 <delay_ms+0x10>
		;

//	Đợi cho đến khi hết khoảng time cài đặt

}
 80002b8:	bf00      	nop
 80002ba:	bf00      	nop
 80002bc:	3710      	adds	r7, #16
 80002be:	46bd      	mov	sp, r7
 80002c0:	bd80      	pop	{r7, pc}

080002c2 <CalculatorTime>:
 * @func   CalculatorTime
 * @brief  Caculator time button
 * @param  None
 * @retval None
 */
uint32_t CalculatorTime(uint32_t dwTimeInit, uint32_t dwTimeCurrent) {
 80002c2:	b480      	push	{r7}
 80002c4:	b085      	sub	sp, #20
 80002c6:	af00      	add	r7, sp, #0
 80002c8:	6078      	str	r0, [r7, #4]
 80002ca:	6039      	str	r1, [r7, #0]
	uint32_t dwTimeTotal;
	if (dwTimeCurrent >= dwTimeInit) {
 80002cc:	683a      	ldr	r2, [r7, #0]
 80002ce:	687b      	ldr	r3, [r7, #4]
 80002d0:	429a      	cmp	r2, r3
 80002d2:	d304      	bcc.n	80002de <CalculatorTime+0x1c>
		dwTimeTotal = dwTimeCurrent - dwTimeInit;
 80002d4:	683a      	ldr	r2, [r7, #0]
 80002d6:	687b      	ldr	r3, [r7, #4]
 80002d8:	1ad3      	subs	r3, r2, r3
 80002da:	60fb      	str	r3, [r7, #12]
 80002dc:	e004      	b.n	80002e8 <CalculatorTime+0x26>
	} else {
		dwTimeTotal = 0xFFFFFFFFU + dwTimeCurrent - dwTimeInit;
 80002de:	683a      	ldr	r2, [r7, #0]
 80002e0:	687b      	ldr	r3, [r7, #4]
 80002e2:	1ad3      	subs	r3, r2, r3
 80002e4:	3b01      	subs	r3, #1
 80002e6:	60fb      	str	r3, [r7, #12]
	}
	return dwTimeTotal;
 80002e8:	68fb      	ldr	r3, [r7, #12]

}
 80002ea:	4618      	mov	r0, r3
 80002ec:	3714      	adds	r7, #20
 80002ee:	46bd      	mov	sp, r7
 80002f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002f4:	4770      	bx	lr
	...

080002f8 <AppCommon>:
 * @brief  Init everything
 * @param  None
 * @retval None
 */
static void AppCommon()
{
 80002f8:	b580      	push	{r7, lr}
 80002fa:	b082      	sub	sp, #8
 80002fc:	af02      	add	r7, sp, #8
	SystemCoreClockUpdate();
 80002fe:	f000 fbeb 	bl	8000ad8 <SystemCoreClockUpdate>
	TimerInit();
 8000302:	f001 f8bb 	bl	800147c <TimerInit>
    SPI1_Init();
 8000306:	f000 f835 	bl	8000374 <SPI1_Init>
    I2C_Init_temphumi();
 800030a:	f000 f863 	bl	80003d4 <I2C_Init_temphumi>
    TemHumSensor_Init();
 800030e:	f001 fa81 	bl	8001814 <TemHumSensor_Init>
    Ucglib4WireSWSPI_begin(&ucg, UCG_FONT_MODE_SOLID); //là hàm khởi tạo LCD.
 8000312:	2100      	movs	r1, #0
 8000314:	4814      	ldr	r0, [pc, #80]	; (8000368 <AppCommon+0x70>)
 8000316:	f001 fc5f 	bl	8001bd8 <Ucglib4WireSWSPI_begin>
    ucg_ClearScreen(&ucg);
 800031a:	4813      	ldr	r0, [pc, #76]	; (8000368 <AppCommon+0x70>)
 800031c:	f001 fca3 	bl	8001c66 <ucg_ClearScreen>
    ucg_SetFont(&ucg, ucg_font_ncenR12_hr);
 8000320:	4912      	ldr	r1, [pc, #72]	; (800036c <AppCommon+0x74>)
 8000322:	4811      	ldr	r0, [pc, #68]	; (8000368 <AppCommon+0x70>)
 8000324:	f002 fdb8 	bl	8002e98 <ucg_SetFont>
    ucg_SetColor(&ucg, 0, 255, 255, 255);
 8000328:	23ff      	movs	r3, #255	; 0xff
 800032a:	9300      	str	r3, [sp, #0]
 800032c:	23ff      	movs	r3, #255	; 0xff
 800032e:	22ff      	movs	r2, #255	; 0xff
 8000330:	2100      	movs	r1, #0
 8000332:	480d      	ldr	r0, [pc, #52]	; (8000368 <AppCommon+0x70>)
 8000334:	f002 fe8f 	bl	8003056 <ucg_SetColor>
    ucg_SetColor(&ucg, 1, 0, 0, 0);
 8000338:	2300      	movs	r3, #0
 800033a:	9300      	str	r3, [sp, #0]
 800033c:	2300      	movs	r3, #0
 800033e:	2200      	movs	r2, #0
 8000340:	2101      	movs	r1, #1
 8000342:	4809      	ldr	r0, [pc, #36]	; (8000368 <AppCommon+0x70>)
 8000344:	f002 fe87 	bl	8003056 <ucg_SetColor>
    ucg_SetRotate180(&ucg);
 8000348:	4807      	ldr	r0, [pc, #28]	; (8000368 <AppCommon+0x70>)
 800034a:	f002 ff7f 	bl	800324c <ucg_SetRotate180>
    Scan_TimeSensor(5000);
 800034e:	f241 3088 	movw	r0, #5000	; 0x1388
 8000352:	f000 fb07 	bl	8000964 <Scan_TimeSensor>
    time_initial = GetMilSecTick();
 8000356:	f001 f965 	bl	8001624 <GetMilSecTick>
 800035a:	4603      	mov	r3, r0
 800035c:	4a04      	ldr	r2, [pc, #16]	; (8000370 <AppCommon+0x78>)
 800035e:	6013      	str	r3, [r2, #0]
}
 8000360:	bf00      	nop
 8000362:	46bd      	mov	sp, r7
 8000364:	bd80      	pop	{r7, pc}
 8000366:	bf00      	nop
 8000368:	200000a8 	.word	0x200000a8
 800036c:	08004a48 	.word	0x08004a48
 8000370:	2000015c 	.word	0x2000015c

08000374 <SPI1_Init>:
 * @brief  Init SPI
 * @param  None
 * @retval None
 */
static void SPI1_Init(void)
{
 8000374:	b580      	push	{r7, lr}
 8000376:	b082      	sub	sp, #8
 8000378:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;

	/* GPIOA, GPIOB and GPIOC Clocks enable */
	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA | RCC_AHB1Periph_GPIOB | RCC_AHB1Periph_GPIOC, ENABLE);
 800037a:	2101      	movs	r1, #1
 800037c:	2007      	movs	r0, #7
 800037e:	f000 fff1 	bl	8001364 <RCC_AHB1PeriphClockCmd>

	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 8000382:	2301      	movs	r3, #1
 8000384:	713b      	strb	r3, [r7, #4]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
 8000386:	2303      	movs	r3, #3
 8000388:	717b      	strb	r3, [r7, #5]
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 800038a:	2300      	movs	r3, #0
 800038c:	71bb      	strb	r3, [r7, #6]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 800038e:	2300      	movs	r3, #0
 8000390:	71fb      	strb	r3, [r7, #7]

	GPIO_InitStructure.GPIO_Pin = SPI1_SCK_PIN | SPI1_MOSI_PIN | SPI1_RS_PIN | SPI1_MODE_PIN;
 8000392:	f44f 7368 	mov.w	r3, #928	; 0x3a0
 8000396:	603b      	str	r3, [r7, #0]
	GPIO_Init(GPIOA, &GPIO_InitStructure);
 8000398:	463b      	mov	r3, r7
 800039a:	4619      	mov	r1, r3
 800039c:	480a      	ldr	r0, [pc, #40]	; (80003c8 <SPI1_Init+0x54>)
 800039e:	f000 fc67 	bl	8000c70 <GPIO_Init>

	GPIO_InitStructure.GPIO_Pin = SPI1_CS_PIN | SPI1_ENABLE_PIN;
 80003a2:	f44f 6388 	mov.w	r3, #1088	; 0x440
 80003a6:	603b      	str	r3, [r7, #0]
	GPIO_Init(GPIOB, &GPIO_InitStructure);
 80003a8:	463b      	mov	r3, r7
 80003aa:	4619      	mov	r1, r3
 80003ac:	4807      	ldr	r0, [pc, #28]	; (80003cc <SPI1_Init+0x58>)
 80003ae:	f000 fc5f 	bl	8000c70 <GPIO_Init>

	GPIO_InitStructure.GPIO_Pin = SPI1_RST_PIN;
 80003b2:	2380      	movs	r3, #128	; 0x80
 80003b4:	603b      	str	r3, [r7, #0]
	GPIO_Init(GPIOC, &GPIO_InitStructure);
 80003b6:	463b      	mov	r3, r7
 80003b8:	4619      	mov	r1, r3
 80003ba:	4805      	ldr	r0, [pc, #20]	; (80003d0 <SPI1_Init+0x5c>)
 80003bc:	f000 fc58 	bl	8000c70 <GPIO_Init>
}
 80003c0:	bf00      	nop
 80003c2:	3708      	adds	r7, #8
 80003c4:	46bd      	mov	sp, r7
 80003c6:	bd80      	pop	{r7, pc}
 80003c8:	40020000 	.word	0x40020000
 80003cc:	40020400 	.word	0x40020400
 80003d0:	40020800 	.word	0x40020800

080003d4 <I2C_Init_temphumi>:
 * @brief  Init I2C temp and humi
 * @param  None
 * @retval None
 */
static void I2C_Init_temphumi(void)
{
 80003d4:	b580      	push	{r7, lr}
 80003d6:	b086      	sub	sp, #24
 80003d8:	af00      	add	r7, sp, #0
// Initialization struct
	I2C_InitTypeDef I2C_InitStruct;
	GPIO_InitTypeDef GPIO_InitStruct;

	// Step 1: Initialize I2C
	RCC_APB1PeriphClockCmd(I2Cx_RCC, ENABLE);
 80003da:	2101      	movs	r1, #1
 80003dc:	f44f 1000 	mov.w	r0, #2097152	; 0x200000
 80003e0:	f000 ffe0 	bl	80013a4 <RCC_APB1PeriphClockCmd>
	I2C_InitStruct.I2C_ClockSpeed = 400000;
 80003e4:	4b1d      	ldr	r3, [pc, #116]	; (800045c <I2C_Init_temphumi+0x88>)
 80003e6:	60bb      	str	r3, [r7, #8]
	I2C_InitStruct.I2C_Mode = I2C_Mode_I2C;
 80003e8:	2300      	movs	r3, #0
 80003ea:	81bb      	strh	r3, [r7, #12]
	I2C_InitStruct.I2C_DutyCycle = I2C_DutyCycle_2;
 80003ec:	f64b 73ff 	movw	r3, #49151	; 0xbfff
 80003f0:	81fb      	strh	r3, [r7, #14]
	I2C_InitStruct.I2C_OwnAddress1 = 0x00;
 80003f2:	2300      	movs	r3, #0
 80003f4:	823b      	strh	r3, [r7, #16]
	I2C_InitStruct.I2C_Ack = I2C_Ack_Enable;
 80003f6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80003fa:	827b      	strh	r3, [r7, #18]
	I2C_InitStruct.I2C_AcknowledgedAddress = I2C_AcknowledgedAddress_7bit;
 80003fc:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8000400:	82bb      	strh	r3, [r7, #20]
	I2C_Init(I2Cx_SENSOR, &I2C_InitStruct);
 8000402:	f107 0308 	add.w	r3, r7, #8
 8000406:	4619      	mov	r1, r3
 8000408:	4815      	ldr	r0, [pc, #84]	; (8000460 <I2C_Init_temphumi+0x8c>)
 800040a:	f000 fd21 	bl	8000e50 <I2C_Init>
	I2C_Cmd(I2Cx_SENSOR, ENABLE);
 800040e:	2101      	movs	r1, #1
 8000410:	4813      	ldr	r0, [pc, #76]	; (8000460 <I2C_Init_temphumi+0x8c>)
 8000412:	f000 fddf 	bl	8000fd4 <I2C_Cmd>

	// Step 2: Initialize GPIO as open drain alternate function
	RCC_AHB1PeriphClockCmd(I2C_GPIO_RCC, ENABLE);
 8000416:	2101      	movs	r1, #1
 8000418:	2002      	movs	r0, #2
 800041a:	f000 ffa3 	bl	8001364 <RCC_AHB1PeriphClockCmd>
	GPIO_InitStruct.GPIO_Pin = I2C_PIN_SCL | I2C_PIN_SDA;
 800041e:	f44f 7340 	mov.w	r3, #768	; 0x300
 8000422:	603b      	str	r3, [r7, #0]
	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF;
 8000424:	2302      	movs	r3, #2
 8000426:	713b      	strb	r3, [r7, #4]
	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
 8000428:	2302      	movs	r3, #2
 800042a:	717b      	strb	r3, [r7, #5]
	GPIO_InitStruct.GPIO_OType = GPIO_OType_OD;
 800042c:	2301      	movs	r3, #1
 800042e:	71bb      	strb	r3, [r7, #6]
	GPIO_InitStruct.GPIO_PuPd  = GPIO_PuPd_NOPULL;
 8000430:	2300      	movs	r3, #0
 8000432:	71fb      	strb	r3, [r7, #7]
	GPIO_Init(I2C_GPIO, &GPIO_InitStruct);
 8000434:	463b      	mov	r3, r7
 8000436:	4619      	mov	r1, r3
 8000438:	480a      	ldr	r0, [pc, #40]	; (8000464 <I2C_Init_temphumi+0x90>)
 800043a:	f000 fc19 	bl	8000c70 <GPIO_Init>

	/* Connect PXx to I2C_SCL */
	GPIO_PinAFConfig(I2C_GPIO, GPIO_PinSource8, GPIO_AF_I2C1);
 800043e:	2204      	movs	r2, #4
 8000440:	2108      	movs	r1, #8
 8000442:	4808      	ldr	r0, [pc, #32]	; (8000464 <I2C_Init_temphumi+0x90>)
 8000444:	f000 fcba 	bl	8000dbc <GPIO_PinAFConfig>

	/* Connect PXx to I2C_SDA */
	GPIO_PinAFConfig(I2C_GPIO, GPIO_PinSource9, GPIO_AF_I2C1);
 8000448:	2204      	movs	r2, #4
 800044a:	2109      	movs	r1, #9
 800044c:	4805      	ldr	r0, [pc, #20]	; (8000464 <I2C_Init_temphumi+0x90>)
 800044e:	f000 fcb5 	bl	8000dbc <GPIO_PinAFConfig>
}
 8000452:	bf00      	nop
 8000454:	3718      	adds	r7, #24
 8000456:	46bd      	mov	sp, r7
 8000458:	bd80      	pop	{r7, pc}
 800045a:	bf00      	nop
 800045c:	00061a80 	.word	0x00061a80
 8000460:	40005400 	.word	0x40005400
 8000464:	40020400 	.word	0x40020400

08000468 <I2C_start>:
 * @brief   Generate I2C start condition
 * @param   None
 * @retval  None
 */
void I2C_start(void)
{
 8000468:	b580      	push	{r7, lr}
 800046a:	af00      	add	r7, sp, #0
	// Wait until I2Cx is not busy anymore
	while (I2C_GetFlagStatus(I2Cx_SENSOR, I2C_FLAG_BUSY));
 800046c:	bf00      	nop
 800046e:	f44f 3100 	mov.w	r1, #131072	; 0x20000
 8000472:	480a      	ldr	r0, [pc, #40]	; (800049c <I2C_start+0x34>)
 8000474:	f000 fe9a 	bl	80011ac <I2C_GetFlagStatus>
 8000478:	4603      	mov	r3, r0
 800047a:	2b00      	cmp	r3, #0
 800047c:	d1f7      	bne.n	800046e <I2C_start+0x6>

	// Generate start condition
	I2C_GenerateSTART(I2Cx_SENSOR, ENABLE);
 800047e:	2101      	movs	r1, #1
 8000480:	4806      	ldr	r0, [pc, #24]	; (800049c <I2C_start+0x34>)
 8000482:	f000 fdc7 	bl	8001014 <I2C_GenerateSTART>

	// Wait for I2C EV5.
	// It means that the start condition has been correctly released
	// on the I2C bus (the bus is free, no other devices is communicating))
	while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_MODE_SELECT));
 8000486:	bf00      	nop
 8000488:	4905      	ldr	r1, [pc, #20]	; (80004a0 <I2C_start+0x38>)
 800048a:	4804      	ldr	r0, [pc, #16]	; (800049c <I2C_start+0x34>)
 800048c:	f000 fe5e 	bl	800114c <I2C_CheckEvent>
 8000490:	4603      	mov	r3, r0
 8000492:	2b00      	cmp	r3, #0
 8000494:	d0f8      	beq.n	8000488 <I2C_start+0x20>
}
 8000496:	bf00      	nop
 8000498:	bf00      	nop
 800049a:	bd80      	pop	{r7, pc}
 800049c:	40005400 	.word	0x40005400
 80004a0:	00030001 	.word	0x00030001

080004a4 <I2C_address_direction>:
 * @brief   e
 * @param   None
 * @retval  None
 */
void I2C_address_direction(uint8_t address, uint8_t direction)
{
 80004a4:	b580      	push	{r7, lr}
 80004a6:	b082      	sub	sp, #8
 80004a8:	af00      	add	r7, sp, #0
 80004aa:	4603      	mov	r3, r0
 80004ac:	460a      	mov	r2, r1
 80004ae:	71fb      	strb	r3, [r7, #7]
 80004b0:	4613      	mov	r3, r2
 80004b2:	71bb      	strb	r3, [r7, #6]
	// Send slave address
	I2C_Send7bitAddress(I2Cx_SENSOR, address, direction);
 80004b4:	79ba      	ldrb	r2, [r7, #6]
 80004b6:	79fb      	ldrb	r3, [r7, #7]
 80004b8:	4619      	mov	r1, r3
 80004ba:	480f      	ldr	r0, [pc, #60]	; (80004f8 <I2C_address_direction+0x54>)
 80004bc:	f000 fdea 	bl	8001094 <I2C_Send7bitAddress>

	// Wait for I2C EV6
	// It means that a slave acknowledges his address
	if (direction == I2C_Direction_Transmitter)		// truyền
 80004c0:	79bb      	ldrb	r3, [r7, #6]
 80004c2:	2b00      	cmp	r3, #0
 80004c4:	d108      	bne.n	80004d8 <I2C_address_direction+0x34>
	{
		while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED));
 80004c6:	bf00      	nop
 80004c8:	490c      	ldr	r1, [pc, #48]	; (80004fc <I2C_address_direction+0x58>)
 80004ca:	480b      	ldr	r0, [pc, #44]	; (80004f8 <I2C_address_direction+0x54>)
 80004cc:	f000 fe3e 	bl	800114c <I2C_CheckEvent>
 80004d0:	4603      	mov	r3, r0
 80004d2:	2b00      	cmp	r3, #0
 80004d4:	d0f8      	beq.n	80004c8 <I2C_address_direction+0x24>
	}
	else if (direction == I2C_Direction_Receiver)  // nhận
	{
		while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_RECEIVER_MODE_SELECTED));
	}
}
 80004d6:	e00a      	b.n	80004ee <I2C_address_direction+0x4a>
	else if (direction == I2C_Direction_Receiver)  // nhận
 80004d8:	79bb      	ldrb	r3, [r7, #6]
 80004da:	2b01      	cmp	r3, #1
 80004dc:	d107      	bne.n	80004ee <I2C_address_direction+0x4a>
		while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_RECEIVER_MODE_SELECTED));
 80004de:	bf00      	nop
 80004e0:	4907      	ldr	r1, [pc, #28]	; (8000500 <I2C_address_direction+0x5c>)
 80004e2:	4805      	ldr	r0, [pc, #20]	; (80004f8 <I2C_address_direction+0x54>)
 80004e4:	f000 fe32 	bl	800114c <I2C_CheckEvent>
 80004e8:	4603      	mov	r3, r0
 80004ea:	2b00      	cmp	r3, #0
 80004ec:	d0f8      	beq.n	80004e0 <I2C_address_direction+0x3c>
}
 80004ee:	bf00      	nop
 80004f0:	3708      	adds	r7, #8
 80004f2:	46bd      	mov	sp, r7
 80004f4:	bd80      	pop	{r7, pc}
 80004f6:	bf00      	nop
 80004f8:	40005400 	.word	0x40005400
 80004fc:	00070082 	.word	0x00070082
 8000500:	00030002 	.word	0x00030002

08000504 <I2C_transmit>:
 * @brief   Transmit one byte to I2C bus
 * @param   None
 * @retval  None
 */
void I2C_transmit(uint8_t byte)
{
 8000504:	b580      	push	{r7, lr}
 8000506:	b082      	sub	sp, #8
 8000508:	af00      	add	r7, sp, #0
 800050a:	4603      	mov	r3, r0
 800050c:	71fb      	strb	r3, [r7, #7]
	// Send data byte
	I2C_SendData(I2Cx_SENSOR, byte);
 800050e:	79fb      	ldrb	r3, [r7, #7]
 8000510:	4619      	mov	r1, r3
 8000512:	4808      	ldr	r0, [pc, #32]	; (8000534 <I2C_transmit+0x30>)
 8000514:	f000 fdfc 	bl	8001110 <I2C_SendData>
	// Wait for I2C EV8_2.
	// It means that the data has been physically shifted out and
	// output on the bus)
	while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_BYTE_TRANSMITTED));
 8000518:	bf00      	nop
 800051a:	4907      	ldr	r1, [pc, #28]	; (8000538 <I2C_transmit+0x34>)
 800051c:	4805      	ldr	r0, [pc, #20]	; (8000534 <I2C_transmit+0x30>)
 800051e:	f000 fe15 	bl	800114c <I2C_CheckEvent>
 8000522:	4603      	mov	r3, r0
 8000524:	2b00      	cmp	r3, #0
 8000526:	d0f8      	beq.n	800051a <I2C_transmit+0x16>
}
 8000528:	bf00      	nop
 800052a:	bf00      	nop
 800052c:	3708      	adds	r7, #8
 800052e:	46bd      	mov	sp, r7
 8000530:	bd80      	pop	{r7, pc}
 8000532:	bf00      	nop
 8000534:	40005400 	.word	0x40005400
 8000538:	00070084 	.word	0x00070084

0800053c <I2C_stop>:
 * @brief   Generate I2C stop condition
 * @param   None
 * @retval  None
 */
void I2C_stop(void)
{
 800053c:	b580      	push	{r7, lr}
 800053e:	af00      	add	r7, sp, #0
	// Generate I2C stop condition
	I2C_GenerateSTOP(I2Cx_SENSOR, ENABLE);
 8000540:	2101      	movs	r1, #1
 8000542:	4802      	ldr	r0, [pc, #8]	; (800054c <I2C_stop+0x10>)
 8000544:	f000 fd86 	bl	8001054 <I2C_GenerateSTOP>
}
 8000548:	bf00      	nop
 800054a:	bd80      	pop	{r7, pc}
 800054c:	40005400 	.word	0x40005400

08000550 <I2C_receive_nack>:
 * @brief   receive data
 * @param   None
 * @retval  None
 */
uint8_t I2C_receive_nack(void)
{
 8000550:	b580      	push	{r7, lr}
 8000552:	af00      	add	r7, sp, #0
	// Disable ACK of received data
	I2C_AcknowledgeConfig(I2Cx_SENSOR, DISABLE);
 8000554:	2100      	movs	r1, #0
 8000556:	4808      	ldr	r0, [pc, #32]	; (8000578 <I2C_receive_nack+0x28>)
 8000558:	f000 fdba 	bl	80010d0 <I2C_AcknowledgeConfig>
	// Wait for I2C EV7
	// It means that the data has been received in I2C data register
	while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_BYTE_RECEIVED));
 800055c:	bf00      	nop
 800055e:	4907      	ldr	r1, [pc, #28]	; (800057c <I2C_receive_nack+0x2c>)
 8000560:	4805      	ldr	r0, [pc, #20]	; (8000578 <I2C_receive_nack+0x28>)
 8000562:	f000 fdf3 	bl	800114c <I2C_CheckEvent>
 8000566:	4603      	mov	r3, r0
 8000568:	2b00      	cmp	r3, #0
 800056a:	d0f8      	beq.n	800055e <I2C_receive_nack+0xe>

	// Read and return data byte from I2C data register
	return I2C_ReceiveData(I2Cx_SENSOR);
 800056c:	4802      	ldr	r0, [pc, #8]	; (8000578 <I2C_receive_nack+0x28>)
 800056e:	f000 fddf 	bl	8001130 <I2C_ReceiveData>
 8000572:	4603      	mov	r3, r0
}
 8000574:	4618      	mov	r0, r3
 8000576:	bd80      	pop	{r7, pc}
 8000578:	40005400 	.word	0x40005400
 800057c:	00030040 	.word	0x00030040

08000580 <I2C_receive_ack>:
 * @brief   receive data
 * @param   None
 * @retval  None
 */
uint8_t I2C_receive_ack(void)
{
 8000580:	b580      	push	{r7, lr}
 8000582:	af00      	add	r7, sp, #0
	// Enable ACK of received data
	I2C_AcknowledgeConfig(I2Cx_SENSOR, ENABLE);
 8000584:	2101      	movs	r1, #1
 8000586:	4808      	ldr	r0, [pc, #32]	; (80005a8 <I2C_receive_ack+0x28>)
 8000588:	f000 fda2 	bl	80010d0 <I2C_AcknowledgeConfig>
	// Wait for I2C EV7
	// It means that the data has been received in I2C data register
	while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_BYTE_RECEIVED));
 800058c:	bf00      	nop
 800058e:	4907      	ldr	r1, [pc, #28]	; (80005ac <I2C_receive_ack+0x2c>)
 8000590:	4805      	ldr	r0, [pc, #20]	; (80005a8 <I2C_receive_ack+0x28>)
 8000592:	f000 fddb 	bl	800114c <I2C_CheckEvent>
 8000596:	4603      	mov	r3, r0
 8000598:	2b00      	cmp	r3, #0
 800059a:	d0f8      	beq.n	800058e <I2C_receive_ack+0xe>

	// Read and return data byte from I2C data register
	return I2C_ReceiveData(I2Cx_SENSOR);
 800059c:	4802      	ldr	r0, [pc, #8]	; (80005a8 <I2C_receive_ack+0x28>)
 800059e:	f000 fdc7 	bl	8001130 <I2C_ReceiveData>
 80005a2:	4603      	mov	r3, r0
}
 80005a4:	4618      	mov	r0, r3
 80005a6:	bd80      	pop	{r7, pc}
 80005a8:	40005400 	.word	0x40005400
 80005ac:	00030040 	.word	0x00030040

080005b0 <TemHumSensor_readRegister>:
		uint8_t address,	// Địa chỉ cảm biến.
	    uint8_t* pAddressRegister, // Địa chỉ của thanh ghi chứa dữ liệu nhiệt độ, độ ẩm.
	    uint8_t* pDataRegister, // Dữ liệu đọc được từ thanh ghi tương ứng.
	    uint8_t Length_Data, //Độ dài Dữ liệu đọc được từ thanh ghi tương ứng.
	    uint16_t delay)	//Dữ liệu đọc được từ thanh ghi tương ứng.
{
 80005b0:	b590      	push	{r4, r7, lr}
 80005b2:	b087      	sub	sp, #28
 80005b4:	af00      	add	r7, sp, #0
 80005b6:	60b9      	str	r1, [r7, #8]
 80005b8:	607a      	str	r2, [r7, #4]
 80005ba:	461a      	mov	r2, r3
 80005bc:	4603      	mov	r3, r0
 80005be:	73fb      	strb	r3, [r7, #15]
 80005c0:	4613      	mov	r3, r2
 80005c2:	73bb      	strb	r3, [r7, #14]
	uint8_t LengthCmd = pAddressRegister[0];
 80005c4:	68bb      	ldr	r3, [r7, #8]
 80005c6:	781b      	ldrb	r3, [r3, #0]
 80005c8:	757b      	strb	r3, [r7, #21]

	I2C_start();	// conditon start
 80005ca:	f7ff ff4d 	bl	8000468 <I2C_start>
	I2C_address_direction(address << 1, I2C_Direction_Transmitter); // send slave address - Transmit
 80005ce:	7bfb      	ldrb	r3, [r7, #15]
 80005d0:	005b      	lsls	r3, r3, #1
 80005d2:	b2db      	uxtb	r3, r3
 80005d4:	2100      	movs	r1, #0
 80005d6:	4618      	mov	r0, r3
 80005d8:	f7ff ff64 	bl	80004a4 <I2C_address_direction>

	for (uint8_t i = 1; i < LengthCmd; i++) {
 80005dc:	2301      	movs	r3, #1
 80005de:	75fb      	strb	r3, [r7, #23]
 80005e0:	e009      	b.n	80005f6 <TemHumSensor_readRegister+0x46>
		I2C_transmit(pAddressRegister[i]);		// Send Data from register
 80005e2:	7dfb      	ldrb	r3, [r7, #23]
 80005e4:	68ba      	ldr	r2, [r7, #8]
 80005e6:	4413      	add	r3, r2
 80005e8:	781b      	ldrb	r3, [r3, #0]
 80005ea:	4618      	mov	r0, r3
 80005ec:	f7ff ff8a 	bl	8000504 <I2C_transmit>
	for (uint8_t i = 1; i < LengthCmd; i++) {
 80005f0:	7dfb      	ldrb	r3, [r7, #23]
 80005f2:	3301      	adds	r3, #1
 80005f4:	75fb      	strb	r3, [r7, #23]
 80005f6:	7dfa      	ldrb	r2, [r7, #23]
 80005f8:	7d7b      	ldrb	r3, [r7, #21]
 80005fa:	429a      	cmp	r2, r3
 80005fc:	d3f1      	bcc.n	80005e2 <TemHumSensor_readRegister+0x32>
	}

    if (delay > 0) {
 80005fe:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 8000600:	2b00      	cmp	r3, #0
 8000602:	d003      	beq.n	800060c <TemHumSensor_readRegister+0x5c>
        delay_ms(delay);
 8000604:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 8000606:	4618      	mov	r0, r3
 8000608:	f7ff fe43 	bl	8000292 <delay_ms>
    }

	I2C_stop();// condition stop
 800060c:	f7ff ff96 	bl	800053c <I2C_stop>

	I2C_start(); // condition start
 8000610:	f7ff ff2a 	bl	8000468 <I2C_start>
	I2C_address_direction(address << 1, I2C_Direction_Receiver); // send slave address - Received
 8000614:	7bfb      	ldrb	r3, [r7, #15]
 8000616:	005b      	lsls	r3, r3, #1
 8000618:	b2db      	uxtb	r3, r3
 800061a:	2101      	movs	r1, #1
 800061c:	4618      	mov	r0, r3
 800061e:	f7ff ff41 	bl	80004a4 <I2C_address_direction>

	for (uint8_t i = 0; i < Length_Data; i++)
 8000622:	2300      	movs	r3, #0
 8000624:	75bb      	strb	r3, [r7, #22]
 8000626:	e016      	b.n	8000656 <TemHumSensor_readRegister+0xa6>
	{
		if (i == (Length_Data - 1))
 8000628:	7dba      	ldrb	r2, [r7, #22]
 800062a:	7bbb      	ldrb	r3, [r7, #14]
 800062c:	3b01      	subs	r3, #1
 800062e:	429a      	cmp	r2, r3
 8000630:	d107      	bne.n	8000642 <TemHumSensor_readRegister+0x92>
		{
			pDataRegister[i] = I2C_receive_nack();  // 	NA
 8000632:	7dbb      	ldrb	r3, [r7, #22]
 8000634:	687a      	ldr	r2, [r7, #4]
 8000636:	18d4      	adds	r4, r2, r3
 8000638:	f7ff ff8a 	bl	8000550 <I2C_receive_nack>
 800063c:	4603      	mov	r3, r0
 800063e:	7023      	strb	r3, [r4, #0]
 8000640:	e006      	b.n	8000650 <TemHumSensor_readRegister+0xa0>
		}
		else
		{
			pDataRegister[i] = I2C_receive_ack();   // A
 8000642:	7dbb      	ldrb	r3, [r7, #22]
 8000644:	687a      	ldr	r2, [r7, #4]
 8000646:	18d4      	adds	r4, r2, r3
 8000648:	f7ff ff9a 	bl	8000580 <I2C_receive_ack>
 800064c:	4603      	mov	r3, r0
 800064e:	7023      	strb	r3, [r4, #0]
	for (uint8_t i = 0; i < Length_Data; i++)
 8000650:	7dbb      	ldrb	r3, [r7, #22]
 8000652:	3301      	adds	r3, #1
 8000654:	75bb      	strb	r3, [r7, #22]
 8000656:	7dba      	ldrb	r2, [r7, #22]
 8000658:	7bbb      	ldrb	r3, [r7, #14]
 800065a:	429a      	cmp	r2, r3
 800065c:	d3e4      	bcc.n	8000628 <TemHumSensor_readRegister+0x78>
		}
	}
	I2C_stop();
 800065e:	f7ff ff6d 	bl	800053c <I2C_stop>

}
 8000662:	bf00      	nop
 8000664:	371c      	adds	r7, #28
 8000666:	46bd      	mov	sp, r7
 8000668:	bd90      	pop	{r4, r7, pc}
	...

0800066c <GetTemp_Sensor>:
 * @brief   Get value temperature
 * @param   None
 * @retval  Temperature
 */
uint32_t GetTemp_Sensor(void)
{
 800066c:	b580      	push	{r7, lr}
 800066e:	b086      	sub	sp, #24
 8000670:	af02      	add	r7, sp, #8
	uint32_t RT;
    uint8_t pRT[3] = { 0 };	// pRT[0]: MSB		pRT[1]: LSB
 8000672:	4b15      	ldr	r3, [pc, #84]	; (80006c8 <GetTemp_Sensor+0x5c>)
 8000674:	881b      	ldrh	r3, [r3, #0]
 8000676:	813b      	strh	r3, [r7, #8]
 8000678:	2300      	movs	r3, #0
 800067a:	72bb      	strb	r3, [r7, #10]

    uint8_t CMD_MEASURE_TEMP[2] =  { 2, 0xE3 }; // gửi độ dài byte cần truyền và CMD_MEASURE chế độ HOLD MASTER MODE
 800067c:	f24e 3302 	movw	r3, #58114	; 0xe302
 8000680:	80bb      	strh	r3, [r7, #4]

    TemHumSensor_readRegister(SI7020_ADDR, CMD_MEASURE_TEMP, pRT, 3, 4);
 8000682:	f107 0208 	add.w	r2, r7, #8
 8000686:	1d39      	adds	r1, r7, #4
 8000688:	2304      	movs	r3, #4
 800068a:	9300      	str	r3, [sp, #0]
 800068c:	2303      	movs	r3, #3
 800068e:	2040      	movs	r0, #64	; 0x40
 8000690:	f7ff ff8e 	bl	80005b0 <TemHumSensor_readRegister>

    RT = (pRT[0] << 8) + pRT[1];			// RT_CODE (MSB << 8) + LSB		// Temp = ((17572* RT)/(0xFFu +1) - 4685)/100
 8000694:	7a3b      	ldrb	r3, [r7, #8]
 8000696:	021b      	lsls	r3, r3, #8
 8000698:	7a7a      	ldrb	r2, [r7, #9]
 800069a:	4413      	add	r3, r2
 800069c:	60fb      	str	r3, [r7, #12]
    RT = ((RT * 17572) >> 16) - 4685;
 800069e:	68fb      	ldr	r3, [r7, #12]
 80006a0:	f244 42a4 	movw	r2, #17572	; 0x44a4
 80006a4:	fb02 f303 	mul.w	r3, r2, r3
 80006a8:	0c1b      	lsrs	r3, r3, #16
 80006aa:	f5a3 5392 	sub.w	r3, r3, #4672	; 0x1240
 80006ae:	3b0d      	subs	r3, #13
 80006b0:	60fb      	str	r3, [r7, #12]
    RT = RT/100;
 80006b2:	68fb      	ldr	r3, [r7, #12]
 80006b4:	4a05      	ldr	r2, [pc, #20]	; (80006cc <GetTemp_Sensor+0x60>)
 80006b6:	fba2 2303 	umull	r2, r3, r2, r3
 80006ba:	095b      	lsrs	r3, r3, #5
 80006bc:	60fb      	str	r3, [r7, #12]
    return RT;
 80006be:	68fb      	ldr	r3, [r7, #12]
}
 80006c0:	4618      	mov	r0, r3
 80006c2:	3710      	adds	r7, #16
 80006c4:	46bd      	mov	sp, r7
 80006c6:	bd80      	pop	{r7, pc}
 80006c8:	08004914 	.word	0x08004914
 80006cc:	51eb851f 	.word	0x51eb851f

080006d0 <GetHumi_Sensor>:
 * @brief   Get value humidity
 * @param   None
 * @retval  Humidity
 */
uint32_t GetHumi_Sensor(void)
{
 80006d0:	b580      	push	{r7, lr}
 80006d2:	b086      	sub	sp, #24
 80006d4:	af02      	add	r7, sp, #8
	uint32_t RH;
	uint8_t pRH[3] = { 0 };
 80006d6:	4b15      	ldr	r3, [pc, #84]	; (800072c <GetHumi_Sensor+0x5c>)
 80006d8:	881b      	ldrh	r3, [r3, #0]
 80006da:	813b      	strh	r3, [r7, #8]
 80006dc:	2300      	movs	r3, #0
 80006de:	72bb      	strb	r3, [r7, #10]


	uint8_t CMD_MEASURE_HUMI[2] =  { 2, 0xE5 }; // gửi độ dài byte cần truyền và CMD_MEASURE chế độ HOLD MASTER MODE
 80006e0:	f24e 5302 	movw	r3, #58626	; 0xe502
 80006e4:	80bb      	strh	r3, [r7, #4]

    TemHumSensor_readRegister(SI7020_ADDR, CMD_MEASURE_HUMI, pRH, 3, 8);
 80006e6:	f107 0208 	add.w	r2, r7, #8
 80006ea:	1d39      	adds	r1, r7, #4
 80006ec:	2308      	movs	r3, #8
 80006ee:	9300      	str	r3, [sp, #0]
 80006f0:	2303      	movs	r3, #3
 80006f2:	2040      	movs	r0, #64	; 0x40
 80006f4:	f7ff ff5c 	bl	80005b0 <TemHumSensor_readRegister>

    RH = (pRH[0] << 8) + pRH[1]; // RH_CODE (MSB << 8) + LSB
 80006f8:	7a3b      	ldrb	r3, [r7, #8]
 80006fa:	021b      	lsls	r3, r3, #8
 80006fc:	7a7a      	ldrb	r2, [r7, #9]
 80006fe:	4413      	add	r3, r2
 8000700:	60fb      	str	r3, [r7, #12]
    RH = ((RH * 12500) >> 16) - 600;
 8000702:	68fb      	ldr	r3, [r7, #12]
 8000704:	f243 02d4 	movw	r2, #12500	; 0x30d4
 8000708:	fb02 f303 	mul.w	r3, r2, r3
 800070c:	0c1b      	lsrs	r3, r3, #16
 800070e:	f5a3 7316 	sub.w	r3, r3, #600	; 0x258
 8000712:	60fb      	str	r3, [r7, #12]
    RH = RH/100;
 8000714:	68fb      	ldr	r3, [r7, #12]
 8000716:	4a06      	ldr	r2, [pc, #24]	; (8000730 <GetHumi_Sensor+0x60>)
 8000718:	fba2 2303 	umull	r2, r3, r2, r3
 800071c:	095b      	lsrs	r3, r3, #5
 800071e:	60fb      	str	r3, [r7, #12]

    return RH;
 8000720:	68fb      	ldr	r3, [r7, #12]
}
 8000722:	4618      	mov	r0, r3
 8000724:	3710      	adds	r7, #16
 8000726:	46bd      	mov	sp, r7
 8000728:	bd80      	pop	{r7, pc}
 800072a:	bf00      	nop
 800072c:	08004914 	.word	0x08004914
 8000730:	51eb851f 	.word	0x51eb851f

08000734 <processGetValueSensor>:
 * @func 	processGetValueSensor
 * @brief	Get value sensor
 * @param	None
 * @retval	None
 */
void processGetValueSensor(void) {
 8000734:	b580      	push	{r7, lr}
 8000736:	b082      	sub	sp, #8
 8000738:	af02      	add	r7, sp, #8
	// Get timer
	time_current = GetMilSecTick();
 800073a:	f000 ff73 	bl	8001624 <GetMilSecTick>
 800073e:	4603      	mov	r3, r0
 8000740:	4a58      	ldr	r2, [pc, #352]	; (80008a4 <processGetValueSensor+0x170>)
 8000742:	6013      	str	r3, [r2, #0]

	if (time_current >= time_initial) {
 8000744:	4b57      	ldr	r3, [pc, #348]	; (80008a4 <processGetValueSensor+0x170>)
 8000746:	681a      	ldr	r2, [r3, #0]
 8000748:	4b57      	ldr	r3, [pc, #348]	; (80008a8 <processGetValueSensor+0x174>)
 800074a:	681b      	ldr	r3, [r3, #0]
 800074c:	429a      	cmp	r2, r3
 800074e:	d30a      	bcc.n	8000766 <processGetValueSensor+0x32>
		time_total += time_current - time_initial;
 8000750:	4b54      	ldr	r3, [pc, #336]	; (80008a4 <processGetValueSensor+0x170>)
 8000752:	681a      	ldr	r2, [r3, #0]
 8000754:	4b54      	ldr	r3, [pc, #336]	; (80008a8 <processGetValueSensor+0x174>)
 8000756:	681b      	ldr	r3, [r3, #0]
 8000758:	1ad2      	subs	r2, r2, r3
 800075a:	4b54      	ldr	r3, [pc, #336]	; (80008ac <processGetValueSensor+0x178>)
 800075c:	681b      	ldr	r3, [r3, #0]
 800075e:	4413      	add	r3, r2
 8000760:	4a52      	ldr	r2, [pc, #328]	; (80008ac <processGetValueSensor+0x178>)
 8000762:	6013      	str	r3, [r2, #0]
 8000764:	e00a      	b.n	800077c <processGetValueSensor+0x48>
	} else {
		time_total += 0xFFFFFFFFU - time_current + time_initial;
 8000766:	4b50      	ldr	r3, [pc, #320]	; (80008a8 <processGetValueSensor+0x174>)
 8000768:	681a      	ldr	r2, [r3, #0]
 800076a:	4b4e      	ldr	r3, [pc, #312]	; (80008a4 <processGetValueSensor+0x170>)
 800076c:	681b      	ldr	r3, [r3, #0]
 800076e:	1ad2      	subs	r2, r2, r3
 8000770:	4b4e      	ldr	r3, [pc, #312]	; (80008ac <processGetValueSensor+0x178>)
 8000772:	681b      	ldr	r3, [r3, #0]
 8000774:	4413      	add	r3, r2
 8000776:	3b01      	subs	r3, #1
 8000778:	4a4c      	ldr	r2, [pc, #304]	; (80008ac <processGetValueSensor+0x178>)
 800077a:	6013      	str	r3, [r2, #0]
	}
	if (time_total == CYCLE_SEND_DATA_1) {
 800077c:	4b4b      	ldr	r3, [pc, #300]	; (80008ac <processGetValueSensor+0x178>)
 800077e:	681b      	ldr	r3, [r3, #0]
 8000780:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8000784:	d10b      	bne.n	800079e <processGetValueSensor+0x6a>
		//Dùng để đọc giá trị nhiệt độ trả về từ cảm biến thông qua giao tiếp I2C.
		temperature = (uint8_t) (GetTemp_Sensor());
 8000786:	f7ff ff71 	bl	800066c <GetTemp_Sensor>
 800078a:	4603      	mov	r3, r0
 800078c:	b2da      	uxtb	r2, r3
 800078e:	4b48      	ldr	r3, [pc, #288]	; (80008b0 <processGetValueSensor+0x17c>)
 8000790:	701a      	strb	r2, [r3, #0]

		//Dùng để đọc giá trị độ ẩm trả về từ cảm biến thông qua giao tiếp I2C.
		humidity = (uint8_t) (GetHumi_Sensor());
 8000792:	f7ff ff9d 	bl	80006d0 <GetHumi_Sensor>
 8000796:	4603      	mov	r3, r0
 8000798:	b2da      	uxtb	r2, r3
 800079a:	4b46      	ldr	r3, [pc, #280]	; (80008b4 <processGetValueSensor+0x180>)
 800079c:	701a      	strb	r2, [r3, #0]

	}
	if(time_total >= CYCLE_SEND_DATA_2)
 800079e:	4b43      	ldr	r3, [pc, #268]	; (80008ac <processGetValueSensor+0x178>)
 80007a0:	681b      	ldr	r3, [r3, #0]
 80007a2:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
 80007a6:	d376      	bcc.n	8000896 <processGetValueSensor+0x162>
	{
		temperature1 = (uint8_t) (GetTemp_Sensor());
 80007a8:	f7ff ff60 	bl	800066c <GetTemp_Sensor>
 80007ac:	4603      	mov	r3, r0
 80007ae:	b2da      	uxtb	r2, r3
 80007b0:	4b41      	ldr	r3, [pc, #260]	; (80008b8 <processGetValueSensor+0x184>)
 80007b2:	701a      	strb	r2, [r3, #0]

		humidity1 = (uint8_t) (GetHumi_Sensor());
 80007b4:	f7ff ff8c 	bl	80006d0 <GetHumi_Sensor>
 80007b8:	4603      	mov	r3, r0
 80007ba:	b2da      	uxtb	r2, r3
 80007bc:	4b3f      	ldr	r3, [pc, #252]	; (80008bc <processGetValueSensor+0x188>)
 80007be:	701a      	strb	r2, [r3, #0]

		// nếu thời gian chênh lệch giữa lần đo 1 và lần đo 2 là 2 thì sẽ cập nhật giá trị sensor
		if( ((temperature1 > temperature ) && (temperature1 - temperature >= 2))
 80007c0:	4b3d      	ldr	r3, [pc, #244]	; (80008b8 <processGetValueSensor+0x184>)
 80007c2:	781a      	ldrb	r2, [r3, #0]
 80007c4:	4b3a      	ldr	r3, [pc, #232]	; (80008b0 <processGetValueSensor+0x17c>)
 80007c6:	781b      	ldrb	r3, [r3, #0]
 80007c8:	429a      	cmp	r2, r3
 80007ca:	d907      	bls.n	80007dc <processGetValueSensor+0xa8>
 80007cc:	4b3a      	ldr	r3, [pc, #232]	; (80008b8 <processGetValueSensor+0x184>)
 80007ce:	781b      	ldrb	r3, [r3, #0]
 80007d0:	461a      	mov	r2, r3
 80007d2:	4b37      	ldr	r3, [pc, #220]	; (80008b0 <processGetValueSensor+0x17c>)
 80007d4:	781b      	ldrb	r3, [r3, #0]
 80007d6:	1ad3      	subs	r3, r2, r3
 80007d8:	2b01      	cmp	r3, #1
 80007da:	dc29      	bgt.n	8000830 <processGetValueSensor+0xfc>
		 || ((temperature1 < temperature ) && (temperature1 - temperature <= 2))
 80007dc:	4b36      	ldr	r3, [pc, #216]	; (80008b8 <processGetValueSensor+0x184>)
 80007de:	781a      	ldrb	r2, [r3, #0]
 80007e0:	4b33      	ldr	r3, [pc, #204]	; (80008b0 <processGetValueSensor+0x17c>)
 80007e2:	781b      	ldrb	r3, [r3, #0]
 80007e4:	429a      	cmp	r2, r3
 80007e6:	d207      	bcs.n	80007f8 <processGetValueSensor+0xc4>
 80007e8:	4b33      	ldr	r3, [pc, #204]	; (80008b8 <processGetValueSensor+0x184>)
 80007ea:	781b      	ldrb	r3, [r3, #0]
 80007ec:	461a      	mov	r2, r3
 80007ee:	4b30      	ldr	r3, [pc, #192]	; (80008b0 <processGetValueSensor+0x17c>)
 80007f0:	781b      	ldrb	r3, [r3, #0]
 80007f2:	1ad3      	subs	r3, r2, r3
 80007f4:	2b02      	cmp	r3, #2
 80007f6:	dd1b      	ble.n	8000830 <processGetValueSensor+0xfc>
		 || ((humidity1 > humidity ) && (humidity1 - humidity >= 2))
 80007f8:	4b30      	ldr	r3, [pc, #192]	; (80008bc <processGetValueSensor+0x188>)
 80007fa:	781a      	ldrb	r2, [r3, #0]
 80007fc:	4b2d      	ldr	r3, [pc, #180]	; (80008b4 <processGetValueSensor+0x180>)
 80007fe:	781b      	ldrb	r3, [r3, #0]
 8000800:	429a      	cmp	r2, r3
 8000802:	d907      	bls.n	8000814 <processGetValueSensor+0xe0>
 8000804:	4b2d      	ldr	r3, [pc, #180]	; (80008bc <processGetValueSensor+0x188>)
 8000806:	781b      	ldrb	r3, [r3, #0]
 8000808:	461a      	mov	r2, r3
 800080a:	4b2a      	ldr	r3, [pc, #168]	; (80008b4 <processGetValueSensor+0x180>)
 800080c:	781b      	ldrb	r3, [r3, #0]
 800080e:	1ad3      	subs	r3, r2, r3
 8000810:	2b01      	cmp	r3, #1
 8000812:	dc0d      	bgt.n	8000830 <processGetValueSensor+0xfc>
		 || ((humidity1 < humidity ) && (humidity1 - humidity <= 2)))
 8000814:	4b29      	ldr	r3, [pc, #164]	; (80008bc <processGetValueSensor+0x188>)
 8000816:	781a      	ldrb	r2, [r3, #0]
 8000818:	4b26      	ldr	r3, [pc, #152]	; (80008b4 <processGetValueSensor+0x180>)
 800081a:	781b      	ldrb	r3, [r3, #0]
 800081c:	429a      	cmp	r2, r3
 800081e:	d237      	bcs.n	8000890 <processGetValueSensor+0x15c>
 8000820:	4b26      	ldr	r3, [pc, #152]	; (80008bc <processGetValueSensor+0x188>)
 8000822:	781b      	ldrb	r3, [r3, #0]
 8000824:	461a      	mov	r2, r3
 8000826:	4b23      	ldr	r3, [pc, #140]	; (80008b4 <processGetValueSensor+0x180>)
 8000828:	781b      	ldrb	r3, [r3, #0]
 800082a:	1ad3      	subs	r3, r2, r3
 800082c:	2b02      	cmp	r3, #2
 800082e:	dc2f      	bgt.n	8000890 <processGetValueSensor+0x15c>
		{
			ucg_DrawString(&ucg, 0, 32, 0, "Assignment 2");
 8000830:	4b23      	ldr	r3, [pc, #140]	; (80008c0 <processGetValueSensor+0x18c>)
 8000832:	9300      	str	r3, [sp, #0]
 8000834:	2300      	movs	r3, #0
 8000836:	2220      	movs	r2, #32
 8000838:	2100      	movs	r1, #0
 800083a:	4822      	ldr	r0, [pc, #136]	; (80008c4 <processGetValueSensor+0x190>)
 800083c:	f002 fa68 	bl	8002d10 <ucg_DrawString>
			memset(src1, 0, sizeof(src1));
 8000840:	2214      	movs	r2, #20
 8000842:	2100      	movs	r1, #0
 8000844:	4820      	ldr	r0, [pc, #128]	; (80008c8 <processGetValueSensor+0x194>)
 8000846:	f003 fbe3 	bl	8004010 <memset>
			sprintf(src1, " Temp = %d oC  ", temperature1);
 800084a:	4b1b      	ldr	r3, [pc, #108]	; (80008b8 <processGetValueSensor+0x184>)
 800084c:	781b      	ldrb	r3, [r3, #0]
 800084e:	461a      	mov	r2, r3
 8000850:	491e      	ldr	r1, [pc, #120]	; (80008cc <processGetValueSensor+0x198>)
 8000852:	481d      	ldr	r0, [pc, #116]	; (80008c8 <processGetValueSensor+0x194>)
 8000854:	f003 fbe4 	bl	8004020 <siprintf>
			ucg_DrawString(&ucg, 0, 52, 0, src1);
 8000858:	4b1b      	ldr	r3, [pc, #108]	; (80008c8 <processGetValueSensor+0x194>)
 800085a:	9300      	str	r3, [sp, #0]
 800085c:	2300      	movs	r3, #0
 800085e:	2234      	movs	r2, #52	; 0x34
 8000860:	2100      	movs	r1, #0
 8000862:	4818      	ldr	r0, [pc, #96]	; (80008c4 <processGetValueSensor+0x190>)
 8000864:	f002 fa54 	bl	8002d10 <ucg_DrawString>

			memset(src2, 0, sizeof(src2));
 8000868:	2214      	movs	r2, #20
 800086a:	2100      	movs	r1, #0
 800086c:	4818      	ldr	r0, [pc, #96]	; (80008d0 <processGetValueSensor+0x19c>)
 800086e:	f003 fbcf 	bl	8004010 <memset>
			sprintf(src2, " Humi = %3d %%   ", humidity1);
 8000872:	4b12      	ldr	r3, [pc, #72]	; (80008bc <processGetValueSensor+0x188>)
 8000874:	781b      	ldrb	r3, [r3, #0]
 8000876:	461a      	mov	r2, r3
 8000878:	4916      	ldr	r1, [pc, #88]	; (80008d4 <processGetValueSensor+0x1a0>)
 800087a:	4815      	ldr	r0, [pc, #84]	; (80008d0 <processGetValueSensor+0x19c>)
 800087c:	f003 fbd0 	bl	8004020 <siprintf>
			ucg_DrawString(&ucg, 0, 72, 0, src2);
 8000880:	4b13      	ldr	r3, [pc, #76]	; (80008d0 <processGetValueSensor+0x19c>)
 8000882:	9300      	str	r3, [sp, #0]
 8000884:	2300      	movs	r3, #0
 8000886:	2248      	movs	r2, #72	; 0x48
 8000888:	2100      	movs	r1, #0
 800088a:	480e      	ldr	r0, [pc, #56]	; (80008c4 <processGetValueSensor+0x190>)
 800088c:	f002 fa40 	bl	8002d10 <ucg_DrawString>
		}

		time_total = 0;
 8000890:	4b06      	ldr	r3, [pc, #24]	; (80008ac <processGetValueSensor+0x178>)
 8000892:	2200      	movs	r2, #0
 8000894:	601a      	str	r2, [r3, #0]
		// Reset lại biến thời gian sau quá trình đọc giá trị nhiệt độ - độ ẩm.

	}
	time_initial = time_current;
 8000896:	4b03      	ldr	r3, [pc, #12]	; (80008a4 <processGetValueSensor+0x170>)
 8000898:	681b      	ldr	r3, [r3, #0]
 800089a:	4a03      	ldr	r2, [pc, #12]	; (80008a8 <processGetValueSensor+0x174>)
 800089c:	6013      	str	r3, [r2, #0]



}
 800089e:	bf00      	nop
 80008a0:	46bd      	mov	sp, r7
 80008a2:	bd80      	pop	{r7, pc}
 80008a4:	20000160 	.word	0x20000160
 80008a8:	2000015c 	.word	0x2000015c
 80008ac:	200001b8 	.word	0x200001b8
 80008b0:	200001bc 	.word	0x200001bc
 80008b4:	200001bd 	.word	0x200001bd
 80008b8:	200001be 	.word	0x200001be
 80008bc:	200001bf 	.word	0x200001bf
 80008c0:	08004918 	.word	0x08004918
 80008c4:	200000a8 	.word	0x200000a8
 80008c8:	20000168 	.word	0x20000168
 80008cc:	08004928 	.word	0x08004928
 80008d0:	2000017c 	.word	0x2000017c
 80008d4:	08004938 	.word	0x08004938

080008d8 <Scan_SensorLCD>:
* @brief	Scan display value sensor
* @param	None
* @retval	None
*/
void Scan_SensorLCD(void)
{
 80008d8:	b580      	push	{r7, lr}
 80008da:	b082      	sub	sp, #8
 80008dc:	af02      	add	r7, sp, #8
	ucg_DrawString(&ucg, 0, 32, 0, "Assignment 2");
 80008de:	4b19      	ldr	r3, [pc, #100]	; (8000944 <Scan_SensorLCD+0x6c>)
 80008e0:	9300      	str	r3, [sp, #0]
 80008e2:	2300      	movs	r3, #0
 80008e4:	2220      	movs	r2, #32
 80008e6:	2100      	movs	r1, #0
 80008e8:	4817      	ldr	r0, [pc, #92]	; (8000948 <Scan_SensorLCD+0x70>)
 80008ea:	f002 fa11 	bl	8002d10 <ucg_DrawString>
	memset(src3, 0, sizeof(src3));
 80008ee:	2214      	movs	r2, #20
 80008f0:	2100      	movs	r1, #0
 80008f2:	4816      	ldr	r0, [pc, #88]	; (800094c <Scan_SensorLCD+0x74>)
 80008f4:	f003 fb8c 	bl	8004010 <memset>
	sprintf(src3, " Temp = %d oC  ", temperature);
 80008f8:	4b15      	ldr	r3, [pc, #84]	; (8000950 <Scan_SensorLCD+0x78>)
 80008fa:	781b      	ldrb	r3, [r3, #0]
 80008fc:	461a      	mov	r2, r3
 80008fe:	4915      	ldr	r1, [pc, #84]	; (8000954 <Scan_SensorLCD+0x7c>)
 8000900:	4812      	ldr	r0, [pc, #72]	; (800094c <Scan_SensorLCD+0x74>)
 8000902:	f003 fb8d 	bl	8004020 <siprintf>
	ucg_DrawString(&ucg, 0, 52, 0, src3);
 8000906:	4b11      	ldr	r3, [pc, #68]	; (800094c <Scan_SensorLCD+0x74>)
 8000908:	9300      	str	r3, [sp, #0]
 800090a:	2300      	movs	r3, #0
 800090c:	2234      	movs	r2, #52	; 0x34
 800090e:	2100      	movs	r1, #0
 8000910:	480d      	ldr	r0, [pc, #52]	; (8000948 <Scan_SensorLCD+0x70>)
 8000912:	f002 f9fd 	bl	8002d10 <ucg_DrawString>

	memset(src4, 0, sizeof(src4));
 8000916:	2214      	movs	r2, #20
 8000918:	2100      	movs	r1, #0
 800091a:	480f      	ldr	r0, [pc, #60]	; (8000958 <Scan_SensorLCD+0x80>)
 800091c:	f003 fb78 	bl	8004010 <memset>
	sprintf(src4, " Humi = %3d %%   ", humidity);
 8000920:	4b0e      	ldr	r3, [pc, #56]	; (800095c <Scan_SensorLCD+0x84>)
 8000922:	781b      	ldrb	r3, [r3, #0]
 8000924:	461a      	mov	r2, r3
 8000926:	490e      	ldr	r1, [pc, #56]	; (8000960 <Scan_SensorLCD+0x88>)
 8000928:	480b      	ldr	r0, [pc, #44]	; (8000958 <Scan_SensorLCD+0x80>)
 800092a:	f003 fb79 	bl	8004020 <siprintf>
	ucg_DrawString(&ucg, 0, 72, 0, src4);
 800092e:	4b0a      	ldr	r3, [pc, #40]	; (8000958 <Scan_SensorLCD+0x80>)
 8000930:	9300      	str	r3, [sp, #0]
 8000932:	2300      	movs	r3, #0
 8000934:	2248      	movs	r2, #72	; 0x48
 8000936:	2100      	movs	r1, #0
 8000938:	4803      	ldr	r0, [pc, #12]	; (8000948 <Scan_SensorLCD+0x70>)
 800093a:	f002 f9e9 	bl	8002d10 <ucg_DrawString>
}
 800093e:	bf00      	nop
 8000940:	46bd      	mov	sp, r7
 8000942:	bd80      	pop	{r7, pc}
 8000944:	08004918 	.word	0x08004918
 8000948:	200000a8 	.word	0x200000a8
 800094c:	20000190 	.word	0x20000190
 8000950:	200001bc 	.word	0x200001bc
 8000954:	08004928 	.word	0x08004928
 8000958:	200001a4 	.word	0x200001a4
 800095c:	200001bd 	.word	0x200001bd
 8000960:	08004938 	.word	0x08004938

08000964 <Scan_TimeSensor>:
* @brief	Scan period 1s
* @param	None
* @retval	None
*/
void Scan_TimeSensor(uint32_t byRepeats)
{
 8000964:	b580      	push	{r7, lr}
 8000966:	b084      	sub	sp, #16
 8000968:	af02      	add	r7, sp, #8
 800096a:	6078      	str	r0, [r7, #4]
	if (idTimer != NO_TIMER) {
 800096c:	4b0c      	ldr	r3, [pc, #48]	; (80009a0 <Scan_TimeSensor+0x3c>)
 800096e:	681b      	ldr	r3, [r3, #0]
 8000970:	2bff      	cmp	r3, #255	; 0xff
 8000972:	d005      	beq.n	8000980 <Scan_TimeSensor+0x1c>
	TimerStop(idTimer);
 8000974:	4b0a      	ldr	r3, [pc, #40]	; (80009a0 <Scan_TimeSensor+0x3c>)
 8000976:	681b      	ldr	r3, [r3, #0]
 8000978:	b2db      	uxtb	r3, r3
 800097a:	4618      	mov	r0, r3
 800097c:	f000 fe02 	bl	8001584 <TimerStop>
	}
	idTimer = TimerStart("Scan_sensor", byRepeats, TIMER_REPEAT_FOREVER, (void*) Scan_SensorLCD, NULL);
 8000980:	2300      	movs	r3, #0
 8000982:	9300      	str	r3, [sp, #0]
 8000984:	4b07      	ldr	r3, [pc, #28]	; (80009a4 <Scan_TimeSensor+0x40>)
 8000986:	22ff      	movs	r2, #255	; 0xff
 8000988:	6879      	ldr	r1, [r7, #4]
 800098a:	4807      	ldr	r0, [pc, #28]	; (80009a8 <Scan_TimeSensor+0x44>)
 800098c:	f000 fd98 	bl	80014c0 <TimerStart>
 8000990:	4603      	mov	r3, r0
 8000992:	461a      	mov	r2, r3
 8000994:	4b02      	ldr	r3, [pc, #8]	; (80009a0 <Scan_TimeSensor+0x3c>)
 8000996:	601a      	str	r2, [r3, #0]
}
 8000998:	bf00      	nop
 800099a:	3708      	adds	r7, #8
 800099c:	46bd      	mov	sp, r7
 800099e:	bd80      	pop	{r7, pc}
 80009a0:	20000164 	.word	0x20000164
 80009a4:	080008d9 	.word	0x080008d9
 80009a8:	0800494c 	.word	0x0800494c

080009ac <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80009ac:	b580      	push	{r7, lr}
 80009ae:	b086      	sub	sp, #24
 80009b0:	af00      	add	r7, sp, #0
 80009b2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80009b4:	4a14      	ldr	r2, [pc, #80]	; (8000a08 <_sbrk+0x5c>)
 80009b6:	4b15      	ldr	r3, [pc, #84]	; (8000a0c <_sbrk+0x60>)
 80009b8:	1ad3      	subs	r3, r2, r3
 80009ba:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80009bc:	697b      	ldr	r3, [r7, #20]
 80009be:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80009c0:	4b13      	ldr	r3, [pc, #76]	; (8000a10 <_sbrk+0x64>)
 80009c2:	681b      	ldr	r3, [r3, #0]
 80009c4:	2b00      	cmp	r3, #0
 80009c6:	d102      	bne.n	80009ce <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80009c8:	4b11      	ldr	r3, [pc, #68]	; (8000a10 <_sbrk+0x64>)
 80009ca:	4a12      	ldr	r2, [pc, #72]	; (8000a14 <_sbrk+0x68>)
 80009cc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80009ce:	4b10      	ldr	r3, [pc, #64]	; (8000a10 <_sbrk+0x64>)
 80009d0:	681a      	ldr	r2, [r3, #0]
 80009d2:	687b      	ldr	r3, [r7, #4]
 80009d4:	4413      	add	r3, r2
 80009d6:	693a      	ldr	r2, [r7, #16]
 80009d8:	429a      	cmp	r2, r3
 80009da:	d207      	bcs.n	80009ec <_sbrk+0x40>
  {
    errno = ENOMEM;
 80009dc:	f003 faee 	bl	8003fbc <__errno>
 80009e0:	4603      	mov	r3, r0
 80009e2:	220c      	movs	r2, #12
 80009e4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80009e6:	f04f 33ff 	mov.w	r3, #4294967295
 80009ea:	e009      	b.n	8000a00 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80009ec:	4b08      	ldr	r3, [pc, #32]	; (8000a10 <_sbrk+0x64>)
 80009ee:	681b      	ldr	r3, [r3, #0]
 80009f0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80009f2:	4b07      	ldr	r3, [pc, #28]	; (8000a10 <_sbrk+0x64>)
 80009f4:	681a      	ldr	r2, [r3, #0]
 80009f6:	687b      	ldr	r3, [r7, #4]
 80009f8:	4413      	add	r3, r2
 80009fa:	4a05      	ldr	r2, [pc, #20]	; (8000a10 <_sbrk+0x64>)
 80009fc:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80009fe:	68fb      	ldr	r3, [r7, #12]
}
 8000a00:	4618      	mov	r0, r3
 8000a02:	3718      	adds	r7, #24
 8000a04:	46bd      	mov	sp, r7
 8000a06:	bd80      	pop	{r7, pc}
 8000a08:	20018000 	.word	0x20018000
 8000a0c:	00000400 	.word	0x00000400
 8000a10:	200001c0 	.word	0x200001c0
 8000a14:	20001380 	.word	0x20001380

08000a18 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000a18:	480d      	ldr	r0, [pc, #52]	; (8000a50 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000a1a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000a1c:	f000 f826 	bl	8000a6c <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000a20:	480c      	ldr	r0, [pc, #48]	; (8000a54 <LoopForever+0x6>)
  ldr r1, =_edata
 8000a22:	490d      	ldr	r1, [pc, #52]	; (8000a58 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000a24:	4a0d      	ldr	r2, [pc, #52]	; (8000a5c <LoopForever+0xe>)
  movs r3, #0
 8000a26:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000a28:	e002      	b.n	8000a30 <LoopCopyDataInit>

08000a2a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000a2a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000a2c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000a2e:	3304      	adds	r3, #4

08000a30 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000a30:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000a32:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000a34:	d3f9      	bcc.n	8000a2a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000a36:	4a0a      	ldr	r2, [pc, #40]	; (8000a60 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000a38:	4c0a      	ldr	r4, [pc, #40]	; (8000a64 <LoopForever+0x16>)
  movs r3, #0
 8000a3a:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000a3c:	e001      	b.n	8000a42 <LoopFillZerobss>

08000a3e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000a3e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000a40:	3204      	adds	r2, #4

08000a42 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000a42:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000a44:	d3fb      	bcc.n	8000a3e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000a46:	f003 fabf 	bl	8003fc8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000a4a:	f7ff fc19 	bl	8000280 <main>

08000a4e <LoopForever>:

LoopForever:
  b LoopForever
 8000a4e:	e7fe      	b.n	8000a4e <LoopForever>
  ldr   r0, =_estack
 8000a50:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000a54:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000a58:	2000008c 	.word	0x2000008c
  ldr r2, =_sidata
 8000a5c:	0800522c 	.word	0x0800522c
  ldr r2, =_sbss
 8000a60:	2000008c 	.word	0x2000008c
  ldr r4, =_ebss
 8000a64:	20001380 	.word	0x20001380

08000a68 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000a68:	e7fe      	b.n	8000a68 <ADC_IRQHandler>
	...

08000a6c <SystemInit>:
 8000a6c:	b580      	push	{r7, lr}
 8000a6e:	af00      	add	r7, sp, #0
 8000a70:	4b16      	ldr	r3, [pc, #88]	; (8000acc <SystemInit+0x60>)
 8000a72:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000a76:	4a15      	ldr	r2, [pc, #84]	; (8000acc <SystemInit+0x60>)
 8000a78:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000a7c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8000a80:	4b13      	ldr	r3, [pc, #76]	; (8000ad0 <SystemInit+0x64>)
 8000a82:	681b      	ldr	r3, [r3, #0]
 8000a84:	4a12      	ldr	r2, [pc, #72]	; (8000ad0 <SystemInit+0x64>)
 8000a86:	f043 0301 	orr.w	r3, r3, #1
 8000a8a:	6013      	str	r3, [r2, #0]
 8000a8c:	4b10      	ldr	r3, [pc, #64]	; (8000ad0 <SystemInit+0x64>)
 8000a8e:	2200      	movs	r2, #0
 8000a90:	609a      	str	r2, [r3, #8]
 8000a92:	4b0f      	ldr	r3, [pc, #60]	; (8000ad0 <SystemInit+0x64>)
 8000a94:	681b      	ldr	r3, [r3, #0]
 8000a96:	4a0e      	ldr	r2, [pc, #56]	; (8000ad0 <SystemInit+0x64>)
 8000a98:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8000a9c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8000aa0:	6013      	str	r3, [r2, #0]
 8000aa2:	4b0b      	ldr	r3, [pc, #44]	; (8000ad0 <SystemInit+0x64>)
 8000aa4:	4a0b      	ldr	r2, [pc, #44]	; (8000ad4 <SystemInit+0x68>)
 8000aa6:	605a      	str	r2, [r3, #4]
 8000aa8:	4b09      	ldr	r3, [pc, #36]	; (8000ad0 <SystemInit+0x64>)
 8000aaa:	681b      	ldr	r3, [r3, #0]
 8000aac:	4a08      	ldr	r2, [pc, #32]	; (8000ad0 <SystemInit+0x64>)
 8000aae:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8000ab2:	6013      	str	r3, [r2, #0]
 8000ab4:	4b06      	ldr	r3, [pc, #24]	; (8000ad0 <SystemInit+0x64>)
 8000ab6:	2200      	movs	r2, #0
 8000ab8:	60da      	str	r2, [r3, #12]
 8000aba:	f000 f889 	bl	8000bd0 <SetSysClock>
 8000abe:	4b03      	ldr	r3, [pc, #12]	; (8000acc <SystemInit+0x60>)
 8000ac0:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8000ac4:	609a      	str	r2, [r3, #8]
 8000ac6:	bf00      	nop
 8000ac8:	bd80      	pop	{r7, pc}
 8000aca:	bf00      	nop
 8000acc:	e000ed00 	.word	0xe000ed00
 8000ad0:	40023800 	.word	0x40023800
 8000ad4:	24003010 	.word	0x24003010

08000ad8 <SystemCoreClockUpdate>:
 8000ad8:	b480      	push	{r7}
 8000ada:	b087      	sub	sp, #28
 8000adc:	af00      	add	r7, sp, #0
 8000ade:	2300      	movs	r3, #0
 8000ae0:	613b      	str	r3, [r7, #16]
 8000ae2:	2300      	movs	r3, #0
 8000ae4:	617b      	str	r3, [r7, #20]
 8000ae6:	2302      	movs	r3, #2
 8000ae8:	60fb      	str	r3, [r7, #12]
 8000aea:	2300      	movs	r3, #0
 8000aec:	60bb      	str	r3, [r7, #8]
 8000aee:	2302      	movs	r3, #2
 8000af0:	607b      	str	r3, [r7, #4]
 8000af2:	4b32      	ldr	r3, [pc, #200]	; (8000bbc <SystemCoreClockUpdate+0xe4>)
 8000af4:	689b      	ldr	r3, [r3, #8]
 8000af6:	f003 030c 	and.w	r3, r3, #12
 8000afa:	613b      	str	r3, [r7, #16]
 8000afc:	693b      	ldr	r3, [r7, #16]
 8000afe:	2b04      	cmp	r3, #4
 8000b00:	d007      	beq.n	8000b12 <SystemCoreClockUpdate+0x3a>
 8000b02:	2b08      	cmp	r3, #8
 8000b04:	d009      	beq.n	8000b1a <SystemCoreClockUpdate+0x42>
 8000b06:	2b00      	cmp	r3, #0
 8000b08:	d13d      	bne.n	8000b86 <SystemCoreClockUpdate+0xae>
 8000b0a:	4b2d      	ldr	r3, [pc, #180]	; (8000bc0 <SystemCoreClockUpdate+0xe8>)
 8000b0c:	4a2d      	ldr	r2, [pc, #180]	; (8000bc4 <SystemCoreClockUpdate+0xec>)
 8000b0e:	601a      	str	r2, [r3, #0]
 8000b10:	e03d      	b.n	8000b8e <SystemCoreClockUpdate+0xb6>
 8000b12:	4b2b      	ldr	r3, [pc, #172]	; (8000bc0 <SystemCoreClockUpdate+0xe8>)
 8000b14:	4a2c      	ldr	r2, [pc, #176]	; (8000bc8 <SystemCoreClockUpdate+0xf0>)
 8000b16:	601a      	str	r2, [r3, #0]
 8000b18:	e039      	b.n	8000b8e <SystemCoreClockUpdate+0xb6>
 8000b1a:	4b28      	ldr	r3, [pc, #160]	; (8000bbc <SystemCoreClockUpdate+0xe4>)
 8000b1c:	685b      	ldr	r3, [r3, #4]
 8000b1e:	0d9b      	lsrs	r3, r3, #22
 8000b20:	f003 0301 	and.w	r3, r3, #1
 8000b24:	60bb      	str	r3, [r7, #8]
 8000b26:	4b25      	ldr	r3, [pc, #148]	; (8000bbc <SystemCoreClockUpdate+0xe4>)
 8000b28:	685b      	ldr	r3, [r3, #4]
 8000b2a:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8000b2e:	607b      	str	r3, [r7, #4]
 8000b30:	68bb      	ldr	r3, [r7, #8]
 8000b32:	2b00      	cmp	r3, #0
 8000b34:	d00c      	beq.n	8000b50 <SystemCoreClockUpdate+0x78>
 8000b36:	4a24      	ldr	r2, [pc, #144]	; (8000bc8 <SystemCoreClockUpdate+0xf0>)
 8000b38:	687b      	ldr	r3, [r7, #4]
 8000b3a:	fbb2 f3f3 	udiv	r3, r2, r3
 8000b3e:	4a1f      	ldr	r2, [pc, #124]	; (8000bbc <SystemCoreClockUpdate+0xe4>)
 8000b40:	6852      	ldr	r2, [r2, #4]
 8000b42:	0992      	lsrs	r2, r2, #6
 8000b44:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8000b48:	fb02 f303 	mul.w	r3, r2, r3
 8000b4c:	617b      	str	r3, [r7, #20]
 8000b4e:	e00b      	b.n	8000b68 <SystemCoreClockUpdate+0x90>
 8000b50:	4a1c      	ldr	r2, [pc, #112]	; (8000bc4 <SystemCoreClockUpdate+0xec>)
 8000b52:	687b      	ldr	r3, [r7, #4]
 8000b54:	fbb2 f3f3 	udiv	r3, r2, r3
 8000b58:	4a18      	ldr	r2, [pc, #96]	; (8000bbc <SystemCoreClockUpdate+0xe4>)
 8000b5a:	6852      	ldr	r2, [r2, #4]
 8000b5c:	0992      	lsrs	r2, r2, #6
 8000b5e:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8000b62:	fb02 f303 	mul.w	r3, r2, r3
 8000b66:	617b      	str	r3, [r7, #20]
 8000b68:	4b14      	ldr	r3, [pc, #80]	; (8000bbc <SystemCoreClockUpdate+0xe4>)
 8000b6a:	685b      	ldr	r3, [r3, #4]
 8000b6c:	0c1b      	lsrs	r3, r3, #16
 8000b6e:	f003 0303 	and.w	r3, r3, #3
 8000b72:	3301      	adds	r3, #1
 8000b74:	005b      	lsls	r3, r3, #1
 8000b76:	60fb      	str	r3, [r7, #12]
 8000b78:	697a      	ldr	r2, [r7, #20]
 8000b7a:	68fb      	ldr	r3, [r7, #12]
 8000b7c:	fbb2 f3f3 	udiv	r3, r2, r3
 8000b80:	4a0f      	ldr	r2, [pc, #60]	; (8000bc0 <SystemCoreClockUpdate+0xe8>)
 8000b82:	6013      	str	r3, [r2, #0]
 8000b84:	e003      	b.n	8000b8e <SystemCoreClockUpdate+0xb6>
 8000b86:	4b0e      	ldr	r3, [pc, #56]	; (8000bc0 <SystemCoreClockUpdate+0xe8>)
 8000b88:	4a0e      	ldr	r2, [pc, #56]	; (8000bc4 <SystemCoreClockUpdate+0xec>)
 8000b8a:	601a      	str	r2, [r3, #0]
 8000b8c:	bf00      	nop
 8000b8e:	4b0b      	ldr	r3, [pc, #44]	; (8000bbc <SystemCoreClockUpdate+0xe4>)
 8000b90:	689b      	ldr	r3, [r3, #8]
 8000b92:	091b      	lsrs	r3, r3, #4
 8000b94:	f003 030f 	and.w	r3, r3, #15
 8000b98:	4a0c      	ldr	r2, [pc, #48]	; (8000bcc <SystemCoreClockUpdate+0xf4>)
 8000b9a:	5cd3      	ldrb	r3, [r2, r3]
 8000b9c:	b2db      	uxtb	r3, r3
 8000b9e:	613b      	str	r3, [r7, #16]
 8000ba0:	4b07      	ldr	r3, [pc, #28]	; (8000bc0 <SystemCoreClockUpdate+0xe8>)
 8000ba2:	681a      	ldr	r2, [r3, #0]
 8000ba4:	693b      	ldr	r3, [r7, #16]
 8000ba6:	fa22 f303 	lsr.w	r3, r2, r3
 8000baa:	4a05      	ldr	r2, [pc, #20]	; (8000bc0 <SystemCoreClockUpdate+0xe8>)
 8000bac:	6013      	str	r3, [r2, #0]
 8000bae:	bf00      	nop
 8000bb0:	371c      	adds	r7, #28
 8000bb2:	46bd      	mov	sp, r7
 8000bb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bb8:	4770      	bx	lr
 8000bba:	bf00      	nop
 8000bbc:	40023800 	.word	0x40023800
 8000bc0:	20000000 	.word	0x20000000
 8000bc4:	00f42400 	.word	0x00f42400
 8000bc8:	017d7840 	.word	0x017d7840
 8000bcc:	20000004 	.word	0x20000004

08000bd0 <SetSysClock>:
 8000bd0:	b480      	push	{r7}
 8000bd2:	af00      	add	r7, sp, #0
 8000bd4:	4b22      	ldr	r3, [pc, #136]	; (8000c60 <SetSysClock+0x90>)
 8000bd6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000bd8:	4a21      	ldr	r2, [pc, #132]	; (8000c60 <SetSysClock+0x90>)
 8000bda:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000bde:	6413      	str	r3, [r2, #64]	; 0x40
 8000be0:	4b20      	ldr	r3, [pc, #128]	; (8000c64 <SetSysClock+0x94>)
 8000be2:	681b      	ldr	r3, [r3, #0]
 8000be4:	4a1f      	ldr	r2, [pc, #124]	; (8000c64 <SetSysClock+0x94>)
 8000be6:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8000bea:	6013      	str	r3, [r2, #0]
 8000bec:	4b1c      	ldr	r3, [pc, #112]	; (8000c60 <SetSysClock+0x90>)
 8000bee:	4a1c      	ldr	r2, [pc, #112]	; (8000c60 <SetSysClock+0x90>)
 8000bf0:	689b      	ldr	r3, [r3, #8]
 8000bf2:	6093      	str	r3, [r2, #8]
 8000bf4:	4b1a      	ldr	r3, [pc, #104]	; (8000c60 <SetSysClock+0x90>)
 8000bf6:	4a1a      	ldr	r2, [pc, #104]	; (8000c60 <SetSysClock+0x90>)
 8000bf8:	689b      	ldr	r3, [r3, #8]
 8000bfa:	6093      	str	r3, [r2, #8]
 8000bfc:	4b18      	ldr	r3, [pc, #96]	; (8000c60 <SetSysClock+0x90>)
 8000bfe:	689b      	ldr	r3, [r3, #8]
 8000c00:	4a17      	ldr	r2, [pc, #92]	; (8000c60 <SetSysClock+0x90>)
 8000c02:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000c06:	6093      	str	r3, [r2, #8]
 8000c08:	4b15      	ldr	r3, [pc, #84]	; (8000c60 <SetSysClock+0x90>)
 8000c0a:	4a17      	ldr	r2, [pc, #92]	; (8000c68 <SetSysClock+0x98>)
 8000c0c:	605a      	str	r2, [r3, #4]
 8000c0e:	4b14      	ldr	r3, [pc, #80]	; (8000c60 <SetSysClock+0x90>)
 8000c10:	681b      	ldr	r3, [r3, #0]
 8000c12:	4a13      	ldr	r2, [pc, #76]	; (8000c60 <SetSysClock+0x90>)
 8000c14:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000c18:	6013      	str	r3, [r2, #0]
 8000c1a:	bf00      	nop
 8000c1c:	4b10      	ldr	r3, [pc, #64]	; (8000c60 <SetSysClock+0x90>)
 8000c1e:	681b      	ldr	r3, [r3, #0]
 8000c20:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8000c24:	2b00      	cmp	r3, #0
 8000c26:	d0f9      	beq.n	8000c1c <SetSysClock+0x4c>
 8000c28:	4b10      	ldr	r3, [pc, #64]	; (8000c6c <SetSysClock+0x9c>)
 8000c2a:	f240 6202 	movw	r2, #1538	; 0x602
 8000c2e:	601a      	str	r2, [r3, #0]
 8000c30:	4b0b      	ldr	r3, [pc, #44]	; (8000c60 <SetSysClock+0x90>)
 8000c32:	689b      	ldr	r3, [r3, #8]
 8000c34:	4a0a      	ldr	r2, [pc, #40]	; (8000c60 <SetSysClock+0x90>)
 8000c36:	f023 0303 	bic.w	r3, r3, #3
 8000c3a:	6093      	str	r3, [r2, #8]
 8000c3c:	4b08      	ldr	r3, [pc, #32]	; (8000c60 <SetSysClock+0x90>)
 8000c3e:	689b      	ldr	r3, [r3, #8]
 8000c40:	4a07      	ldr	r2, [pc, #28]	; (8000c60 <SetSysClock+0x90>)
 8000c42:	f043 0302 	orr.w	r3, r3, #2
 8000c46:	6093      	str	r3, [r2, #8]
 8000c48:	bf00      	nop
 8000c4a:	4b05      	ldr	r3, [pc, #20]	; (8000c60 <SetSysClock+0x90>)
 8000c4c:	689b      	ldr	r3, [r3, #8]
 8000c4e:	f003 030c 	and.w	r3, r3, #12
 8000c52:	2b08      	cmp	r3, #8
 8000c54:	d1f9      	bne.n	8000c4a <SetSysClock+0x7a>
 8000c56:	bf00      	nop
 8000c58:	46bd      	mov	sp, r7
 8000c5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c5e:	4770      	bx	lr
 8000c60:	40023800 	.word	0x40023800
 8000c64:	40007000 	.word	0x40007000
 8000c68:	08015410 	.word	0x08015410
 8000c6c:	40023c00 	.word	0x40023c00

08000c70 <GPIO_Init>:
 8000c70:	b480      	push	{r7}
 8000c72:	b087      	sub	sp, #28
 8000c74:	af00      	add	r7, sp, #0
 8000c76:	6078      	str	r0, [r7, #4]
 8000c78:	6039      	str	r1, [r7, #0]
 8000c7a:	2300      	movs	r3, #0
 8000c7c:	617b      	str	r3, [r7, #20]
 8000c7e:	2300      	movs	r3, #0
 8000c80:	613b      	str	r3, [r7, #16]
 8000c82:	2300      	movs	r3, #0
 8000c84:	60fb      	str	r3, [r7, #12]
 8000c86:	2300      	movs	r3, #0
 8000c88:	617b      	str	r3, [r7, #20]
 8000c8a:	e076      	b.n	8000d7a <GPIO_Init+0x10a>
 8000c8c:	2201      	movs	r2, #1
 8000c8e:	697b      	ldr	r3, [r7, #20]
 8000c90:	fa02 f303 	lsl.w	r3, r2, r3
 8000c94:	613b      	str	r3, [r7, #16]
 8000c96:	683b      	ldr	r3, [r7, #0]
 8000c98:	681b      	ldr	r3, [r3, #0]
 8000c9a:	693a      	ldr	r2, [r7, #16]
 8000c9c:	4013      	ands	r3, r2
 8000c9e:	60fb      	str	r3, [r7, #12]
 8000ca0:	68fa      	ldr	r2, [r7, #12]
 8000ca2:	693b      	ldr	r3, [r7, #16]
 8000ca4:	429a      	cmp	r2, r3
 8000ca6:	d165      	bne.n	8000d74 <GPIO_Init+0x104>
 8000ca8:	687b      	ldr	r3, [r7, #4]
 8000caa:	681a      	ldr	r2, [r3, #0]
 8000cac:	697b      	ldr	r3, [r7, #20]
 8000cae:	005b      	lsls	r3, r3, #1
 8000cb0:	2103      	movs	r1, #3
 8000cb2:	fa01 f303 	lsl.w	r3, r1, r3
 8000cb6:	43db      	mvns	r3, r3
 8000cb8:	401a      	ands	r2, r3
 8000cba:	687b      	ldr	r3, [r7, #4]
 8000cbc:	601a      	str	r2, [r3, #0]
 8000cbe:	687b      	ldr	r3, [r7, #4]
 8000cc0:	681a      	ldr	r2, [r3, #0]
 8000cc2:	683b      	ldr	r3, [r7, #0]
 8000cc4:	791b      	ldrb	r3, [r3, #4]
 8000cc6:	4619      	mov	r1, r3
 8000cc8:	697b      	ldr	r3, [r7, #20]
 8000cca:	005b      	lsls	r3, r3, #1
 8000ccc:	fa01 f303 	lsl.w	r3, r1, r3
 8000cd0:	431a      	orrs	r2, r3
 8000cd2:	687b      	ldr	r3, [r7, #4]
 8000cd4:	601a      	str	r2, [r3, #0]
 8000cd6:	683b      	ldr	r3, [r7, #0]
 8000cd8:	791b      	ldrb	r3, [r3, #4]
 8000cda:	2b01      	cmp	r3, #1
 8000cdc:	d003      	beq.n	8000ce6 <GPIO_Init+0x76>
 8000cde:	683b      	ldr	r3, [r7, #0]
 8000ce0:	791b      	ldrb	r3, [r3, #4]
 8000ce2:	2b02      	cmp	r3, #2
 8000ce4:	d12e      	bne.n	8000d44 <GPIO_Init+0xd4>
 8000ce6:	687b      	ldr	r3, [r7, #4]
 8000ce8:	689a      	ldr	r2, [r3, #8]
 8000cea:	697b      	ldr	r3, [r7, #20]
 8000cec:	005b      	lsls	r3, r3, #1
 8000cee:	2103      	movs	r1, #3
 8000cf0:	fa01 f303 	lsl.w	r3, r1, r3
 8000cf4:	43db      	mvns	r3, r3
 8000cf6:	401a      	ands	r2, r3
 8000cf8:	687b      	ldr	r3, [r7, #4]
 8000cfa:	609a      	str	r2, [r3, #8]
 8000cfc:	687b      	ldr	r3, [r7, #4]
 8000cfe:	689a      	ldr	r2, [r3, #8]
 8000d00:	683b      	ldr	r3, [r7, #0]
 8000d02:	795b      	ldrb	r3, [r3, #5]
 8000d04:	4619      	mov	r1, r3
 8000d06:	697b      	ldr	r3, [r7, #20]
 8000d08:	005b      	lsls	r3, r3, #1
 8000d0a:	fa01 f303 	lsl.w	r3, r1, r3
 8000d0e:	431a      	orrs	r2, r3
 8000d10:	687b      	ldr	r3, [r7, #4]
 8000d12:	609a      	str	r2, [r3, #8]
 8000d14:	687b      	ldr	r3, [r7, #4]
 8000d16:	685a      	ldr	r2, [r3, #4]
 8000d18:	697b      	ldr	r3, [r7, #20]
 8000d1a:	b29b      	uxth	r3, r3
 8000d1c:	4619      	mov	r1, r3
 8000d1e:	2301      	movs	r3, #1
 8000d20:	408b      	lsls	r3, r1
 8000d22:	43db      	mvns	r3, r3
 8000d24:	401a      	ands	r2, r3
 8000d26:	687b      	ldr	r3, [r7, #4]
 8000d28:	605a      	str	r2, [r3, #4]
 8000d2a:	687b      	ldr	r3, [r7, #4]
 8000d2c:	685b      	ldr	r3, [r3, #4]
 8000d2e:	683a      	ldr	r2, [r7, #0]
 8000d30:	7992      	ldrb	r2, [r2, #6]
 8000d32:	4611      	mov	r1, r2
 8000d34:	697a      	ldr	r2, [r7, #20]
 8000d36:	b292      	uxth	r2, r2
 8000d38:	fa01 f202 	lsl.w	r2, r1, r2
 8000d3c:	b292      	uxth	r2, r2
 8000d3e:	431a      	orrs	r2, r3
 8000d40:	687b      	ldr	r3, [r7, #4]
 8000d42:	605a      	str	r2, [r3, #4]
 8000d44:	687b      	ldr	r3, [r7, #4]
 8000d46:	68da      	ldr	r2, [r3, #12]
 8000d48:	697b      	ldr	r3, [r7, #20]
 8000d4a:	b29b      	uxth	r3, r3
 8000d4c:	005b      	lsls	r3, r3, #1
 8000d4e:	2103      	movs	r1, #3
 8000d50:	fa01 f303 	lsl.w	r3, r1, r3
 8000d54:	43db      	mvns	r3, r3
 8000d56:	401a      	ands	r2, r3
 8000d58:	687b      	ldr	r3, [r7, #4]
 8000d5a:	60da      	str	r2, [r3, #12]
 8000d5c:	687b      	ldr	r3, [r7, #4]
 8000d5e:	68da      	ldr	r2, [r3, #12]
 8000d60:	683b      	ldr	r3, [r7, #0]
 8000d62:	79db      	ldrb	r3, [r3, #7]
 8000d64:	4619      	mov	r1, r3
 8000d66:	697b      	ldr	r3, [r7, #20]
 8000d68:	005b      	lsls	r3, r3, #1
 8000d6a:	fa01 f303 	lsl.w	r3, r1, r3
 8000d6e:	431a      	orrs	r2, r3
 8000d70:	687b      	ldr	r3, [r7, #4]
 8000d72:	60da      	str	r2, [r3, #12]
 8000d74:	697b      	ldr	r3, [r7, #20]
 8000d76:	3301      	adds	r3, #1
 8000d78:	617b      	str	r3, [r7, #20]
 8000d7a:	697b      	ldr	r3, [r7, #20]
 8000d7c:	2b0f      	cmp	r3, #15
 8000d7e:	d985      	bls.n	8000c8c <GPIO_Init+0x1c>
 8000d80:	bf00      	nop
 8000d82:	371c      	adds	r7, #28
 8000d84:	46bd      	mov	sp, r7
 8000d86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d8a:	4770      	bx	lr

08000d8c <GPIO_WriteBit>:
 8000d8c:	b480      	push	{r7}
 8000d8e:	b083      	sub	sp, #12
 8000d90:	af00      	add	r7, sp, #0
 8000d92:	6078      	str	r0, [r7, #4]
 8000d94:	460b      	mov	r3, r1
 8000d96:	807b      	strh	r3, [r7, #2]
 8000d98:	4613      	mov	r3, r2
 8000d9a:	707b      	strb	r3, [r7, #1]
 8000d9c:	787b      	ldrb	r3, [r7, #1]
 8000d9e:	2b00      	cmp	r3, #0
 8000da0:	d003      	beq.n	8000daa <GPIO_WriteBit+0x1e>
 8000da2:	687b      	ldr	r3, [r7, #4]
 8000da4:	887a      	ldrh	r2, [r7, #2]
 8000da6:	831a      	strh	r2, [r3, #24]
 8000da8:	e002      	b.n	8000db0 <GPIO_WriteBit+0x24>
 8000daa:	687b      	ldr	r3, [r7, #4]
 8000dac:	887a      	ldrh	r2, [r7, #2]
 8000dae:	835a      	strh	r2, [r3, #26]
 8000db0:	bf00      	nop
 8000db2:	370c      	adds	r7, #12
 8000db4:	46bd      	mov	sp, r7
 8000db6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dba:	4770      	bx	lr

08000dbc <GPIO_PinAFConfig>:
 8000dbc:	b480      	push	{r7}
 8000dbe:	b085      	sub	sp, #20
 8000dc0:	af00      	add	r7, sp, #0
 8000dc2:	6078      	str	r0, [r7, #4]
 8000dc4:	460b      	mov	r3, r1
 8000dc6:	807b      	strh	r3, [r7, #2]
 8000dc8:	4613      	mov	r3, r2
 8000dca:	707b      	strb	r3, [r7, #1]
 8000dcc:	2300      	movs	r3, #0
 8000dce:	60fb      	str	r3, [r7, #12]
 8000dd0:	2300      	movs	r3, #0
 8000dd2:	60bb      	str	r3, [r7, #8]
 8000dd4:	787a      	ldrb	r2, [r7, #1]
 8000dd6:	887b      	ldrh	r3, [r7, #2]
 8000dd8:	f003 0307 	and.w	r3, r3, #7
 8000ddc:	009b      	lsls	r3, r3, #2
 8000dde:	fa02 f303 	lsl.w	r3, r2, r3
 8000de2:	60fb      	str	r3, [r7, #12]
 8000de4:	887b      	ldrh	r3, [r7, #2]
 8000de6:	08db      	lsrs	r3, r3, #3
 8000de8:	b29b      	uxth	r3, r3
 8000dea:	461a      	mov	r2, r3
 8000dec:	687b      	ldr	r3, [r7, #4]
 8000dee:	3208      	adds	r2, #8
 8000df0:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000df4:	887b      	ldrh	r3, [r7, #2]
 8000df6:	f003 0307 	and.w	r3, r3, #7
 8000dfa:	009b      	lsls	r3, r3, #2
 8000dfc:	210f      	movs	r1, #15
 8000dfe:	fa01 f303 	lsl.w	r3, r1, r3
 8000e02:	43db      	mvns	r3, r3
 8000e04:	8879      	ldrh	r1, [r7, #2]
 8000e06:	08c9      	lsrs	r1, r1, #3
 8000e08:	b289      	uxth	r1, r1
 8000e0a:	4608      	mov	r0, r1
 8000e0c:	ea02 0103 	and.w	r1, r2, r3
 8000e10:	687b      	ldr	r3, [r7, #4]
 8000e12:	f100 0208 	add.w	r2, r0, #8
 8000e16:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8000e1a:	887b      	ldrh	r3, [r7, #2]
 8000e1c:	08db      	lsrs	r3, r3, #3
 8000e1e:	b29b      	uxth	r3, r3
 8000e20:	461a      	mov	r2, r3
 8000e22:	687b      	ldr	r3, [r7, #4]
 8000e24:	3208      	adds	r2, #8
 8000e26:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8000e2a:	68fa      	ldr	r2, [r7, #12]
 8000e2c:	4313      	orrs	r3, r2
 8000e2e:	60bb      	str	r3, [r7, #8]
 8000e30:	887b      	ldrh	r3, [r7, #2]
 8000e32:	08db      	lsrs	r3, r3, #3
 8000e34:	b29b      	uxth	r3, r3
 8000e36:	461a      	mov	r2, r3
 8000e38:	687b      	ldr	r3, [r7, #4]
 8000e3a:	3208      	adds	r2, #8
 8000e3c:	68b9      	ldr	r1, [r7, #8]
 8000e3e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8000e42:	bf00      	nop
 8000e44:	3714      	adds	r7, #20
 8000e46:	46bd      	mov	sp, r7
 8000e48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e4c:	4770      	bx	lr
	...

08000e50 <I2C_Init>:
 8000e50:	b580      	push	{r7, lr}
 8000e52:	b08a      	sub	sp, #40	; 0x28
 8000e54:	af00      	add	r7, sp, #0
 8000e56:	6078      	str	r0, [r7, #4]
 8000e58:	6039      	str	r1, [r7, #0]
 8000e5a:	2300      	movs	r3, #0
 8000e5c:	84fb      	strh	r3, [r7, #38]	; 0x26
 8000e5e:	2300      	movs	r3, #0
 8000e60:	847b      	strh	r3, [r7, #34]	; 0x22
 8000e62:	2304      	movs	r3, #4
 8000e64:	84bb      	strh	r3, [r7, #36]	; 0x24
 8000e66:	4b57      	ldr	r3, [pc, #348]	; (8000fc4 <I2C_Init+0x174>)
 8000e68:	61fb      	str	r3, [r7, #28]
 8000e6a:	687b      	ldr	r3, [r7, #4]
 8000e6c:	889b      	ldrh	r3, [r3, #4]
 8000e6e:	84fb      	strh	r3, [r7, #38]	; 0x26
 8000e70:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8000e72:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8000e76:	84fb      	strh	r3, [r7, #38]	; 0x26
 8000e78:	f107 030c 	add.w	r3, r7, #12
 8000e7c:	4618      	mov	r0, r3
 8000e7e:	f000 f9c9 	bl	8001214 <RCC_GetClocksFreq>
 8000e82:	697b      	ldr	r3, [r7, #20]
 8000e84:	61fb      	str	r3, [r7, #28]
 8000e86:	69fb      	ldr	r3, [r7, #28]
 8000e88:	4a4f      	ldr	r2, [pc, #316]	; (8000fc8 <I2C_Init+0x178>)
 8000e8a:	fba2 2303 	umull	r2, r3, r2, r3
 8000e8e:	0c9b      	lsrs	r3, r3, #18
 8000e90:	847b      	strh	r3, [r7, #34]	; 0x22
 8000e92:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8000e94:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 8000e96:	4313      	orrs	r3, r2
 8000e98:	84fb      	strh	r3, [r7, #38]	; 0x26
 8000e9a:	687b      	ldr	r3, [r7, #4]
 8000e9c:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8000e9e:	809a      	strh	r2, [r3, #4]
 8000ea0:	687b      	ldr	r3, [r7, #4]
 8000ea2:	881b      	ldrh	r3, [r3, #0]
 8000ea4:	b29b      	uxth	r3, r3
 8000ea6:	f023 0301 	bic.w	r3, r3, #1
 8000eaa:	b29a      	uxth	r2, r3
 8000eac:	687b      	ldr	r3, [r7, #4]
 8000eae:	801a      	strh	r2, [r3, #0]
 8000eb0:	2300      	movs	r3, #0
 8000eb2:	84fb      	strh	r3, [r7, #38]	; 0x26
 8000eb4:	683b      	ldr	r3, [r7, #0]
 8000eb6:	681b      	ldr	r3, [r3, #0]
 8000eb8:	4a44      	ldr	r2, [pc, #272]	; (8000fcc <I2C_Init+0x17c>)
 8000eba:	4293      	cmp	r3, r2
 8000ebc:	d815      	bhi.n	8000eea <I2C_Init+0x9a>
 8000ebe:	683b      	ldr	r3, [r7, #0]
 8000ec0:	681b      	ldr	r3, [r3, #0]
 8000ec2:	005b      	lsls	r3, r3, #1
 8000ec4:	69fa      	ldr	r2, [r7, #28]
 8000ec6:	fbb2 f3f3 	udiv	r3, r2, r3
 8000eca:	84bb      	strh	r3, [r7, #36]	; 0x24
 8000ecc:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8000ece:	2b03      	cmp	r3, #3
 8000ed0:	d801      	bhi.n	8000ed6 <I2C_Init+0x86>
 8000ed2:	2304      	movs	r3, #4
 8000ed4:	84bb      	strh	r3, [r7, #36]	; 0x24
 8000ed6:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8000ed8:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8000eda:	4313      	orrs	r3, r2
 8000edc:	84fb      	strh	r3, [r7, #38]	; 0x26
 8000ede:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 8000ee0:	3301      	adds	r3, #1
 8000ee2:	b29a      	uxth	r2, r3
 8000ee4:	687b      	ldr	r3, [r7, #4]
 8000ee6:	841a      	strh	r2, [r3, #32]
 8000ee8:	e040      	b.n	8000f6c <I2C_Init+0x11c>
 8000eea:	683b      	ldr	r3, [r7, #0]
 8000eec:	88db      	ldrh	r3, [r3, #6]
 8000eee:	f64b 72ff 	movw	r2, #49151	; 0xbfff
 8000ef2:	4293      	cmp	r3, r2
 8000ef4:	d109      	bne.n	8000f0a <I2C_Init+0xba>
 8000ef6:	683b      	ldr	r3, [r7, #0]
 8000ef8:	681a      	ldr	r2, [r3, #0]
 8000efa:	4613      	mov	r3, r2
 8000efc:	005b      	lsls	r3, r3, #1
 8000efe:	4413      	add	r3, r2
 8000f00:	69fa      	ldr	r2, [r7, #28]
 8000f02:	fbb2 f3f3 	udiv	r3, r2, r3
 8000f06:	84bb      	strh	r3, [r7, #36]	; 0x24
 8000f08:	e00e      	b.n	8000f28 <I2C_Init+0xd8>
 8000f0a:	683b      	ldr	r3, [r7, #0]
 8000f0c:	681a      	ldr	r2, [r3, #0]
 8000f0e:	4613      	mov	r3, r2
 8000f10:	009b      	lsls	r3, r3, #2
 8000f12:	4413      	add	r3, r2
 8000f14:	009a      	lsls	r2, r3, #2
 8000f16:	4413      	add	r3, r2
 8000f18:	69fa      	ldr	r2, [r7, #28]
 8000f1a:	fbb2 f3f3 	udiv	r3, r2, r3
 8000f1e:	84bb      	strh	r3, [r7, #36]	; 0x24
 8000f20:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8000f22:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000f26:	84bb      	strh	r3, [r7, #36]	; 0x24
 8000f28:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8000f2a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8000f2e:	2b00      	cmp	r3, #0
 8000f30:	d103      	bne.n	8000f3a <I2C_Init+0xea>
 8000f32:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8000f34:	f043 0301 	orr.w	r3, r3, #1
 8000f38:	84bb      	strh	r3, [r7, #36]	; 0x24
 8000f3a:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 8000f3c:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8000f3e:	4313      	orrs	r3, r2
 8000f40:	b29b      	uxth	r3, r3
 8000f42:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8000f46:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8000f4a:	84fb      	strh	r3, [r7, #38]	; 0x26
 8000f4c:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 8000f4e:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8000f52:	fb02 f303 	mul.w	r3, r2, r3
 8000f56:	4a1e      	ldr	r2, [pc, #120]	; (8000fd0 <I2C_Init+0x180>)
 8000f58:	fb82 1203 	smull	r1, r2, r2, r3
 8000f5c:	1192      	asrs	r2, r2, #6
 8000f5e:	17db      	asrs	r3, r3, #31
 8000f60:	1ad3      	subs	r3, r2, r3
 8000f62:	b29b      	uxth	r3, r3
 8000f64:	3301      	adds	r3, #1
 8000f66:	b29a      	uxth	r2, r3
 8000f68:	687b      	ldr	r3, [r7, #4]
 8000f6a:	841a      	strh	r2, [r3, #32]
 8000f6c:	687b      	ldr	r3, [r7, #4]
 8000f6e:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8000f70:	839a      	strh	r2, [r3, #28]
 8000f72:	687b      	ldr	r3, [r7, #4]
 8000f74:	881b      	ldrh	r3, [r3, #0]
 8000f76:	b29b      	uxth	r3, r3
 8000f78:	f043 0301 	orr.w	r3, r3, #1
 8000f7c:	b29a      	uxth	r2, r3
 8000f7e:	687b      	ldr	r3, [r7, #4]
 8000f80:	801a      	strh	r2, [r3, #0]
 8000f82:	687b      	ldr	r3, [r7, #4]
 8000f84:	881b      	ldrh	r3, [r3, #0]
 8000f86:	84fb      	strh	r3, [r7, #38]	; 0x26
 8000f88:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8000f8a:	f423 6381 	bic.w	r3, r3, #1032	; 0x408
 8000f8e:	f023 0302 	bic.w	r3, r3, #2
 8000f92:	84fb      	strh	r3, [r7, #38]	; 0x26
 8000f94:	683b      	ldr	r3, [r7, #0]
 8000f96:	889a      	ldrh	r2, [r3, #4]
 8000f98:	683b      	ldr	r3, [r7, #0]
 8000f9a:	895b      	ldrh	r3, [r3, #10]
 8000f9c:	4313      	orrs	r3, r2
 8000f9e:	b29a      	uxth	r2, r3
 8000fa0:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8000fa2:	4313      	orrs	r3, r2
 8000fa4:	84fb      	strh	r3, [r7, #38]	; 0x26
 8000fa6:	687b      	ldr	r3, [r7, #4]
 8000fa8:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8000faa:	801a      	strh	r2, [r3, #0]
 8000fac:	683b      	ldr	r3, [r7, #0]
 8000fae:	899a      	ldrh	r2, [r3, #12]
 8000fb0:	683b      	ldr	r3, [r7, #0]
 8000fb2:	891b      	ldrh	r3, [r3, #8]
 8000fb4:	4313      	orrs	r3, r2
 8000fb6:	b29a      	uxth	r2, r3
 8000fb8:	687b      	ldr	r3, [r7, #4]
 8000fba:	811a      	strh	r2, [r3, #8]
 8000fbc:	bf00      	nop
 8000fbe:	3728      	adds	r7, #40	; 0x28
 8000fc0:	46bd      	mov	sp, r7
 8000fc2:	bd80      	pop	{r7, pc}
 8000fc4:	007a1200 	.word	0x007a1200
 8000fc8:	431bde83 	.word	0x431bde83
 8000fcc:	000186a0 	.word	0x000186a0
 8000fd0:	10624dd3 	.word	0x10624dd3

08000fd4 <I2C_Cmd>:
 8000fd4:	b480      	push	{r7}
 8000fd6:	b083      	sub	sp, #12
 8000fd8:	af00      	add	r7, sp, #0
 8000fda:	6078      	str	r0, [r7, #4]
 8000fdc:	460b      	mov	r3, r1
 8000fde:	70fb      	strb	r3, [r7, #3]
 8000fe0:	78fb      	ldrb	r3, [r7, #3]
 8000fe2:	2b00      	cmp	r3, #0
 8000fe4:	d008      	beq.n	8000ff8 <I2C_Cmd+0x24>
 8000fe6:	687b      	ldr	r3, [r7, #4]
 8000fe8:	881b      	ldrh	r3, [r3, #0]
 8000fea:	b29b      	uxth	r3, r3
 8000fec:	f043 0301 	orr.w	r3, r3, #1
 8000ff0:	b29a      	uxth	r2, r3
 8000ff2:	687b      	ldr	r3, [r7, #4]
 8000ff4:	801a      	strh	r2, [r3, #0]
 8000ff6:	e007      	b.n	8001008 <I2C_Cmd+0x34>
 8000ff8:	687b      	ldr	r3, [r7, #4]
 8000ffa:	881b      	ldrh	r3, [r3, #0]
 8000ffc:	b29b      	uxth	r3, r3
 8000ffe:	f023 0301 	bic.w	r3, r3, #1
 8001002:	b29a      	uxth	r2, r3
 8001004:	687b      	ldr	r3, [r7, #4]
 8001006:	801a      	strh	r2, [r3, #0]
 8001008:	bf00      	nop
 800100a:	370c      	adds	r7, #12
 800100c:	46bd      	mov	sp, r7
 800100e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001012:	4770      	bx	lr

08001014 <I2C_GenerateSTART>:
 8001014:	b480      	push	{r7}
 8001016:	b083      	sub	sp, #12
 8001018:	af00      	add	r7, sp, #0
 800101a:	6078      	str	r0, [r7, #4]
 800101c:	460b      	mov	r3, r1
 800101e:	70fb      	strb	r3, [r7, #3]
 8001020:	78fb      	ldrb	r3, [r7, #3]
 8001022:	2b00      	cmp	r3, #0
 8001024:	d008      	beq.n	8001038 <I2C_GenerateSTART+0x24>
 8001026:	687b      	ldr	r3, [r7, #4]
 8001028:	881b      	ldrh	r3, [r3, #0]
 800102a:	b29b      	uxth	r3, r3
 800102c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001030:	b29a      	uxth	r2, r3
 8001032:	687b      	ldr	r3, [r7, #4]
 8001034:	801a      	strh	r2, [r3, #0]
 8001036:	e007      	b.n	8001048 <I2C_GenerateSTART+0x34>
 8001038:	687b      	ldr	r3, [r7, #4]
 800103a:	881b      	ldrh	r3, [r3, #0]
 800103c:	b29b      	uxth	r3, r3
 800103e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8001042:	b29a      	uxth	r2, r3
 8001044:	687b      	ldr	r3, [r7, #4]
 8001046:	801a      	strh	r2, [r3, #0]
 8001048:	bf00      	nop
 800104a:	370c      	adds	r7, #12
 800104c:	46bd      	mov	sp, r7
 800104e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001052:	4770      	bx	lr

08001054 <I2C_GenerateSTOP>:
 8001054:	b480      	push	{r7}
 8001056:	b083      	sub	sp, #12
 8001058:	af00      	add	r7, sp, #0
 800105a:	6078      	str	r0, [r7, #4]
 800105c:	460b      	mov	r3, r1
 800105e:	70fb      	strb	r3, [r7, #3]
 8001060:	78fb      	ldrb	r3, [r7, #3]
 8001062:	2b00      	cmp	r3, #0
 8001064:	d008      	beq.n	8001078 <I2C_GenerateSTOP+0x24>
 8001066:	687b      	ldr	r3, [r7, #4]
 8001068:	881b      	ldrh	r3, [r3, #0]
 800106a:	b29b      	uxth	r3, r3
 800106c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001070:	b29a      	uxth	r2, r3
 8001072:	687b      	ldr	r3, [r7, #4]
 8001074:	801a      	strh	r2, [r3, #0]
 8001076:	e007      	b.n	8001088 <I2C_GenerateSTOP+0x34>
 8001078:	687b      	ldr	r3, [r7, #4]
 800107a:	881b      	ldrh	r3, [r3, #0]
 800107c:	b29b      	uxth	r3, r3
 800107e:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8001082:	b29a      	uxth	r2, r3
 8001084:	687b      	ldr	r3, [r7, #4]
 8001086:	801a      	strh	r2, [r3, #0]
 8001088:	bf00      	nop
 800108a:	370c      	adds	r7, #12
 800108c:	46bd      	mov	sp, r7
 800108e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001092:	4770      	bx	lr

08001094 <I2C_Send7bitAddress>:
 8001094:	b480      	push	{r7}
 8001096:	b083      	sub	sp, #12
 8001098:	af00      	add	r7, sp, #0
 800109a:	6078      	str	r0, [r7, #4]
 800109c:	460b      	mov	r3, r1
 800109e:	70fb      	strb	r3, [r7, #3]
 80010a0:	4613      	mov	r3, r2
 80010a2:	70bb      	strb	r3, [r7, #2]
 80010a4:	78bb      	ldrb	r3, [r7, #2]
 80010a6:	2b00      	cmp	r3, #0
 80010a8:	d004      	beq.n	80010b4 <I2C_Send7bitAddress+0x20>
 80010aa:	78fb      	ldrb	r3, [r7, #3]
 80010ac:	f043 0301 	orr.w	r3, r3, #1
 80010b0:	70fb      	strb	r3, [r7, #3]
 80010b2:	e003      	b.n	80010bc <I2C_Send7bitAddress+0x28>
 80010b4:	78fb      	ldrb	r3, [r7, #3]
 80010b6:	f023 0301 	bic.w	r3, r3, #1
 80010ba:	70fb      	strb	r3, [r7, #3]
 80010bc:	78fb      	ldrb	r3, [r7, #3]
 80010be:	b29a      	uxth	r2, r3
 80010c0:	687b      	ldr	r3, [r7, #4]
 80010c2:	821a      	strh	r2, [r3, #16]
 80010c4:	bf00      	nop
 80010c6:	370c      	adds	r7, #12
 80010c8:	46bd      	mov	sp, r7
 80010ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010ce:	4770      	bx	lr

080010d0 <I2C_AcknowledgeConfig>:
 80010d0:	b480      	push	{r7}
 80010d2:	b083      	sub	sp, #12
 80010d4:	af00      	add	r7, sp, #0
 80010d6:	6078      	str	r0, [r7, #4]
 80010d8:	460b      	mov	r3, r1
 80010da:	70fb      	strb	r3, [r7, #3]
 80010dc:	78fb      	ldrb	r3, [r7, #3]
 80010de:	2b00      	cmp	r3, #0
 80010e0:	d008      	beq.n	80010f4 <I2C_AcknowledgeConfig+0x24>
 80010e2:	687b      	ldr	r3, [r7, #4]
 80010e4:	881b      	ldrh	r3, [r3, #0]
 80010e6:	b29b      	uxth	r3, r3
 80010e8:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80010ec:	b29a      	uxth	r2, r3
 80010ee:	687b      	ldr	r3, [r7, #4]
 80010f0:	801a      	strh	r2, [r3, #0]
 80010f2:	e007      	b.n	8001104 <I2C_AcknowledgeConfig+0x34>
 80010f4:	687b      	ldr	r3, [r7, #4]
 80010f6:	881b      	ldrh	r3, [r3, #0]
 80010f8:	b29b      	uxth	r3, r3
 80010fa:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80010fe:	b29a      	uxth	r2, r3
 8001100:	687b      	ldr	r3, [r7, #4]
 8001102:	801a      	strh	r2, [r3, #0]
 8001104:	bf00      	nop
 8001106:	370c      	adds	r7, #12
 8001108:	46bd      	mov	sp, r7
 800110a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800110e:	4770      	bx	lr

08001110 <I2C_SendData>:
 8001110:	b480      	push	{r7}
 8001112:	b083      	sub	sp, #12
 8001114:	af00      	add	r7, sp, #0
 8001116:	6078      	str	r0, [r7, #4]
 8001118:	460b      	mov	r3, r1
 800111a:	70fb      	strb	r3, [r7, #3]
 800111c:	78fb      	ldrb	r3, [r7, #3]
 800111e:	b29a      	uxth	r2, r3
 8001120:	687b      	ldr	r3, [r7, #4]
 8001122:	821a      	strh	r2, [r3, #16]
 8001124:	bf00      	nop
 8001126:	370c      	adds	r7, #12
 8001128:	46bd      	mov	sp, r7
 800112a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800112e:	4770      	bx	lr

08001130 <I2C_ReceiveData>:
 8001130:	b480      	push	{r7}
 8001132:	b083      	sub	sp, #12
 8001134:	af00      	add	r7, sp, #0
 8001136:	6078      	str	r0, [r7, #4]
 8001138:	687b      	ldr	r3, [r7, #4]
 800113a:	8a1b      	ldrh	r3, [r3, #16]
 800113c:	b29b      	uxth	r3, r3
 800113e:	b2db      	uxtb	r3, r3
 8001140:	4618      	mov	r0, r3
 8001142:	370c      	adds	r7, #12
 8001144:	46bd      	mov	sp, r7
 8001146:	f85d 7b04 	ldr.w	r7, [sp], #4
 800114a:	4770      	bx	lr

0800114c <I2C_CheckEvent>:
 800114c:	b480      	push	{r7}
 800114e:	b087      	sub	sp, #28
 8001150:	af00      	add	r7, sp, #0
 8001152:	6078      	str	r0, [r7, #4]
 8001154:	6039      	str	r1, [r7, #0]
 8001156:	2300      	movs	r3, #0
 8001158:	613b      	str	r3, [r7, #16]
 800115a:	2300      	movs	r3, #0
 800115c:	60fb      	str	r3, [r7, #12]
 800115e:	2300      	movs	r3, #0
 8001160:	60bb      	str	r3, [r7, #8]
 8001162:	2300      	movs	r3, #0
 8001164:	75fb      	strb	r3, [r7, #23]
 8001166:	687b      	ldr	r3, [r7, #4]
 8001168:	8a9b      	ldrh	r3, [r3, #20]
 800116a:	b29b      	uxth	r3, r3
 800116c:	60fb      	str	r3, [r7, #12]
 800116e:	687b      	ldr	r3, [r7, #4]
 8001170:	8b1b      	ldrh	r3, [r3, #24]
 8001172:	b29b      	uxth	r3, r3
 8001174:	60bb      	str	r3, [r7, #8]
 8001176:	68bb      	ldr	r3, [r7, #8]
 8001178:	041b      	lsls	r3, r3, #16
 800117a:	60bb      	str	r3, [r7, #8]
 800117c:	68fa      	ldr	r2, [r7, #12]
 800117e:	68bb      	ldr	r3, [r7, #8]
 8001180:	4313      	orrs	r3, r2
 8001182:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8001186:	613b      	str	r3, [r7, #16]
 8001188:	693a      	ldr	r2, [r7, #16]
 800118a:	683b      	ldr	r3, [r7, #0]
 800118c:	4013      	ands	r3, r2
 800118e:	683a      	ldr	r2, [r7, #0]
 8001190:	429a      	cmp	r2, r3
 8001192:	d102      	bne.n	800119a <I2C_CheckEvent+0x4e>
 8001194:	2301      	movs	r3, #1
 8001196:	75fb      	strb	r3, [r7, #23]
 8001198:	e001      	b.n	800119e <I2C_CheckEvent+0x52>
 800119a:	2300      	movs	r3, #0
 800119c:	75fb      	strb	r3, [r7, #23]
 800119e:	7dfb      	ldrb	r3, [r7, #23]
 80011a0:	4618      	mov	r0, r3
 80011a2:	371c      	adds	r7, #28
 80011a4:	46bd      	mov	sp, r7
 80011a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011aa:	4770      	bx	lr

080011ac <I2C_GetFlagStatus>:
 80011ac:	b480      	push	{r7}
 80011ae:	b087      	sub	sp, #28
 80011b0:	af00      	add	r7, sp, #0
 80011b2:	6078      	str	r0, [r7, #4]
 80011b4:	6039      	str	r1, [r7, #0]
 80011b6:	2300      	movs	r3, #0
 80011b8:	75fb      	strb	r3, [r7, #23]
 80011ba:	2300      	movs	r3, #0
 80011bc:	613b      	str	r3, [r7, #16]
 80011be:	2300      	movs	r3, #0
 80011c0:	60fb      	str	r3, [r7, #12]
 80011c2:	687b      	ldr	r3, [r7, #4]
 80011c4:	60fb      	str	r3, [r7, #12]
 80011c6:	683b      	ldr	r3, [r7, #0]
 80011c8:	0f1b      	lsrs	r3, r3, #28
 80011ca:	613b      	str	r3, [r7, #16]
 80011cc:	683b      	ldr	r3, [r7, #0]
 80011ce:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 80011d2:	603b      	str	r3, [r7, #0]
 80011d4:	693b      	ldr	r3, [r7, #16]
 80011d6:	2b00      	cmp	r3, #0
 80011d8:	d003      	beq.n	80011e2 <I2C_GetFlagStatus+0x36>
 80011da:	68fb      	ldr	r3, [r7, #12]
 80011dc:	3314      	adds	r3, #20
 80011de:	60fb      	str	r3, [r7, #12]
 80011e0:	e005      	b.n	80011ee <I2C_GetFlagStatus+0x42>
 80011e2:	683b      	ldr	r3, [r7, #0]
 80011e4:	0c1b      	lsrs	r3, r3, #16
 80011e6:	603b      	str	r3, [r7, #0]
 80011e8:	68fb      	ldr	r3, [r7, #12]
 80011ea:	3318      	adds	r3, #24
 80011ec:	60fb      	str	r3, [r7, #12]
 80011ee:	68fb      	ldr	r3, [r7, #12]
 80011f0:	681a      	ldr	r2, [r3, #0]
 80011f2:	683b      	ldr	r3, [r7, #0]
 80011f4:	4013      	ands	r3, r2
 80011f6:	2b00      	cmp	r3, #0
 80011f8:	d002      	beq.n	8001200 <I2C_GetFlagStatus+0x54>
 80011fa:	2301      	movs	r3, #1
 80011fc:	75fb      	strb	r3, [r7, #23]
 80011fe:	e001      	b.n	8001204 <I2C_GetFlagStatus+0x58>
 8001200:	2300      	movs	r3, #0
 8001202:	75fb      	strb	r3, [r7, #23]
 8001204:	7dfb      	ldrb	r3, [r7, #23]
 8001206:	4618      	mov	r0, r3
 8001208:	371c      	adds	r7, #28
 800120a:	46bd      	mov	sp, r7
 800120c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001210:	4770      	bx	lr
	...

08001214 <RCC_GetClocksFreq>:
 8001214:	b480      	push	{r7}
 8001216:	b089      	sub	sp, #36	; 0x24
 8001218:	af00      	add	r7, sp, #0
 800121a:	6078      	str	r0, [r7, #4]
 800121c:	2300      	movs	r3, #0
 800121e:	61bb      	str	r3, [r7, #24]
 8001220:	2300      	movs	r3, #0
 8001222:	617b      	str	r3, [r7, #20]
 8001224:	2300      	movs	r3, #0
 8001226:	61fb      	str	r3, [r7, #28]
 8001228:	2302      	movs	r3, #2
 800122a:	613b      	str	r3, [r7, #16]
 800122c:	2300      	movs	r3, #0
 800122e:	60fb      	str	r3, [r7, #12]
 8001230:	2302      	movs	r3, #2
 8001232:	60bb      	str	r3, [r7, #8]
 8001234:	4b47      	ldr	r3, [pc, #284]	; (8001354 <RCC_GetClocksFreq+0x140>)
 8001236:	689b      	ldr	r3, [r3, #8]
 8001238:	f003 030c 	and.w	r3, r3, #12
 800123c:	61bb      	str	r3, [r7, #24]
 800123e:	69bb      	ldr	r3, [r7, #24]
 8001240:	2b04      	cmp	r3, #4
 8001242:	d007      	beq.n	8001254 <RCC_GetClocksFreq+0x40>
 8001244:	2b08      	cmp	r3, #8
 8001246:	d009      	beq.n	800125c <RCC_GetClocksFreq+0x48>
 8001248:	2b00      	cmp	r3, #0
 800124a:	d13d      	bne.n	80012c8 <RCC_GetClocksFreq+0xb4>
 800124c:	687b      	ldr	r3, [r7, #4]
 800124e:	4a42      	ldr	r2, [pc, #264]	; (8001358 <RCC_GetClocksFreq+0x144>)
 8001250:	601a      	str	r2, [r3, #0]
 8001252:	e03d      	b.n	80012d0 <RCC_GetClocksFreq+0xbc>
 8001254:	687b      	ldr	r3, [r7, #4]
 8001256:	4a41      	ldr	r2, [pc, #260]	; (800135c <RCC_GetClocksFreq+0x148>)
 8001258:	601a      	str	r2, [r3, #0]
 800125a:	e039      	b.n	80012d0 <RCC_GetClocksFreq+0xbc>
 800125c:	4b3d      	ldr	r3, [pc, #244]	; (8001354 <RCC_GetClocksFreq+0x140>)
 800125e:	685b      	ldr	r3, [r3, #4]
 8001260:	0d9b      	lsrs	r3, r3, #22
 8001262:	f003 0301 	and.w	r3, r3, #1
 8001266:	60fb      	str	r3, [r7, #12]
 8001268:	4b3a      	ldr	r3, [pc, #232]	; (8001354 <RCC_GetClocksFreq+0x140>)
 800126a:	685b      	ldr	r3, [r3, #4]
 800126c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8001270:	60bb      	str	r3, [r7, #8]
 8001272:	68fb      	ldr	r3, [r7, #12]
 8001274:	2b00      	cmp	r3, #0
 8001276:	d00c      	beq.n	8001292 <RCC_GetClocksFreq+0x7e>
 8001278:	4a38      	ldr	r2, [pc, #224]	; (800135c <RCC_GetClocksFreq+0x148>)
 800127a:	68bb      	ldr	r3, [r7, #8]
 800127c:	fbb2 f3f3 	udiv	r3, r2, r3
 8001280:	4a34      	ldr	r2, [pc, #208]	; (8001354 <RCC_GetClocksFreq+0x140>)
 8001282:	6852      	ldr	r2, [r2, #4]
 8001284:	0992      	lsrs	r2, r2, #6
 8001286:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800128a:	fb02 f303 	mul.w	r3, r2, r3
 800128e:	61fb      	str	r3, [r7, #28]
 8001290:	e00b      	b.n	80012aa <RCC_GetClocksFreq+0x96>
 8001292:	4a31      	ldr	r2, [pc, #196]	; (8001358 <RCC_GetClocksFreq+0x144>)
 8001294:	68bb      	ldr	r3, [r7, #8]
 8001296:	fbb2 f3f3 	udiv	r3, r2, r3
 800129a:	4a2e      	ldr	r2, [pc, #184]	; (8001354 <RCC_GetClocksFreq+0x140>)
 800129c:	6852      	ldr	r2, [r2, #4]
 800129e:	0992      	lsrs	r2, r2, #6
 80012a0:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80012a4:	fb02 f303 	mul.w	r3, r2, r3
 80012a8:	61fb      	str	r3, [r7, #28]
 80012aa:	4b2a      	ldr	r3, [pc, #168]	; (8001354 <RCC_GetClocksFreq+0x140>)
 80012ac:	685b      	ldr	r3, [r3, #4]
 80012ae:	0c1b      	lsrs	r3, r3, #16
 80012b0:	f003 0303 	and.w	r3, r3, #3
 80012b4:	3301      	adds	r3, #1
 80012b6:	005b      	lsls	r3, r3, #1
 80012b8:	613b      	str	r3, [r7, #16]
 80012ba:	69fa      	ldr	r2, [r7, #28]
 80012bc:	693b      	ldr	r3, [r7, #16]
 80012be:	fbb2 f2f3 	udiv	r2, r2, r3
 80012c2:	687b      	ldr	r3, [r7, #4]
 80012c4:	601a      	str	r2, [r3, #0]
 80012c6:	e003      	b.n	80012d0 <RCC_GetClocksFreq+0xbc>
 80012c8:	687b      	ldr	r3, [r7, #4]
 80012ca:	4a23      	ldr	r2, [pc, #140]	; (8001358 <RCC_GetClocksFreq+0x144>)
 80012cc:	601a      	str	r2, [r3, #0]
 80012ce:	bf00      	nop
 80012d0:	4b20      	ldr	r3, [pc, #128]	; (8001354 <RCC_GetClocksFreq+0x140>)
 80012d2:	689b      	ldr	r3, [r3, #8]
 80012d4:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80012d8:	61bb      	str	r3, [r7, #24]
 80012da:	69bb      	ldr	r3, [r7, #24]
 80012dc:	091b      	lsrs	r3, r3, #4
 80012de:	61bb      	str	r3, [r7, #24]
 80012e0:	4a1f      	ldr	r2, [pc, #124]	; (8001360 <RCC_GetClocksFreq+0x14c>)
 80012e2:	69bb      	ldr	r3, [r7, #24]
 80012e4:	4413      	add	r3, r2
 80012e6:	781b      	ldrb	r3, [r3, #0]
 80012e8:	b2db      	uxtb	r3, r3
 80012ea:	617b      	str	r3, [r7, #20]
 80012ec:	687b      	ldr	r3, [r7, #4]
 80012ee:	681a      	ldr	r2, [r3, #0]
 80012f0:	697b      	ldr	r3, [r7, #20]
 80012f2:	40da      	lsrs	r2, r3
 80012f4:	687b      	ldr	r3, [r7, #4]
 80012f6:	605a      	str	r2, [r3, #4]
 80012f8:	4b16      	ldr	r3, [pc, #88]	; (8001354 <RCC_GetClocksFreq+0x140>)
 80012fa:	689b      	ldr	r3, [r3, #8]
 80012fc:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8001300:	61bb      	str	r3, [r7, #24]
 8001302:	69bb      	ldr	r3, [r7, #24]
 8001304:	0a9b      	lsrs	r3, r3, #10
 8001306:	61bb      	str	r3, [r7, #24]
 8001308:	4a15      	ldr	r2, [pc, #84]	; (8001360 <RCC_GetClocksFreq+0x14c>)
 800130a:	69bb      	ldr	r3, [r7, #24]
 800130c:	4413      	add	r3, r2
 800130e:	781b      	ldrb	r3, [r3, #0]
 8001310:	b2db      	uxtb	r3, r3
 8001312:	617b      	str	r3, [r7, #20]
 8001314:	687b      	ldr	r3, [r7, #4]
 8001316:	685a      	ldr	r2, [r3, #4]
 8001318:	697b      	ldr	r3, [r7, #20]
 800131a:	40da      	lsrs	r2, r3
 800131c:	687b      	ldr	r3, [r7, #4]
 800131e:	609a      	str	r2, [r3, #8]
 8001320:	4b0c      	ldr	r3, [pc, #48]	; (8001354 <RCC_GetClocksFreq+0x140>)
 8001322:	689b      	ldr	r3, [r3, #8]
 8001324:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 8001328:	61bb      	str	r3, [r7, #24]
 800132a:	69bb      	ldr	r3, [r7, #24]
 800132c:	0b5b      	lsrs	r3, r3, #13
 800132e:	61bb      	str	r3, [r7, #24]
 8001330:	4a0b      	ldr	r2, [pc, #44]	; (8001360 <RCC_GetClocksFreq+0x14c>)
 8001332:	69bb      	ldr	r3, [r7, #24]
 8001334:	4413      	add	r3, r2
 8001336:	781b      	ldrb	r3, [r3, #0]
 8001338:	b2db      	uxtb	r3, r3
 800133a:	617b      	str	r3, [r7, #20]
 800133c:	687b      	ldr	r3, [r7, #4]
 800133e:	685a      	ldr	r2, [r3, #4]
 8001340:	697b      	ldr	r3, [r7, #20]
 8001342:	40da      	lsrs	r2, r3
 8001344:	687b      	ldr	r3, [r7, #4]
 8001346:	60da      	str	r2, [r3, #12]
 8001348:	bf00      	nop
 800134a:	3724      	adds	r7, #36	; 0x24
 800134c:	46bd      	mov	sp, r7
 800134e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001352:	4770      	bx	lr
 8001354:	40023800 	.word	0x40023800
 8001358:	00f42400 	.word	0x00f42400
 800135c:	017d7840 	.word	0x017d7840
 8001360:	20000014 	.word	0x20000014

08001364 <RCC_AHB1PeriphClockCmd>:
 8001364:	b480      	push	{r7}
 8001366:	b083      	sub	sp, #12
 8001368:	af00      	add	r7, sp, #0
 800136a:	6078      	str	r0, [r7, #4]
 800136c:	460b      	mov	r3, r1
 800136e:	70fb      	strb	r3, [r7, #3]
 8001370:	78fb      	ldrb	r3, [r7, #3]
 8001372:	2b00      	cmp	r3, #0
 8001374:	d006      	beq.n	8001384 <RCC_AHB1PeriphClockCmd+0x20>
 8001376:	4b0a      	ldr	r3, [pc, #40]	; (80013a0 <RCC_AHB1PeriphClockCmd+0x3c>)
 8001378:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800137a:	4909      	ldr	r1, [pc, #36]	; (80013a0 <RCC_AHB1PeriphClockCmd+0x3c>)
 800137c:	687b      	ldr	r3, [r7, #4]
 800137e:	4313      	orrs	r3, r2
 8001380:	630b      	str	r3, [r1, #48]	; 0x30
 8001382:	e006      	b.n	8001392 <RCC_AHB1PeriphClockCmd+0x2e>
 8001384:	4b06      	ldr	r3, [pc, #24]	; (80013a0 <RCC_AHB1PeriphClockCmd+0x3c>)
 8001386:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001388:	687b      	ldr	r3, [r7, #4]
 800138a:	43db      	mvns	r3, r3
 800138c:	4904      	ldr	r1, [pc, #16]	; (80013a0 <RCC_AHB1PeriphClockCmd+0x3c>)
 800138e:	4013      	ands	r3, r2
 8001390:	630b      	str	r3, [r1, #48]	; 0x30
 8001392:	bf00      	nop
 8001394:	370c      	adds	r7, #12
 8001396:	46bd      	mov	sp, r7
 8001398:	f85d 7b04 	ldr.w	r7, [sp], #4
 800139c:	4770      	bx	lr
 800139e:	bf00      	nop
 80013a0:	40023800 	.word	0x40023800

080013a4 <RCC_APB1PeriphClockCmd>:
 80013a4:	b480      	push	{r7}
 80013a6:	b083      	sub	sp, #12
 80013a8:	af00      	add	r7, sp, #0
 80013aa:	6078      	str	r0, [r7, #4]
 80013ac:	460b      	mov	r3, r1
 80013ae:	70fb      	strb	r3, [r7, #3]
 80013b0:	78fb      	ldrb	r3, [r7, #3]
 80013b2:	2b00      	cmp	r3, #0
 80013b4:	d006      	beq.n	80013c4 <RCC_APB1PeriphClockCmd+0x20>
 80013b6:	4b0a      	ldr	r3, [pc, #40]	; (80013e0 <RCC_APB1PeriphClockCmd+0x3c>)
 80013b8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80013ba:	4909      	ldr	r1, [pc, #36]	; (80013e0 <RCC_APB1PeriphClockCmd+0x3c>)
 80013bc:	687b      	ldr	r3, [r7, #4]
 80013be:	4313      	orrs	r3, r2
 80013c0:	640b      	str	r3, [r1, #64]	; 0x40
 80013c2:	e006      	b.n	80013d2 <RCC_APB1PeriphClockCmd+0x2e>
 80013c4:	4b06      	ldr	r3, [pc, #24]	; (80013e0 <RCC_APB1PeriphClockCmd+0x3c>)
 80013c6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80013c8:	687b      	ldr	r3, [r7, #4]
 80013ca:	43db      	mvns	r3, r3
 80013cc:	4904      	ldr	r1, [pc, #16]	; (80013e0 <RCC_APB1PeriphClockCmd+0x3c>)
 80013ce:	4013      	ands	r3, r2
 80013d0:	640b      	str	r3, [r1, #64]	; 0x40
 80013d2:	bf00      	nop
 80013d4:	370c      	adds	r7, #12
 80013d6:	46bd      	mov	sp, r7
 80013d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013dc:	4770      	bx	lr
 80013de:	bf00      	nop
 80013e0:	40023800 	.word	0x40023800

080013e4 <NVIC_SetPriority>:
 80013e4:	b480      	push	{r7}
 80013e6:	b083      	sub	sp, #12
 80013e8:	af00      	add	r7, sp, #0
 80013ea:	4603      	mov	r3, r0
 80013ec:	6039      	str	r1, [r7, #0]
 80013ee:	71fb      	strb	r3, [r7, #7]
 80013f0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80013f4:	2b00      	cmp	r3, #0
 80013f6:	da0b      	bge.n	8001410 <NVIC_SetPriority+0x2c>
 80013f8:	683b      	ldr	r3, [r7, #0]
 80013fa:	b2da      	uxtb	r2, r3
 80013fc:	490c      	ldr	r1, [pc, #48]	; (8001430 <NVIC_SetPriority+0x4c>)
 80013fe:	79fb      	ldrb	r3, [r7, #7]
 8001400:	f003 030f 	and.w	r3, r3, #15
 8001404:	3b04      	subs	r3, #4
 8001406:	0112      	lsls	r2, r2, #4
 8001408:	b2d2      	uxtb	r2, r2
 800140a:	440b      	add	r3, r1
 800140c:	761a      	strb	r2, [r3, #24]
 800140e:	e009      	b.n	8001424 <NVIC_SetPriority+0x40>
 8001410:	683b      	ldr	r3, [r7, #0]
 8001412:	b2da      	uxtb	r2, r3
 8001414:	4907      	ldr	r1, [pc, #28]	; (8001434 <NVIC_SetPriority+0x50>)
 8001416:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800141a:	0112      	lsls	r2, r2, #4
 800141c:	b2d2      	uxtb	r2, r2
 800141e:	440b      	add	r3, r1
 8001420:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001424:	bf00      	nop
 8001426:	370c      	adds	r7, #12
 8001428:	46bd      	mov	sp, r7
 800142a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800142e:	4770      	bx	lr
 8001430:	e000ed00 	.word	0xe000ed00
 8001434:	e000e100 	.word	0xe000e100

08001438 <SysTick_Config>:
 8001438:	b580      	push	{r7, lr}
 800143a:	b082      	sub	sp, #8
 800143c:	af00      	add	r7, sp, #0
 800143e:	6078      	str	r0, [r7, #4]
 8001440:	687b      	ldr	r3, [r7, #4]
 8001442:	3b01      	subs	r3, #1
 8001444:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001448:	d301      	bcc.n	800144e <SysTick_Config+0x16>
 800144a:	2301      	movs	r3, #1
 800144c:	e00f      	b.n	800146e <SysTick_Config+0x36>
 800144e:	4a0a      	ldr	r2, [pc, #40]	; (8001478 <SysTick_Config+0x40>)
 8001450:	687b      	ldr	r3, [r7, #4]
 8001452:	3b01      	subs	r3, #1
 8001454:	6053      	str	r3, [r2, #4]
 8001456:	210f      	movs	r1, #15
 8001458:	f04f 30ff 	mov.w	r0, #4294967295
 800145c:	f7ff ffc2 	bl	80013e4 <NVIC_SetPriority>
 8001460:	4b05      	ldr	r3, [pc, #20]	; (8001478 <SysTick_Config+0x40>)
 8001462:	2200      	movs	r2, #0
 8001464:	609a      	str	r2, [r3, #8]
 8001466:	4b04      	ldr	r3, [pc, #16]	; (8001478 <SysTick_Config+0x40>)
 8001468:	2207      	movs	r2, #7
 800146a:	601a      	str	r2, [r3, #0]
 800146c:	2300      	movs	r3, #0
 800146e:	4618      	mov	r0, r3
 8001470:	3708      	adds	r7, #8
 8001472:	46bd      	mov	sp, r7
 8001474:	bd80      	pop	{r7, pc}
 8001476:	bf00      	nop
 8001478:	e000e010 	.word	0xe000e010

0800147c <TimerInit>:
 800147c:	b580      	push	{r7, lr}
 800147e:	b084      	sub	sp, #16
 8001480:	af00      	add	r7, sp, #0
 8001482:	463b      	mov	r3, r7
 8001484:	4618      	mov	r0, r3
 8001486:	f7ff fec5 	bl	8001214 <RCC_GetClocksFreq>
 800148a:	683b      	ldr	r3, [r7, #0]
 800148c:	4a0a      	ldr	r2, [pc, #40]	; (80014b8 <TimerInit+0x3c>)
 800148e:	fba2 2303 	umull	r2, r3, r2, r3
 8001492:	099b      	lsrs	r3, r3, #6
 8001494:	4618      	mov	r0, r3
 8001496:	f7ff ffcf 	bl	8001438 <SysTick_Config>
 800149a:	2101      	movs	r1, #1
 800149c:	f04f 30ff 	mov.w	r0, #4294967295
 80014a0:	f7ff ffa0 	bl	80013e4 <NVIC_SetPriority>
 80014a4:	f44f 72c0 	mov.w	r2, #384	; 0x180
 80014a8:	2100      	movs	r1, #0
 80014aa:	4804      	ldr	r0, [pc, #16]	; (80014bc <TimerInit+0x40>)
 80014ac:	f001 ffde 	bl	800346c <memsetl>
 80014b0:	bf00      	nop
 80014b2:	3710      	adds	r7, #16
 80014b4:	46bd      	mov	sp, r7
 80014b6:	bd80      	pop	{r7, pc}
 80014b8:	10624dd3 	.word	0x10624dd3
 80014bc:	200001c4 	.word	0x200001c4

080014c0 <TimerStart>:
 80014c0:	b590      	push	{r4, r7, lr}
 80014c2:	b087      	sub	sp, #28
 80014c4:	af00      	add	r7, sp, #0
 80014c6:	60f8      	str	r0, [r7, #12]
 80014c8:	60b9      	str	r1, [r7, #8]
 80014ca:	603b      	str	r3, [r7, #0]
 80014cc:	4613      	mov	r3, r2
 80014ce:	71fb      	strb	r3, [r7, #7]
 80014d0:	2300      	movs	r3, #0
 80014d2:	75fb      	strb	r3, [r7, #23]
 80014d4:	e04c      	b.n	8001570 <TimerStart+0xb0>
 80014d6:	7dfa      	ldrb	r2, [r7, #23]
 80014d8:	4929      	ldr	r1, [pc, #164]	; (8001580 <TimerStart+0xc0>)
 80014da:	4613      	mov	r3, r2
 80014dc:	005b      	lsls	r3, r3, #1
 80014de:	4413      	add	r3, r2
 80014e0:	00db      	lsls	r3, r3, #3
 80014e2:	440b      	add	r3, r1
 80014e4:	3310      	adds	r3, #16
 80014e6:	681b      	ldr	r3, [r3, #0]
 80014e8:	2b00      	cmp	r3, #0
 80014ea:	d13e      	bne.n	800156a <TimerStart+0xaa>
 80014ec:	7dfa      	ldrb	r2, [r7, #23]
 80014ee:	4924      	ldr	r1, [pc, #144]	; (8001580 <TimerStart+0xc0>)
 80014f0:	4613      	mov	r3, r2
 80014f2:	005b      	lsls	r3, r3, #1
 80014f4:	4413      	add	r3, r2
 80014f6:	00db      	lsls	r3, r3, #3
 80014f8:	440b      	add	r3, r1
 80014fa:	68fa      	ldr	r2, [r7, #12]
 80014fc:	601a      	str	r2, [r3, #0]
 80014fe:	7dfa      	ldrb	r2, [r7, #23]
 8001500:	491f      	ldr	r1, [pc, #124]	; (8001580 <TimerStart+0xc0>)
 8001502:	4613      	mov	r3, r2
 8001504:	005b      	lsls	r3, r3, #1
 8001506:	4413      	add	r3, r2
 8001508:	00db      	lsls	r3, r3, #3
 800150a:	440b      	add	r3, r1
 800150c:	3310      	adds	r3, #16
 800150e:	683a      	ldr	r2, [r7, #0]
 8001510:	601a      	str	r2, [r3, #0]
 8001512:	7dfa      	ldrb	r2, [r7, #23]
 8001514:	491a      	ldr	r1, [pc, #104]	; (8001580 <TimerStart+0xc0>)
 8001516:	4613      	mov	r3, r2
 8001518:	005b      	lsls	r3, r3, #1
 800151a:	4413      	add	r3, r2
 800151c:	00db      	lsls	r3, r3, #3
 800151e:	440b      	add	r3, r1
 8001520:	330c      	adds	r3, #12
 8001522:	79fa      	ldrb	r2, [r7, #7]
 8001524:	701a      	strb	r2, [r3, #0]
 8001526:	7dfa      	ldrb	r2, [r7, #23]
 8001528:	4915      	ldr	r1, [pc, #84]	; (8001580 <TimerStart+0xc0>)
 800152a:	4613      	mov	r3, r2
 800152c:	005b      	lsls	r3, r3, #1
 800152e:	4413      	add	r3, r2
 8001530:	00db      	lsls	r3, r3, #3
 8001532:	440b      	add	r3, r1
 8001534:	3314      	adds	r3, #20
 8001536:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8001538:	601a      	str	r2, [r3, #0]
 800153a:	7dfc      	ldrb	r4, [r7, #23]
 800153c:	f000 f872 	bl	8001624 <GetMilSecTick>
 8001540:	4601      	mov	r1, r0
 8001542:	4a0f      	ldr	r2, [pc, #60]	; (8001580 <TimerStart+0xc0>)
 8001544:	4623      	mov	r3, r4
 8001546:	005b      	lsls	r3, r3, #1
 8001548:	4423      	add	r3, r4
 800154a:	00db      	lsls	r3, r3, #3
 800154c:	4413      	add	r3, r2
 800154e:	3304      	adds	r3, #4
 8001550:	6019      	str	r1, [r3, #0]
 8001552:	7dfa      	ldrb	r2, [r7, #23]
 8001554:	490a      	ldr	r1, [pc, #40]	; (8001580 <TimerStart+0xc0>)
 8001556:	4613      	mov	r3, r2
 8001558:	005b      	lsls	r3, r3, #1
 800155a:	4413      	add	r3, r2
 800155c:	00db      	lsls	r3, r3, #3
 800155e:	440b      	add	r3, r1
 8001560:	3308      	adds	r3, #8
 8001562:	68ba      	ldr	r2, [r7, #8]
 8001564:	601a      	str	r2, [r3, #0]
 8001566:	7dfb      	ldrb	r3, [r7, #23]
 8001568:	e006      	b.n	8001578 <TimerStart+0xb8>
 800156a:	7dfb      	ldrb	r3, [r7, #23]
 800156c:	3301      	adds	r3, #1
 800156e:	75fb      	strb	r3, [r7, #23]
 8001570:	7dfb      	ldrb	r3, [r7, #23]
 8001572:	2b0f      	cmp	r3, #15
 8001574:	d9af      	bls.n	80014d6 <TimerStart+0x16>
 8001576:	23ff      	movs	r3, #255	; 0xff
 8001578:	4618      	mov	r0, r3
 800157a:	371c      	adds	r7, #28
 800157c:	46bd      	mov	sp, r7
 800157e:	bd90      	pop	{r4, r7, pc}
 8001580:	200001c4 	.word	0x200001c4

08001584 <TimerStop>:
 8001584:	b480      	push	{r7}
 8001586:	b083      	sub	sp, #12
 8001588:	af00      	add	r7, sp, #0
 800158a:	4603      	mov	r3, r0
 800158c:	71fb      	strb	r3, [r7, #7]
 800158e:	79fb      	ldrb	r3, [r7, #7]
 8001590:	2b0f      	cmp	r3, #15
 8001592:	d80a      	bhi.n	80015aa <TimerStop+0x26>
 8001594:	79fa      	ldrb	r2, [r7, #7]
 8001596:	4922      	ldr	r1, [pc, #136]	; (8001620 <TimerStop+0x9c>)
 8001598:	4613      	mov	r3, r2
 800159a:	005b      	lsls	r3, r3, #1
 800159c:	4413      	add	r3, r2
 800159e:	00db      	lsls	r3, r3, #3
 80015a0:	440b      	add	r3, r1
 80015a2:	3310      	adds	r3, #16
 80015a4:	681b      	ldr	r3, [r3, #0]
 80015a6:	2b00      	cmp	r3, #0
 80015a8:	d101      	bne.n	80015ae <TimerStop+0x2a>
 80015aa:	2300      	movs	r3, #0
 80015ac:	e031      	b.n	8001612 <TimerStop+0x8e>
 80015ae:	79fa      	ldrb	r2, [r7, #7]
 80015b0:	491b      	ldr	r1, [pc, #108]	; (8001620 <TimerStop+0x9c>)
 80015b2:	4613      	mov	r3, r2
 80015b4:	005b      	lsls	r3, r3, #1
 80015b6:	4413      	add	r3, r2
 80015b8:	00db      	lsls	r3, r3, #3
 80015ba:	440b      	add	r3, r1
 80015bc:	2200      	movs	r2, #0
 80015be:	601a      	str	r2, [r3, #0]
 80015c0:	79fa      	ldrb	r2, [r7, #7]
 80015c2:	4917      	ldr	r1, [pc, #92]	; (8001620 <TimerStop+0x9c>)
 80015c4:	4613      	mov	r3, r2
 80015c6:	005b      	lsls	r3, r3, #1
 80015c8:	4413      	add	r3, r2
 80015ca:	00db      	lsls	r3, r3, #3
 80015cc:	440b      	add	r3, r1
 80015ce:	3310      	adds	r3, #16
 80015d0:	2200      	movs	r2, #0
 80015d2:	601a      	str	r2, [r3, #0]
 80015d4:	79fa      	ldrb	r2, [r7, #7]
 80015d6:	4912      	ldr	r1, [pc, #72]	; (8001620 <TimerStop+0x9c>)
 80015d8:	4613      	mov	r3, r2
 80015da:	005b      	lsls	r3, r3, #1
 80015dc:	4413      	add	r3, r2
 80015de:	00db      	lsls	r3, r3, #3
 80015e0:	440b      	add	r3, r1
 80015e2:	330c      	adds	r3, #12
 80015e4:	2200      	movs	r2, #0
 80015e6:	701a      	strb	r2, [r3, #0]
 80015e8:	79fa      	ldrb	r2, [r7, #7]
 80015ea:	490d      	ldr	r1, [pc, #52]	; (8001620 <TimerStop+0x9c>)
 80015ec:	4613      	mov	r3, r2
 80015ee:	005b      	lsls	r3, r3, #1
 80015f0:	4413      	add	r3, r2
 80015f2:	00db      	lsls	r3, r3, #3
 80015f4:	440b      	add	r3, r1
 80015f6:	3308      	adds	r3, #8
 80015f8:	2200      	movs	r2, #0
 80015fa:	601a      	str	r2, [r3, #0]
 80015fc:	79fa      	ldrb	r2, [r7, #7]
 80015fe:	4908      	ldr	r1, [pc, #32]	; (8001620 <TimerStop+0x9c>)
 8001600:	4613      	mov	r3, r2
 8001602:	005b      	lsls	r3, r3, #1
 8001604:	4413      	add	r3, r2
 8001606:	00db      	lsls	r3, r3, #3
 8001608:	440b      	add	r3, r1
 800160a:	3304      	adds	r3, #4
 800160c:	2200      	movs	r2, #0
 800160e:	601a      	str	r2, [r3, #0]
 8001610:	2301      	movs	r3, #1
 8001612:	4618      	mov	r0, r3
 8001614:	370c      	adds	r7, #12
 8001616:	46bd      	mov	sp, r7
 8001618:	f85d 7b04 	ldr.w	r7, [sp], #4
 800161c:	4770      	bx	lr
 800161e:	bf00      	nop
 8001620:	200001c4 	.word	0x200001c4

08001624 <GetMilSecTick>:
 8001624:	b480      	push	{r7}
 8001626:	af00      	add	r7, sp, #0
 8001628:	4b03      	ldr	r3, [pc, #12]	; (8001638 <GetMilSecTick+0x14>)
 800162a:	681b      	ldr	r3, [r3, #0]
 800162c:	4618      	mov	r0, r3
 800162e:	46bd      	mov	sp, r7
 8001630:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001634:	4770      	bx	lr
 8001636:	bf00      	nop
 8001638:	20000344 	.word	0x20000344

0800163c <processTimerScheduler>:
 800163c:	b580      	push	{r7, lr}
 800163e:	b084      	sub	sp, #16
 8001640:	af00      	add	r7, sp, #0
 8001642:	2300      	movs	r3, #0
 8001644:	73fb      	strb	r3, [r7, #15]
 8001646:	e068      	b.n	800171a <processTimerScheduler+0xde>
 8001648:	7bfa      	ldrb	r2, [r7, #15]
 800164a:	4937      	ldr	r1, [pc, #220]	; (8001728 <processTimerScheduler+0xec>)
 800164c:	4613      	mov	r3, r2
 800164e:	005b      	lsls	r3, r3, #1
 8001650:	4413      	add	r3, r2
 8001652:	00db      	lsls	r3, r3, #3
 8001654:	440b      	add	r3, r1
 8001656:	3310      	adds	r3, #16
 8001658:	681b      	ldr	r3, [r3, #0]
 800165a:	2b00      	cmp	r3, #0
 800165c:	d05a      	beq.n	8001714 <processTimerScheduler+0xd8>
 800165e:	7bfb      	ldrb	r3, [r7, #15]
 8001660:	4618      	mov	r0, r3
 8001662:	f000 f863 	bl	800172c <TimeExpired>
 8001666:	4603      	mov	r3, r0
 8001668:	2b00      	cmp	r3, #0
 800166a:	d053      	beq.n	8001714 <processTimerScheduler+0xd8>
 800166c:	7bfa      	ldrb	r2, [r7, #15]
 800166e:	492e      	ldr	r1, [pc, #184]	; (8001728 <processTimerScheduler+0xec>)
 8001670:	4613      	mov	r3, r2
 8001672:	005b      	lsls	r3, r3, #1
 8001674:	4413      	add	r3, r2
 8001676:	00db      	lsls	r3, r3, #3
 8001678:	440b      	add	r3, r1
 800167a:	3310      	adds	r3, #16
 800167c:	681b      	ldr	r3, [r3, #0]
 800167e:	60bb      	str	r3, [r7, #8]
 8001680:	7bfa      	ldrb	r2, [r7, #15]
 8001682:	4929      	ldr	r1, [pc, #164]	; (8001728 <processTimerScheduler+0xec>)
 8001684:	4613      	mov	r3, r2
 8001686:	005b      	lsls	r3, r3, #1
 8001688:	4413      	add	r3, r2
 800168a:	00db      	lsls	r3, r3, #3
 800168c:	440b      	add	r3, r1
 800168e:	3314      	adds	r3, #20
 8001690:	681b      	ldr	r3, [r3, #0]
 8001692:	607b      	str	r3, [r7, #4]
 8001694:	7bfa      	ldrb	r2, [r7, #15]
 8001696:	4924      	ldr	r1, [pc, #144]	; (8001728 <processTimerScheduler+0xec>)
 8001698:	4613      	mov	r3, r2
 800169a:	005b      	lsls	r3, r3, #1
 800169c:	4413      	add	r3, r2
 800169e:	00db      	lsls	r3, r3, #3
 80016a0:	440b      	add	r3, r1
 80016a2:	330c      	adds	r3, #12
 80016a4:	781b      	ldrb	r3, [r3, #0]
 80016a6:	b2db      	uxtb	r3, r3
 80016a8:	2bff      	cmp	r3, #255	; 0xff
 80016aa:	d020      	beq.n	80016ee <processTimerScheduler+0xb2>
 80016ac:	7bfa      	ldrb	r2, [r7, #15]
 80016ae:	491e      	ldr	r1, [pc, #120]	; (8001728 <processTimerScheduler+0xec>)
 80016b0:	4613      	mov	r3, r2
 80016b2:	005b      	lsls	r3, r3, #1
 80016b4:	4413      	add	r3, r2
 80016b6:	00db      	lsls	r3, r3, #3
 80016b8:	440b      	add	r3, r1
 80016ba:	330c      	adds	r3, #12
 80016bc:	781b      	ldrb	r3, [r3, #0]
 80016be:	b2db      	uxtb	r3, r3
 80016c0:	2b00      	cmp	r3, #0
 80016c2:	d014      	beq.n	80016ee <processTimerScheduler+0xb2>
 80016c4:	7bfa      	ldrb	r2, [r7, #15]
 80016c6:	4918      	ldr	r1, [pc, #96]	; (8001728 <processTimerScheduler+0xec>)
 80016c8:	4613      	mov	r3, r2
 80016ca:	005b      	lsls	r3, r3, #1
 80016cc:	4413      	add	r3, r2
 80016ce:	00db      	lsls	r3, r3, #3
 80016d0:	440b      	add	r3, r1
 80016d2:	330c      	adds	r3, #12
 80016d4:	781b      	ldrb	r3, [r3, #0]
 80016d6:	b2db      	uxtb	r3, r3
 80016d8:	3b01      	subs	r3, #1
 80016da:	b2d8      	uxtb	r0, r3
 80016dc:	4912      	ldr	r1, [pc, #72]	; (8001728 <processTimerScheduler+0xec>)
 80016de:	4613      	mov	r3, r2
 80016e0:	005b      	lsls	r3, r3, #1
 80016e2:	4413      	add	r3, r2
 80016e4:	00db      	lsls	r3, r3, #3
 80016e6:	440b      	add	r3, r1
 80016e8:	330c      	adds	r3, #12
 80016ea:	4602      	mov	r2, r0
 80016ec:	701a      	strb	r2, [r3, #0]
 80016ee:	7bfa      	ldrb	r2, [r7, #15]
 80016f0:	490d      	ldr	r1, [pc, #52]	; (8001728 <processTimerScheduler+0xec>)
 80016f2:	4613      	mov	r3, r2
 80016f4:	005b      	lsls	r3, r3, #1
 80016f6:	4413      	add	r3, r2
 80016f8:	00db      	lsls	r3, r3, #3
 80016fa:	440b      	add	r3, r1
 80016fc:	330c      	adds	r3, #12
 80016fe:	781b      	ldrb	r3, [r3, #0]
 8001700:	b2db      	uxtb	r3, r3
 8001702:	2b00      	cmp	r3, #0
 8001704:	d103      	bne.n	800170e <processTimerScheduler+0xd2>
 8001706:	7bfb      	ldrb	r3, [r7, #15]
 8001708:	4618      	mov	r0, r3
 800170a:	f7ff ff3b 	bl	8001584 <TimerStop>
 800170e:	68bb      	ldr	r3, [r7, #8]
 8001710:	6878      	ldr	r0, [r7, #4]
 8001712:	4798      	blx	r3
 8001714:	7bfb      	ldrb	r3, [r7, #15]
 8001716:	3301      	adds	r3, #1
 8001718:	73fb      	strb	r3, [r7, #15]
 800171a:	7bfb      	ldrb	r3, [r7, #15]
 800171c:	2b0f      	cmp	r3, #15
 800171e:	d993      	bls.n	8001648 <processTimerScheduler+0xc>
 8001720:	bf00      	nop
 8001722:	3710      	adds	r7, #16
 8001724:	46bd      	mov	sp, r7
 8001726:	bd80      	pop	{r7, pc}
 8001728:	200001c4 	.word	0x200001c4

0800172c <TimeExpired>:
 800172c:	b580      	push	{r7, lr}
 800172e:	b084      	sub	sp, #16
 8001730:	af00      	add	r7, sp, #0
 8001732:	4603      	mov	r3, r0
 8001734:	71fb      	strb	r3, [r7, #7]
 8001736:	2300      	movs	r3, #0
 8001738:	60fb      	str	r3, [r7, #12]
 800173a:	b672      	cpsid	i
 800173c:	f7ff ff72 	bl	8001624 <GetMilSecTick>
 8001740:	60b8      	str	r0, [r7, #8]
 8001742:	79fb      	ldrb	r3, [r7, #7]
 8001744:	2b0f      	cmp	r3, #15
 8001746:	d80a      	bhi.n	800175e <TimeExpired+0x32>
 8001748:	79fa      	ldrb	r2, [r7, #7]
 800174a:	492a      	ldr	r1, [pc, #168]	; (80017f4 <TimeExpired+0xc8>)
 800174c:	4613      	mov	r3, r2
 800174e:	005b      	lsls	r3, r3, #1
 8001750:	4413      	add	r3, r2
 8001752:	00db      	lsls	r3, r3, #3
 8001754:	440b      	add	r3, r1
 8001756:	3310      	adds	r3, #16
 8001758:	681b      	ldr	r3, [r3, #0]
 800175a:	2b00      	cmp	r3, #0
 800175c:	d102      	bne.n	8001764 <TimeExpired+0x38>
 800175e:	b662      	cpsie	i
 8001760:	2300      	movs	r3, #0
 8001762:	e042      	b.n	80017ea <TimeExpired+0xbe>
 8001764:	79fa      	ldrb	r2, [r7, #7]
 8001766:	4923      	ldr	r1, [pc, #140]	; (80017f4 <TimeExpired+0xc8>)
 8001768:	4613      	mov	r3, r2
 800176a:	005b      	lsls	r3, r3, #1
 800176c:	4413      	add	r3, r2
 800176e:	00db      	lsls	r3, r3, #3
 8001770:	440b      	add	r3, r1
 8001772:	3304      	adds	r3, #4
 8001774:	681b      	ldr	r3, [r3, #0]
 8001776:	68ba      	ldr	r2, [r7, #8]
 8001778:	429a      	cmp	r2, r3
 800177a:	d30c      	bcc.n	8001796 <TimeExpired+0x6a>
 800177c:	79fa      	ldrb	r2, [r7, #7]
 800177e:	491d      	ldr	r1, [pc, #116]	; (80017f4 <TimeExpired+0xc8>)
 8001780:	4613      	mov	r3, r2
 8001782:	005b      	lsls	r3, r3, #1
 8001784:	4413      	add	r3, r2
 8001786:	00db      	lsls	r3, r3, #3
 8001788:	440b      	add	r3, r1
 800178a:	3304      	adds	r3, #4
 800178c:	681b      	ldr	r3, [r3, #0]
 800178e:	68ba      	ldr	r2, [r7, #8]
 8001790:	1ad3      	subs	r3, r2, r3
 8001792:	60fb      	str	r3, [r7, #12]
 8001794:	e00e      	b.n	80017b4 <TimeExpired+0x88>
 8001796:	79fa      	ldrb	r2, [r7, #7]
 8001798:	4916      	ldr	r1, [pc, #88]	; (80017f4 <TimeExpired+0xc8>)
 800179a:	4613      	mov	r3, r2
 800179c:	005b      	lsls	r3, r3, #1
 800179e:	4413      	add	r3, r2
 80017a0:	00db      	lsls	r3, r3, #3
 80017a2:	440b      	add	r3, r1
 80017a4:	3304      	adds	r3, #4
 80017a6:	681a      	ldr	r2, [r3, #0]
 80017a8:	68bb      	ldr	r3, [r7, #8]
 80017aa:	1ad3      	subs	r3, r2, r3
 80017ac:	60fb      	str	r3, [r7, #12]
 80017ae:	68fb      	ldr	r3, [r7, #12]
 80017b0:	43db      	mvns	r3, r3
 80017b2:	60fb      	str	r3, [r7, #12]
 80017b4:	79fa      	ldrb	r2, [r7, #7]
 80017b6:	490f      	ldr	r1, [pc, #60]	; (80017f4 <TimeExpired+0xc8>)
 80017b8:	4613      	mov	r3, r2
 80017ba:	005b      	lsls	r3, r3, #1
 80017bc:	4413      	add	r3, r2
 80017be:	00db      	lsls	r3, r3, #3
 80017c0:	440b      	add	r3, r1
 80017c2:	3308      	adds	r3, #8
 80017c4:	681b      	ldr	r3, [r3, #0]
 80017c6:	68fa      	ldr	r2, [r7, #12]
 80017c8:	429a      	cmp	r2, r3
 80017ca:	d202      	bcs.n	80017d2 <TimeExpired+0xa6>
 80017cc:	b662      	cpsie	i
 80017ce:	2300      	movs	r3, #0
 80017d0:	e00b      	b.n	80017ea <TimeExpired+0xbe>
 80017d2:	79fa      	ldrb	r2, [r7, #7]
 80017d4:	4907      	ldr	r1, [pc, #28]	; (80017f4 <TimeExpired+0xc8>)
 80017d6:	4613      	mov	r3, r2
 80017d8:	005b      	lsls	r3, r3, #1
 80017da:	4413      	add	r3, r2
 80017dc:	00db      	lsls	r3, r3, #3
 80017de:	440b      	add	r3, r1
 80017e0:	3304      	adds	r3, #4
 80017e2:	68ba      	ldr	r2, [r7, #8]
 80017e4:	601a      	str	r2, [r3, #0]
 80017e6:	b662      	cpsie	i
 80017e8:	2301      	movs	r3, #1
 80017ea:	4618      	mov	r0, r3
 80017ec:	3710      	adds	r7, #16
 80017ee:	46bd      	mov	sp, r7
 80017f0:	bd80      	pop	{r7, pc}
 80017f2:	bf00      	nop
 80017f4:	200001c4 	.word	0x200001c4

080017f8 <SysTick_Handler>:
 80017f8:	b480      	push	{r7}
 80017fa:	af00      	add	r7, sp, #0
 80017fc:	4b04      	ldr	r3, [pc, #16]	; (8001810 <SysTick_Handler+0x18>)
 80017fe:	681b      	ldr	r3, [r3, #0]
 8001800:	3301      	adds	r3, #1
 8001802:	4a03      	ldr	r2, [pc, #12]	; (8001810 <SysTick_Handler+0x18>)
 8001804:	6013      	str	r3, [r2, #0]
 8001806:	bf00      	nop
 8001808:	46bd      	mov	sp, r7
 800180a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800180e:	4770      	bx	lr
 8001810:	20000344 	.word	0x20000344

08001814 <TemHumSensor_Init>:
 8001814:	b580      	push	{r7, lr}
 8001816:	af00      	add	r7, sp, #0
 8001818:	f000 f802 	bl	8001820 <i2c_config>
 800181c:	bf00      	nop
 800181e:	bd80      	pop	{r7, pc}

08001820 <i2c_config>:
 8001820:	b580      	push	{r7, lr}
 8001822:	b086      	sub	sp, #24
 8001824:	af00      	add	r7, sp, #0
 8001826:	2101      	movs	r1, #1
 8001828:	f44f 1000 	mov.w	r0, #2097152	; 0x200000
 800182c:	f7ff fdba 	bl	80013a4 <RCC_APB1PeriphClockCmd>
 8001830:	4b1d      	ldr	r3, [pc, #116]	; (80018a8 <i2c_config+0x88>)
 8001832:	60bb      	str	r3, [r7, #8]
 8001834:	2300      	movs	r3, #0
 8001836:	81bb      	strh	r3, [r7, #12]
 8001838:	f64b 73ff 	movw	r3, #49151	; 0xbfff
 800183c:	81fb      	strh	r3, [r7, #14]
 800183e:	2300      	movs	r3, #0
 8001840:	823b      	strh	r3, [r7, #16]
 8001842:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001846:	827b      	strh	r3, [r7, #18]
 8001848:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 800184c:	82bb      	strh	r3, [r7, #20]
 800184e:	f107 0308 	add.w	r3, r7, #8
 8001852:	4619      	mov	r1, r3
 8001854:	4815      	ldr	r0, [pc, #84]	; (80018ac <i2c_config+0x8c>)
 8001856:	f7ff fafb 	bl	8000e50 <I2C_Init>
 800185a:	2101      	movs	r1, #1
 800185c:	4813      	ldr	r0, [pc, #76]	; (80018ac <i2c_config+0x8c>)
 800185e:	f7ff fbb9 	bl	8000fd4 <I2C_Cmd>
 8001862:	2101      	movs	r1, #1
 8001864:	2002      	movs	r0, #2
 8001866:	f7ff fd7d 	bl	8001364 <RCC_AHB1PeriphClockCmd>
 800186a:	f44f 7340 	mov.w	r3, #768	; 0x300
 800186e:	603b      	str	r3, [r7, #0]
 8001870:	2302      	movs	r3, #2
 8001872:	713b      	strb	r3, [r7, #4]
 8001874:	2302      	movs	r3, #2
 8001876:	717b      	strb	r3, [r7, #5]
 8001878:	2301      	movs	r3, #1
 800187a:	71bb      	strb	r3, [r7, #6]
 800187c:	2300      	movs	r3, #0
 800187e:	71fb      	strb	r3, [r7, #7]
 8001880:	463b      	mov	r3, r7
 8001882:	4619      	mov	r1, r3
 8001884:	480a      	ldr	r0, [pc, #40]	; (80018b0 <i2c_config+0x90>)
 8001886:	f7ff f9f3 	bl	8000c70 <GPIO_Init>
 800188a:	2204      	movs	r2, #4
 800188c:	2108      	movs	r1, #8
 800188e:	4808      	ldr	r0, [pc, #32]	; (80018b0 <i2c_config+0x90>)
 8001890:	f7ff fa94 	bl	8000dbc <GPIO_PinAFConfig>
 8001894:	2204      	movs	r2, #4
 8001896:	2109      	movs	r1, #9
 8001898:	4805      	ldr	r0, [pc, #20]	; (80018b0 <i2c_config+0x90>)
 800189a:	f7ff fa8f 	bl	8000dbc <GPIO_PinAFConfig>
 800189e:	bf00      	nop
 80018a0:	3718      	adds	r7, #24
 80018a2:	46bd      	mov	sp, r7
 80018a4:	bd80      	pop	{r7, pc}
 80018a6:	bf00      	nop
 80018a8:	00061a80 	.word	0x00061a80
 80018ac:	40005400 	.word	0x40005400
 80018b0:	40020400 	.word	0x40020400

080018b4 <USART2_IRQHandler>:
 80018b4:	b580      	push	{r7, lr}
 80018b6:	b082      	sub	sp, #8
 80018b8:	af00      	add	r7, sp, #0
 80018ba:	b672      	cpsid	i
 80018bc:	f240 5125 	movw	r1, #1317	; 0x525
 80018c0:	480e      	ldr	r0, [pc, #56]	; (80018fc <USART2_IRQHandler+0x48>)
 80018c2:	f001 fdfc 	bl	80034be <USART_GetITStatus>
 80018c6:	4603      	mov	r3, r0
 80018c8:	2b01      	cmp	r3, #1
 80018ca:	d112      	bne.n	80018f2 <USART2_IRQHandler+0x3e>
 80018cc:	4b0c      	ldr	r3, [pc, #48]	; (8001900 <USART2_IRQHandler+0x4c>)
 80018ce:	681b      	ldr	r3, [r3, #0]
 80018d0:	607b      	str	r3, [r7, #4]
 80018d2:	480a      	ldr	r0, [pc, #40]	; (80018fc <USART2_IRQHandler+0x48>)
 80018d4:	f001 fde3 	bl	800349e <USART_ReceiveData>
 80018d8:	4603      	mov	r3, r0
 80018da:	b2db      	uxtb	r3, r3
 80018dc:	70fb      	strb	r3, [r7, #3]
 80018de:	1cfb      	adds	r3, r7, #3
 80018e0:	4619      	mov	r1, r3
 80018e2:	6878      	ldr	r0, [r7, #4]
 80018e4:	f001 fd32 	bl	800334c <bufEnDat>
 80018e8:	f240 5125 	movw	r1, #1317	; 0x525
 80018ec:	4803      	ldr	r0, [pc, #12]	; (80018fc <USART2_IRQHandler+0x48>)
 80018ee:	f001 fe41 	bl	8003574 <USART_ClearITPendingBit>
 80018f2:	b662      	cpsie	i
 80018f4:	bf00      	nop
 80018f6:	3708      	adds	r7, #8
 80018f8:	46bd      	mov	sp, r7
 80018fa:	bd80      	pop	{r7, pc}
 80018fc:	40004400 	.word	0x40004400
 8001900:	20000348 	.word	0x20000348

08001904 <delayMicroseconds>:
 8001904:	b480      	push	{r7}
 8001906:	b083      	sub	sp, #12
 8001908:	af00      	add	r7, sp, #0
 800190a:	6078      	str	r0, [r7, #4]
 800190c:	bf00      	nop
 800190e:	370c      	adds	r7, #12
 8001910:	46bd      	mov	sp, r7
 8001912:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001916:	4770      	bx	lr

08001918 <ucg_gpio_init>:
 8001918:	b580      	push	{r7, lr}
 800191a:	b082      	sub	sp, #8
 800191c:	af00      	add	r7, sp, #0
 800191e:	2101      	movs	r1, #1
 8001920:	2007      	movs	r0, #7
 8001922:	f7ff fd1f 	bl	8001364 <RCC_AHB1PeriphClockCmd>
 8001926:	2301      	movs	r3, #1
 8001928:	713b      	strb	r3, [r7, #4]
 800192a:	2303      	movs	r3, #3
 800192c:	717b      	strb	r3, [r7, #5]
 800192e:	2300      	movs	r3, #0
 8001930:	71bb      	strb	r3, [r7, #6]
 8001932:	2300      	movs	r3, #0
 8001934:	71fb      	strb	r3, [r7, #7]
 8001936:	f44f 7368 	mov.w	r3, #928	; 0x3a0
 800193a:	603b      	str	r3, [r7, #0]
 800193c:	463b      	mov	r3, r7
 800193e:	4619      	mov	r1, r3
 8001940:	480a      	ldr	r0, [pc, #40]	; (800196c <ucg_gpio_init+0x54>)
 8001942:	f7ff f995 	bl	8000c70 <GPIO_Init>
 8001946:	f44f 6388 	mov.w	r3, #1088	; 0x440
 800194a:	603b      	str	r3, [r7, #0]
 800194c:	463b      	mov	r3, r7
 800194e:	4619      	mov	r1, r3
 8001950:	4807      	ldr	r0, [pc, #28]	; (8001970 <ucg_gpio_init+0x58>)
 8001952:	f7ff f98d 	bl	8000c70 <GPIO_Init>
 8001956:	2380      	movs	r3, #128	; 0x80
 8001958:	603b      	str	r3, [r7, #0]
 800195a:	463b      	mov	r3, r7
 800195c:	4619      	mov	r1, r3
 800195e:	4805      	ldr	r0, [pc, #20]	; (8001974 <ucg_gpio_init+0x5c>)
 8001960:	f7ff f986 	bl	8000c70 <GPIO_Init>
 8001964:	bf00      	nop
 8001966:	3708      	adds	r7, #8
 8001968:	46bd      	mov	sp, r7
 800196a:	bd80      	pop	{r7, pc}
 800196c:	40020000 	.word	0x40020000
 8001970:	40020400 	.word	0x40020400
 8001974:	40020800 	.word	0x40020800

08001978 <ucg_com_arduino_send_generic_SW_SPI>:
 8001978:	b580      	push	{r7, lr}
 800197a:	b084      	sub	sp, #16
 800197c:	af00      	add	r7, sp, #0
 800197e:	6078      	str	r0, [r7, #4]
 8001980:	460b      	mov	r3, r1
 8001982:	70fb      	strb	r3, [r7, #3]
 8001984:	2308      	movs	r3, #8
 8001986:	73fb      	strb	r3, [r7, #15]
 8001988:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800198c:	2b00      	cmp	r3, #0
 800198e:	da05      	bge.n	800199c <ucg_com_arduino_send_generic_SW_SPI+0x24>
 8001990:	2201      	movs	r2, #1
 8001992:	2180      	movs	r1, #128	; 0x80
 8001994:	4814      	ldr	r0, [pc, #80]	; (80019e8 <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 8001996:	f7ff f9f9 	bl	8000d8c <GPIO_WriteBit>
 800199a:	e004      	b.n	80019a6 <ucg_com_arduino_send_generic_SW_SPI+0x2e>
 800199c:	2200      	movs	r2, #0
 800199e:	2180      	movs	r1, #128	; 0x80
 80019a0:	4811      	ldr	r0, [pc, #68]	; (80019e8 <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 80019a2:	f7ff f9f3 	bl	8000d8c <GPIO_WriteBit>
 80019a6:	2001      	movs	r0, #1
 80019a8:	f7ff ffac 	bl	8001904 <delayMicroseconds>
 80019ac:	2201      	movs	r2, #1
 80019ae:	2120      	movs	r1, #32
 80019b0:	480d      	ldr	r0, [pc, #52]	; (80019e8 <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 80019b2:	f7ff f9eb 	bl	8000d8c <GPIO_WriteBit>
 80019b6:	2001      	movs	r0, #1
 80019b8:	f7ff ffa4 	bl	8001904 <delayMicroseconds>
 80019bc:	7bfb      	ldrb	r3, [r7, #15]
 80019be:	3b01      	subs	r3, #1
 80019c0:	73fb      	strb	r3, [r7, #15]
 80019c2:	2200      	movs	r2, #0
 80019c4:	2120      	movs	r1, #32
 80019c6:	4808      	ldr	r0, [pc, #32]	; (80019e8 <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 80019c8:	f7ff f9e0 	bl	8000d8c <GPIO_WriteBit>
 80019cc:	2001      	movs	r0, #1
 80019ce:	f7ff ff99 	bl	8001904 <delayMicroseconds>
 80019d2:	78fb      	ldrb	r3, [r7, #3]
 80019d4:	005b      	lsls	r3, r3, #1
 80019d6:	70fb      	strb	r3, [r7, #3]
 80019d8:	7bfb      	ldrb	r3, [r7, #15]
 80019da:	2b00      	cmp	r3, #0
 80019dc:	d1d4      	bne.n	8001988 <ucg_com_arduino_send_generic_SW_SPI+0x10>
 80019de:	bf00      	nop
 80019e0:	3710      	adds	r7, #16
 80019e2:	46bd      	mov	sp, r7
 80019e4:	bd80      	pop	{r7, pc}
 80019e6:	bf00      	nop
 80019e8:	40020000 	.word	0x40020000

080019ec <ucg_com_arduino_generic_SW_SPI>:
 80019ec:	b580      	push	{r7, lr}
 80019ee:	b084      	sub	sp, #16
 80019f0:	af00      	add	r7, sp, #0
 80019f2:	60f8      	str	r0, [r7, #12]
 80019f4:	607b      	str	r3, [r7, #4]
 80019f6:	460b      	mov	r3, r1
 80019f8:	817b      	strh	r3, [r7, #10]
 80019fa:	4613      	mov	r3, r2
 80019fc:	813b      	strh	r3, [r7, #8]
 80019fe:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8001a02:	3b0a      	subs	r3, #10
 8001a04:	2b0b      	cmp	r3, #11
 8001a06:	f200 80dc 	bhi.w	8001bc2 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001a0a:	a201      	add	r2, pc, #4	; (adr r2, 8001a10 <ucg_com_arduino_generic_SW_SPI+0x24>)
 8001a0c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001a10:	08001a41 	.word	0x08001a41
 8001a14:	08001bc3 	.word	0x08001bc3
 8001a18:	08001a93 	.word	0x08001a93
 8001a1c:	08001a9d 	.word	0x08001a9d
 8001a20:	08001aad 	.word	0x08001aad
 8001a24:	08001abd 	.word	0x08001abd
 8001a28:	08001acf 	.word	0x08001acf
 8001a2c:	08001aef 	.word	0x08001aef
 8001a30:	08001b17 	.word	0x08001b17
 8001a34:	08001b4d 	.word	0x08001b4d
 8001a38:	08001b6b 	.word	0x08001b6b
 8001a3c:	08001bbb 	.word	0x08001bbb
 8001a40:	f7ff ff6a 	bl	8001918 <ucg_gpio_init>
 8001a44:	2201      	movs	r2, #1
 8001a46:	2180      	movs	r1, #128	; 0x80
 8001a48:	4860      	ldr	r0, [pc, #384]	; (8001bcc <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8001a4a:	f7ff f99f 	bl	8000d8c <GPIO_WriteBit>
 8001a4e:	2201      	movs	r2, #1
 8001a50:	2140      	movs	r1, #64	; 0x40
 8001a52:	485f      	ldr	r0, [pc, #380]	; (8001bd0 <ucg_com_arduino_generic_SW_SPI+0x1e4>)
 8001a54:	f7ff f99a 	bl	8000d8c <GPIO_WriteBit>
 8001a58:	2201      	movs	r2, #1
 8001a5a:	2180      	movs	r1, #128	; 0x80
 8001a5c:	485d      	ldr	r0, [pc, #372]	; (8001bd4 <ucg_com_arduino_generic_SW_SPI+0x1e8>)
 8001a5e:	f7ff f995 	bl	8000d8c <GPIO_WriteBit>
 8001a62:	2201      	movs	r2, #1
 8001a64:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001a68:	4858      	ldr	r0, [pc, #352]	; (8001bcc <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8001a6a:	f7ff f98f 	bl	8000d8c <GPIO_WriteBit>
 8001a6e:	2200      	movs	r2, #0
 8001a70:	2120      	movs	r1, #32
 8001a72:	4856      	ldr	r0, [pc, #344]	; (8001bcc <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8001a74:	f7ff f98a 	bl	8000d8c <GPIO_WriteBit>
 8001a78:	2201      	movs	r2, #1
 8001a7a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8001a7e:	4854      	ldr	r0, [pc, #336]	; (8001bd0 <ucg_com_arduino_generic_SW_SPI+0x1e4>)
 8001a80:	f7ff f984 	bl	8000d8c <GPIO_WriteBit>
 8001a84:	2201      	movs	r2, #1
 8001a86:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001a8a:	4850      	ldr	r0, [pc, #320]	; (8001bcc <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8001a8c:	f7ff f97e 	bl	8000d8c <GPIO_WriteBit>
 8001a90:	e097      	b.n	8001bc2 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001a92:	893b      	ldrh	r3, [r7, #8]
 8001a94:	4618      	mov	r0, r3
 8001a96:	f7ff ff35 	bl	8001904 <delayMicroseconds>
 8001a9a:	e092      	b.n	8001bc2 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001a9c:	893b      	ldrh	r3, [r7, #8]
 8001a9e:	b2db      	uxtb	r3, r3
 8001aa0:	461a      	mov	r2, r3
 8001aa2:	2180      	movs	r1, #128	; 0x80
 8001aa4:	484b      	ldr	r0, [pc, #300]	; (8001bd4 <ucg_com_arduino_generic_SW_SPI+0x1e8>)
 8001aa6:	f7ff f971 	bl	8000d8c <GPIO_WriteBit>
 8001aaa:	e08a      	b.n	8001bc2 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001aac:	893b      	ldrh	r3, [r7, #8]
 8001aae:	b2db      	uxtb	r3, r3
 8001ab0:	461a      	mov	r2, r3
 8001ab2:	2140      	movs	r1, #64	; 0x40
 8001ab4:	4846      	ldr	r0, [pc, #280]	; (8001bd0 <ucg_com_arduino_generic_SW_SPI+0x1e4>)
 8001ab6:	f7ff f969 	bl	8000d8c <GPIO_WriteBit>
 8001aba:	e082      	b.n	8001bc2 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001abc:	893b      	ldrh	r3, [r7, #8]
 8001abe:	b2db      	uxtb	r3, r3
 8001ac0:	461a      	mov	r2, r3
 8001ac2:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001ac6:	4841      	ldr	r0, [pc, #260]	; (8001bcc <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8001ac8:	f7ff f960 	bl	8000d8c <GPIO_WriteBit>
 8001acc:	e079      	b.n	8001bc2 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001ace:	893b      	ldrh	r3, [r7, #8]
 8001ad0:	b2db      	uxtb	r3, r3
 8001ad2:	4619      	mov	r1, r3
 8001ad4:	68f8      	ldr	r0, [r7, #12]
 8001ad6:	f7ff ff4f 	bl	8001978 <ucg_com_arduino_send_generic_SW_SPI>
 8001ada:	e072      	b.n	8001bc2 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001adc:	687b      	ldr	r3, [r7, #4]
 8001ade:	781b      	ldrb	r3, [r3, #0]
 8001ae0:	4619      	mov	r1, r3
 8001ae2:	68f8      	ldr	r0, [r7, #12]
 8001ae4:	f7ff ff48 	bl	8001978 <ucg_com_arduino_send_generic_SW_SPI>
 8001ae8:	893b      	ldrh	r3, [r7, #8]
 8001aea:	3b01      	subs	r3, #1
 8001aec:	813b      	strh	r3, [r7, #8]
 8001aee:	893b      	ldrh	r3, [r7, #8]
 8001af0:	2b00      	cmp	r3, #0
 8001af2:	d1f3      	bne.n	8001adc <ucg_com_arduino_generic_SW_SPI+0xf0>
 8001af4:	e065      	b.n	8001bc2 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001af6:	687b      	ldr	r3, [r7, #4]
 8001af8:	781b      	ldrb	r3, [r3, #0]
 8001afa:	4619      	mov	r1, r3
 8001afc:	68f8      	ldr	r0, [r7, #12]
 8001afe:	f7ff ff3b 	bl	8001978 <ucg_com_arduino_send_generic_SW_SPI>
 8001b02:	687b      	ldr	r3, [r7, #4]
 8001b04:	3301      	adds	r3, #1
 8001b06:	781b      	ldrb	r3, [r3, #0]
 8001b08:	4619      	mov	r1, r3
 8001b0a:	68f8      	ldr	r0, [r7, #12]
 8001b0c:	f7ff ff34 	bl	8001978 <ucg_com_arduino_send_generic_SW_SPI>
 8001b10:	893b      	ldrh	r3, [r7, #8]
 8001b12:	3b01      	subs	r3, #1
 8001b14:	813b      	strh	r3, [r7, #8]
 8001b16:	893b      	ldrh	r3, [r7, #8]
 8001b18:	2b00      	cmp	r3, #0
 8001b1a:	d1ec      	bne.n	8001af6 <ucg_com_arduino_generic_SW_SPI+0x10a>
 8001b1c:	e051      	b.n	8001bc2 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001b1e:	687b      	ldr	r3, [r7, #4]
 8001b20:	781b      	ldrb	r3, [r3, #0]
 8001b22:	4619      	mov	r1, r3
 8001b24:	68f8      	ldr	r0, [r7, #12]
 8001b26:	f7ff ff27 	bl	8001978 <ucg_com_arduino_send_generic_SW_SPI>
 8001b2a:	687b      	ldr	r3, [r7, #4]
 8001b2c:	3301      	adds	r3, #1
 8001b2e:	781b      	ldrb	r3, [r3, #0]
 8001b30:	4619      	mov	r1, r3
 8001b32:	68f8      	ldr	r0, [r7, #12]
 8001b34:	f7ff ff20 	bl	8001978 <ucg_com_arduino_send_generic_SW_SPI>
 8001b38:	687b      	ldr	r3, [r7, #4]
 8001b3a:	3302      	adds	r3, #2
 8001b3c:	781b      	ldrb	r3, [r3, #0]
 8001b3e:	4619      	mov	r1, r3
 8001b40:	68f8      	ldr	r0, [r7, #12]
 8001b42:	f7ff ff19 	bl	8001978 <ucg_com_arduino_send_generic_SW_SPI>
 8001b46:	893b      	ldrh	r3, [r7, #8]
 8001b48:	3b01      	subs	r3, #1
 8001b4a:	813b      	strh	r3, [r7, #8]
 8001b4c:	893b      	ldrh	r3, [r7, #8]
 8001b4e:	2b00      	cmp	r3, #0
 8001b50:	d1e5      	bne.n	8001b1e <ucg_com_arduino_generic_SW_SPI+0x132>
 8001b52:	e036      	b.n	8001bc2 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001b54:	687b      	ldr	r3, [r7, #4]
 8001b56:	1c5a      	adds	r2, r3, #1
 8001b58:	607a      	str	r2, [r7, #4]
 8001b5a:	781b      	ldrb	r3, [r3, #0]
 8001b5c:	4619      	mov	r1, r3
 8001b5e:	68f8      	ldr	r0, [r7, #12]
 8001b60:	f7ff ff0a 	bl	8001978 <ucg_com_arduino_send_generic_SW_SPI>
 8001b64:	893b      	ldrh	r3, [r7, #8]
 8001b66:	3b01      	subs	r3, #1
 8001b68:	813b      	strh	r3, [r7, #8]
 8001b6a:	893b      	ldrh	r3, [r7, #8]
 8001b6c:	2b00      	cmp	r3, #0
 8001b6e:	d1f1      	bne.n	8001b54 <ucg_com_arduino_generic_SW_SPI+0x168>
 8001b70:	e027      	b.n	8001bc2 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001b72:	687b      	ldr	r3, [r7, #4]
 8001b74:	781b      	ldrb	r3, [r3, #0]
 8001b76:	2b00      	cmp	r3, #0
 8001b78:	d010      	beq.n	8001b9c <ucg_com_arduino_generic_SW_SPI+0x1b0>
 8001b7a:	687b      	ldr	r3, [r7, #4]
 8001b7c:	781b      	ldrb	r3, [r3, #0]
 8001b7e:	2b01      	cmp	r3, #1
 8001b80:	d106      	bne.n	8001b90 <ucg_com_arduino_generic_SW_SPI+0x1a4>
 8001b82:	2200      	movs	r2, #0
 8001b84:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001b88:	4810      	ldr	r0, [pc, #64]	; (8001bcc <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8001b8a:	f7ff f8ff 	bl	8000d8c <GPIO_WriteBit>
 8001b8e:	e005      	b.n	8001b9c <ucg_com_arduino_generic_SW_SPI+0x1b0>
 8001b90:	2201      	movs	r2, #1
 8001b92:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001b96:	480d      	ldr	r0, [pc, #52]	; (8001bcc <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8001b98:	f7ff f8f8 	bl	8000d8c <GPIO_WriteBit>
 8001b9c:	687b      	ldr	r3, [r7, #4]
 8001b9e:	3301      	adds	r3, #1
 8001ba0:	607b      	str	r3, [r7, #4]
 8001ba2:	687b      	ldr	r3, [r7, #4]
 8001ba4:	781b      	ldrb	r3, [r3, #0]
 8001ba6:	4619      	mov	r1, r3
 8001ba8:	68f8      	ldr	r0, [r7, #12]
 8001baa:	f7ff fee5 	bl	8001978 <ucg_com_arduino_send_generic_SW_SPI>
 8001bae:	687b      	ldr	r3, [r7, #4]
 8001bb0:	3301      	adds	r3, #1
 8001bb2:	607b      	str	r3, [r7, #4]
 8001bb4:	893b      	ldrh	r3, [r7, #8]
 8001bb6:	3b01      	subs	r3, #1
 8001bb8:	813b      	strh	r3, [r7, #8]
 8001bba:	893b      	ldrh	r3, [r7, #8]
 8001bbc:	2b00      	cmp	r3, #0
 8001bbe:	d1d8      	bne.n	8001b72 <ucg_com_arduino_generic_SW_SPI+0x186>
 8001bc0:	bf00      	nop
 8001bc2:	2301      	movs	r3, #1
 8001bc4:	4618      	mov	r0, r3
 8001bc6:	3710      	adds	r7, #16
 8001bc8:	46bd      	mov	sp, r7
 8001bca:	bd80      	pop	{r7, pc}
 8001bcc:	40020000 	.word	0x40020000
 8001bd0:	40020400 	.word	0x40020400
 8001bd4:	40020800 	.word	0x40020800

08001bd8 <Ucglib4WireSWSPI_begin>:
 8001bd8:	b580      	push	{r7, lr}
 8001bda:	b082      	sub	sp, #8
 8001bdc:	af00      	add	r7, sp, #0
 8001bde:	6078      	str	r0, [r7, #4]
 8001be0:	460b      	mov	r3, r1
 8001be2:	70fb      	strb	r3, [r7, #3]
 8001be4:	4b07      	ldr	r3, [pc, #28]	; (8001c04 <Ucglib4WireSWSPI_begin+0x2c>)
 8001be6:	4a08      	ldr	r2, [pc, #32]	; (8001c08 <Ucglib4WireSWSPI_begin+0x30>)
 8001be8:	4908      	ldr	r1, [pc, #32]	; (8001c0c <Ucglib4WireSWSPI_begin+0x34>)
 8001bea:	6878      	ldr	r0, [r7, #4]
 8001bec:	f001 f9a2 	bl	8002f34 <ucg_Init>
 8001bf0:	78fb      	ldrb	r3, [r7, #3]
 8001bf2:	4619      	mov	r1, r3
 8001bf4:	6878      	ldr	r0, [r7, #4]
 8001bf6:	f000 ff86 	bl	8002b06 <ucg_SetFontMode>
 8001bfa:	bf00      	nop
 8001bfc:	3708      	adds	r7, #8
 8001bfe:	46bd      	mov	sp, r7
 8001c00:	bd80      	pop	{r7, pc}
 8001c02:	bf00      	nop
 8001c04:	080019ed 	.word	0x080019ed
 8001c08:	08002245 	.word	0x08002245
 8001c0c:	0800236d 	.word	0x0800236d

08001c10 <ucg_DrawBox>:
 8001c10:	b580      	push	{r7, lr}
 8001c12:	b084      	sub	sp, #16
 8001c14:	af00      	add	r7, sp, #0
 8001c16:	60f8      	str	r0, [r7, #12]
 8001c18:	4608      	mov	r0, r1
 8001c1a:	4611      	mov	r1, r2
 8001c1c:	461a      	mov	r2, r3
 8001c1e:	4603      	mov	r3, r0
 8001c20:	817b      	strh	r3, [r7, #10]
 8001c22:	460b      	mov	r3, r1
 8001c24:	813b      	strh	r3, [r7, #8]
 8001c26:	4613      	mov	r3, r2
 8001c28:	80fb      	strh	r3, [r7, #6]
 8001c2a:	e014      	b.n	8001c56 <ucg_DrawBox+0x46>
 8001c2c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001c30:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8001c34:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8001c38:	68f8      	ldr	r0, [r7, #12]
 8001c3a:	f001 f9ed 	bl	8003018 <ucg_DrawHLine>
 8001c3e:	f9b7 3018 	ldrsh.w	r3, [r7, #24]
 8001c42:	b29b      	uxth	r3, r3
 8001c44:	3b01      	subs	r3, #1
 8001c46:	b29b      	uxth	r3, r3
 8001c48:	833b      	strh	r3, [r7, #24]
 8001c4a:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
 8001c4e:	b29b      	uxth	r3, r3
 8001c50:	3301      	adds	r3, #1
 8001c52:	b29b      	uxth	r3, r3
 8001c54:	813b      	strh	r3, [r7, #8]
 8001c56:	f9b7 3018 	ldrsh.w	r3, [r7, #24]
 8001c5a:	2b00      	cmp	r3, #0
 8001c5c:	dce6      	bgt.n	8001c2c <ucg_DrawBox+0x1c>
 8001c5e:	bf00      	nop
 8001c60:	3710      	adds	r7, #16
 8001c62:	46bd      	mov	sp, r7
 8001c64:	bd80      	pop	{r7, pc}

08001c66 <ucg_ClearScreen>:
 8001c66:	b580      	push	{r7, lr}
 8001c68:	b084      	sub	sp, #16
 8001c6a:	af02      	add	r7, sp, #8
 8001c6c:	6078      	str	r0, [r7, #4]
 8001c6e:	2300      	movs	r3, #0
 8001c70:	9300      	str	r3, [sp, #0]
 8001c72:	2300      	movs	r3, #0
 8001c74:	2200      	movs	r2, #0
 8001c76:	2100      	movs	r1, #0
 8001c78:	6878      	ldr	r0, [r7, #4]
 8001c7a:	f001 f9ec 	bl	8003056 <ucg_SetColor>
 8001c7e:	6878      	ldr	r0, [r7, #4]
 8001c80:	f000 fb3b 	bl	80022fa <ucg_SetMaxClipRange>
 8001c84:	687b      	ldr	r3, [r7, #4]
 8001c86:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8001c8a:	687b      	ldr	r3, [r7, #4]
 8001c8c:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8001c90:	9300      	str	r3, [sp, #0]
 8001c92:	4613      	mov	r3, r2
 8001c94:	2200      	movs	r2, #0
 8001c96:	2100      	movs	r1, #0
 8001c98:	6878      	ldr	r0, [r7, #4]
 8001c9a:	f7ff ffb9 	bl	8001c10 <ucg_DrawBox>
 8001c9e:	23ff      	movs	r3, #255	; 0xff
 8001ca0:	9300      	str	r3, [sp, #0]
 8001ca2:	23ff      	movs	r3, #255	; 0xff
 8001ca4:	22ff      	movs	r2, #255	; 0xff
 8001ca6:	2100      	movs	r1, #0
 8001ca8:	6878      	ldr	r0, [r7, #4]
 8001caa:	f001 f9d4 	bl	8003056 <ucg_SetColor>
 8001cae:	bf00      	nop
 8001cb0:	3708      	adds	r7, #8
 8001cb2:	46bd      	mov	sp, r7
 8001cb4:	bd80      	pop	{r7, pc}

08001cb6 <ucg_ccs_init>:
 8001cb6:	b480      	push	{r7}
 8001cb8:	b083      	sub	sp, #12
 8001cba:	af00      	add	r7, sp, #0
 8001cbc:	6078      	str	r0, [r7, #4]
 8001cbe:	4608      	mov	r0, r1
 8001cc0:	4611      	mov	r1, r2
 8001cc2:	461a      	mov	r2, r3
 8001cc4:	4603      	mov	r3, r0
 8001cc6:	70fb      	strb	r3, [r7, #3]
 8001cc8:	460b      	mov	r3, r1
 8001cca:	70bb      	strb	r3, [r7, #2]
 8001ccc:	4613      	mov	r3, r2
 8001cce:	803b      	strh	r3, [r7, #0]
 8001cd0:	687b      	ldr	r3, [r7, #4]
 8001cd2:	78fa      	ldrb	r2, [r7, #3]
 8001cd4:	705a      	strb	r2, [r3, #1]
 8001cd6:	78bb      	ldrb	r3, [r7, #2]
 8001cd8:	b29a      	uxth	r2, r3
 8001cda:	78fb      	ldrb	r3, [r7, #3]
 8001cdc:	b29b      	uxth	r3, r3
 8001cde:	1ad3      	subs	r3, r2, r3
 8001ce0:	b29b      	uxth	r3, r3
 8001ce2:	b21a      	sxth	r2, r3
 8001ce4:	687b      	ldr	r3, [r7, #4]
 8001ce6:	809a      	strh	r2, [r3, #4]
 8001ce8:	883b      	ldrh	r3, [r7, #0]
 8001cea:	3b01      	subs	r3, #1
 8001cec:	b29b      	uxth	r3, r3
 8001cee:	b21a      	sxth	r2, r3
 8001cf0:	687b      	ldr	r3, [r7, #4]
 8001cf2:	811a      	strh	r2, [r3, #8]
 8001cf4:	687b      	ldr	r3, [r7, #4]
 8001cf6:	2201      	movs	r2, #1
 8001cf8:	805a      	strh	r2, [r3, #2]
 8001cfa:	687b      	ldr	r3, [r7, #4]
 8001cfc:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8001d00:	461a      	mov	r2, r3
 8001d02:	687b      	ldr	r3, [r7, #4]
 8001d04:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8001d08:	fb92 f3f3 	sdiv	r3, r2, r3
 8001d0c:	b21a      	sxth	r2, r3
 8001d0e:	687b      	ldr	r3, [r7, #4]
 8001d10:	80da      	strh	r2, [r3, #6]
 8001d12:	687b      	ldr	r3, [r7, #4]
 8001d14:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8001d18:	2b00      	cmp	r3, #0
 8001d1a:	da0c      	bge.n	8001d36 <ucg_ccs_init+0x80>
 8001d1c:	687b      	ldr	r3, [r7, #4]
 8001d1e:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8001d22:	b29b      	uxth	r3, r3
 8001d24:	425b      	negs	r3, r3
 8001d26:	b29b      	uxth	r3, r3
 8001d28:	b21a      	sxth	r2, r3
 8001d2a:	687b      	ldr	r3, [r7, #4]
 8001d2c:	809a      	strh	r2, [r3, #4]
 8001d2e:	687b      	ldr	r3, [r7, #4]
 8001d30:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001d34:	805a      	strh	r2, [r3, #2]
 8001d36:	687b      	ldr	r3, [r7, #4]
 8001d38:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8001d3c:	687a      	ldr	r2, [r7, #4]
 8001d3e:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8001d42:	fb93 f1f2 	sdiv	r1, r3, r2
 8001d46:	fb02 f201 	mul.w	r2, r2, r1
 8001d4a:	1a9b      	subs	r3, r3, r2
 8001d4c:	b21a      	sxth	r2, r3
 8001d4e:	687b      	ldr	r3, [r7, #4]
 8001d50:	815a      	strh	r2, [r3, #10]
 8001d52:	687b      	ldr	r3, [r7, #4]
 8001d54:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8001d58:	0fda      	lsrs	r2, r3, #31
 8001d5a:	4413      	add	r3, r2
 8001d5c:	105b      	asrs	r3, r3, #1
 8001d5e:	b21a      	sxth	r2, r3
 8001d60:	687b      	ldr	r3, [r7, #4]
 8001d62:	819a      	strh	r2, [r3, #12]
 8001d64:	687b      	ldr	r3, [r7, #4]
 8001d66:	78fa      	ldrb	r2, [r7, #3]
 8001d68:	701a      	strb	r2, [r3, #0]
 8001d6a:	bf00      	nop
 8001d6c:	370c      	adds	r7, #12
 8001d6e:	46bd      	mov	sp, r7
 8001d70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d74:	4770      	bx	lr

08001d76 <ucg_ccs_step>:
 8001d76:	b480      	push	{r7}
 8001d78:	b083      	sub	sp, #12
 8001d7a:	af00      	add	r7, sp, #0
 8001d7c:	6078      	str	r0, [r7, #4]
 8001d7e:	687b      	ldr	r3, [r7, #4]
 8001d80:	781a      	ldrb	r2, [r3, #0]
 8001d82:	687b      	ldr	r3, [r7, #4]
 8001d84:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8001d88:	b2db      	uxtb	r3, r3
 8001d8a:	4413      	add	r3, r2
 8001d8c:	b2da      	uxtb	r2, r3
 8001d8e:	687b      	ldr	r3, [r7, #4]
 8001d90:	701a      	strb	r2, [r3, #0]
 8001d92:	687b      	ldr	r3, [r7, #4]
 8001d94:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
 8001d98:	b29a      	uxth	r2, r3
 8001d9a:	687b      	ldr	r3, [r7, #4]
 8001d9c:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 8001da0:	b29b      	uxth	r3, r3
 8001da2:	4413      	add	r3, r2
 8001da4:	b29b      	uxth	r3, r3
 8001da6:	b21a      	sxth	r2, r3
 8001da8:	687b      	ldr	r3, [r7, #4]
 8001daa:	819a      	strh	r2, [r3, #12]
 8001dac:	687b      	ldr	r3, [r7, #4]
 8001dae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8001db2:	687b      	ldr	r3, [r7, #4]
 8001db4:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8001db8:	429a      	cmp	r2, r3
 8001dba:	db16      	blt.n	8001dea <ucg_ccs_step+0x74>
 8001dbc:	687b      	ldr	r3, [r7, #4]
 8001dbe:	781a      	ldrb	r2, [r3, #0]
 8001dc0:	687b      	ldr	r3, [r7, #4]
 8001dc2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8001dc6:	b2db      	uxtb	r3, r3
 8001dc8:	4413      	add	r3, r2
 8001dca:	b2da      	uxtb	r2, r3
 8001dcc:	687b      	ldr	r3, [r7, #4]
 8001dce:	701a      	strb	r2, [r3, #0]
 8001dd0:	687b      	ldr	r3, [r7, #4]
 8001dd2:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
 8001dd6:	b29a      	uxth	r2, r3
 8001dd8:	687b      	ldr	r3, [r7, #4]
 8001dda:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8001dde:	b29b      	uxth	r3, r3
 8001de0:	1ad3      	subs	r3, r2, r3
 8001de2:	b29b      	uxth	r3, r3
 8001de4:	b21a      	sxth	r2, r3
 8001de6:	687b      	ldr	r3, [r7, #4]
 8001de8:	819a      	strh	r2, [r3, #12]
 8001dea:	bf00      	nop
 8001dec:	370c      	adds	r7, #12
 8001dee:	46bd      	mov	sp, r7
 8001df0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001df4:	4770      	bx	lr

08001df6 <ucg_ccs_seek>:
 8001df6:	b480      	push	{r7}
 8001df8:	b085      	sub	sp, #20
 8001dfa:	af00      	add	r7, sp, #0
 8001dfc:	6078      	str	r0, [r7, #4]
 8001dfe:	460b      	mov	r3, r1
 8001e00:	807b      	strh	r3, [r7, #2]
 8001e02:	687b      	ldr	r3, [r7, #4]
 8001e04:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8001e08:	b2da      	uxtb	r2, r3
 8001e0a:	687b      	ldr	r3, [r7, #4]
 8001e0c:	701a      	strb	r2, [r3, #0]
 8001e0e:	687b      	ldr	r3, [r7, #4]
 8001e10:	781a      	ldrb	r2, [r3, #0]
 8001e12:	887b      	ldrh	r3, [r7, #2]
 8001e14:	b2db      	uxtb	r3, r3
 8001e16:	fb12 f303 	smulbb	r3, r2, r3
 8001e1a:	b2da      	uxtb	r2, r3
 8001e1c:	687b      	ldr	r3, [r7, #4]
 8001e1e:	701a      	strb	r2, [r3, #0]
 8001e20:	687b      	ldr	r3, [r7, #4]
 8001e22:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 8001e26:	b29a      	uxth	r2, r3
 8001e28:	887b      	ldrh	r3, [r7, #2]
 8001e2a:	fb12 f303 	smulbb	r3, r2, r3
 8001e2e:	b29a      	uxth	r2, r3
 8001e30:	687b      	ldr	r3, [r7, #4]
 8001e32:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8001e36:	0fd9      	lsrs	r1, r3, #31
 8001e38:	440b      	add	r3, r1
 8001e3a:	105b      	asrs	r3, r3, #1
 8001e3c:	b21b      	sxth	r3, r3
 8001e3e:	b29b      	uxth	r3, r3
 8001e40:	4413      	add	r3, r2
 8001e42:	b29b      	uxth	r3, r3
 8001e44:	81fb      	strh	r3, [r7, #14]
 8001e46:	687b      	ldr	r3, [r7, #4]
 8001e48:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8001e4c:	2b00      	cmp	r3, #0
 8001e4e:	db0e      	blt.n	8001e6e <ucg_ccs_seek+0x78>
 8001e50:	687b      	ldr	r3, [r7, #4]
 8001e52:	781a      	ldrb	r2, [r3, #0]
 8001e54:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8001e58:	6879      	ldr	r1, [r7, #4]
 8001e5a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8001e5e:	fb93 f3f1 	sdiv	r3, r3, r1
 8001e62:	b2db      	uxtb	r3, r3
 8001e64:	4413      	add	r3, r2
 8001e66:	b2da      	uxtb	r2, r3
 8001e68:	687b      	ldr	r3, [r7, #4]
 8001e6a:	701a      	strb	r2, [r3, #0]
 8001e6c:	e00d      	b.n	8001e8a <ucg_ccs_seek+0x94>
 8001e6e:	687b      	ldr	r3, [r7, #4]
 8001e70:	781a      	ldrb	r2, [r3, #0]
 8001e72:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8001e76:	6879      	ldr	r1, [r7, #4]
 8001e78:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8001e7c:	fb93 f3f1 	sdiv	r3, r3, r1
 8001e80:	b2db      	uxtb	r3, r3
 8001e82:	1ad3      	subs	r3, r2, r3
 8001e84:	b2da      	uxtb	r2, r3
 8001e86:	687b      	ldr	r3, [r7, #4]
 8001e88:	701a      	strb	r2, [r3, #0]
 8001e8a:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8001e8e:	687a      	ldr	r2, [r7, #4]
 8001e90:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8001e94:	fb93 f1f2 	sdiv	r1, r3, r2
 8001e98:	fb02 f201 	mul.w	r2, r2, r1
 8001e9c:	1a9b      	subs	r3, r3, r2
 8001e9e:	b21a      	sxth	r2, r3
 8001ea0:	687b      	ldr	r3, [r7, #4]
 8001ea2:	819a      	strh	r2, [r3, #12]
 8001ea4:	687b      	ldr	r3, [r7, #4]
 8001ea6:	781a      	ldrb	r2, [r3, #0]
 8001ea8:	687b      	ldr	r3, [r7, #4]
 8001eaa:	785b      	ldrb	r3, [r3, #1]
 8001eac:	4413      	add	r3, r2
 8001eae:	b2da      	uxtb	r2, r3
 8001eb0:	687b      	ldr	r3, [r7, #4]
 8001eb2:	701a      	strb	r2, [r3, #0]
 8001eb4:	bf00      	nop
 8001eb6:	3714      	adds	r7, #20
 8001eb8:	46bd      	mov	sp, r7
 8001eba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ebe:	4770      	bx	lr

08001ec0 <ucg_dev_default_cb>:
 8001ec0:	b580      	push	{r7, lr}
 8001ec2:	b084      	sub	sp, #16
 8001ec4:	af00      	add	r7, sp, #0
 8001ec6:	60f8      	str	r0, [r7, #12]
 8001ec8:	460b      	mov	r3, r1
 8001eca:	607a      	str	r2, [r7, #4]
 8001ecc:	817b      	strh	r3, [r7, #10]
 8001ece:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8001ed2:	2b0c      	cmp	r3, #12
 8001ed4:	d00a      	beq.n	8001eec <ucg_dev_default_cb+0x2c>
 8001ed6:	2b17      	cmp	r3, #23
 8001ed8:	d10f      	bne.n	8001efa <ucg_dev_default_cb+0x3a>
 8001eda:	68fb      	ldr	r3, [r7, #12]
 8001edc:	68db      	ldr	r3, [r3, #12]
 8001ede:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8001ee2:	687a      	ldr	r2, [r7, #4]
 8001ee4:	68f8      	ldr	r0, [r7, #12]
 8001ee6:	4798      	blx	r3
 8001ee8:	4603      	mov	r3, r0
 8001eea:	e007      	b.n	8001efc <ucg_dev_default_cb+0x3c>
 8001eec:	68fb      	ldr	r3, [r7, #12]
 8001eee:	687a      	ldr	r2, [r7, #4]
 8001ef0:	3370      	adds	r3, #112	; 0x70
 8001ef2:	6810      	ldr	r0, [r2, #0]
 8001ef4:	6851      	ldr	r1, [r2, #4]
 8001ef6:	c303      	stmia	r3!, {r0, r1}
 8001ef8:	bf00      	nop
 8001efa:	2301      	movs	r3, #1
 8001efc:	4618      	mov	r0, r3
 8001efe:	3710      	adds	r7, #16
 8001f00:	46bd      	mov	sp, r7
 8001f02:	bd80      	pop	{r7, pc}

08001f04 <ucg_ext_none>:
 8001f04:	b480      	push	{r7}
 8001f06:	b085      	sub	sp, #20
 8001f08:	af00      	add	r7, sp, #0
 8001f0a:	60f8      	str	r0, [r7, #12]
 8001f0c:	460b      	mov	r3, r1
 8001f0e:	607a      	str	r2, [r7, #4]
 8001f10:	817b      	strh	r3, [r7, #10]
 8001f12:	2301      	movs	r3, #1
 8001f14:	4618      	mov	r0, r3
 8001f16:	3714      	adds	r7, #20
 8001f18:	46bd      	mov	sp, r7
 8001f1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f1e:	4770      	bx	lr

08001f20 <ucg_handle_st7735_l90fx>:
 8001f20:	b590      	push	{r4, r7, lr}
 8001f22:	b085      	sub	sp, #20
 8001f24:	af00      	add	r7, sp, #0
 8001f26:	6078      	str	r0, [r7, #4]
 8001f28:	6878      	ldr	r0, [r7, #4]
 8001f2a:	f001 fbdd 	bl	80036e8 <ucg_clip_l90fx>
 8001f2e:	4603      	mov	r3, r0
 8001f30:	2b00      	cmp	r3, #0
 8001f32:	d053      	beq.n	8001fdc <ucg_handle_st7735_l90fx+0xbc>
 8001f34:	687b      	ldr	r3, [r7, #4]
 8001f36:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 8001f3a:	2b01      	cmp	r3, #1
 8001f3c:	d008      	beq.n	8001f50 <ucg_handle_st7735_l90fx+0x30>
 8001f3e:	2b02      	cmp	r3, #2
 8001f40:	d00b      	beq.n	8001f5a <ucg_handle_st7735_l90fx+0x3a>
 8001f42:	2b00      	cmp	r3, #0
 8001f44:	d11b      	bne.n	8001f7e <ucg_handle_st7735_l90fx+0x5e>
 8001f46:	4928      	ldr	r1, [pc, #160]	; (8001fe8 <ucg_handle_st7735_l90fx+0xc8>)
 8001f48:	6878      	ldr	r0, [r7, #4]
 8001f4a:	f001 fefb 	bl	8003d44 <ucg_com_SendCmdSeq>
 8001f4e:	e028      	b.n	8001fa2 <ucg_handle_st7735_l90fx+0x82>
 8001f50:	4926      	ldr	r1, [pc, #152]	; (8001fec <ucg_handle_st7735_l90fx+0xcc>)
 8001f52:	6878      	ldr	r0, [r7, #4]
 8001f54:	f001 fef6 	bl	8003d44 <ucg_com_SendCmdSeq>
 8001f58:	e023      	b.n	8001fa2 <ucg_handle_st7735_l90fx+0x82>
 8001f5a:	687b      	ldr	r3, [r7, #4]
 8001f5c:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8001f5e:	81fb      	strh	r3, [r7, #14]
 8001f60:	89fb      	ldrh	r3, [r7, #14]
 8001f62:	f1c3 037f 	rsb	r3, r3, #127	; 0x7f
 8001f66:	b29b      	uxth	r3, r3
 8001f68:	b21a      	sxth	r2, r3
 8001f6a:	687b      	ldr	r3, [r7, #4]
 8001f6c:	849a      	strh	r2, [r3, #36]	; 0x24
 8001f6e:	4920      	ldr	r1, [pc, #128]	; (8001ff0 <ucg_handle_st7735_l90fx+0xd0>)
 8001f70:	6878      	ldr	r0, [r7, #4]
 8001f72:	f001 fee7 	bl	8003d44 <ucg_com_SendCmdSeq>
 8001f76:	687b      	ldr	r3, [r7, #4]
 8001f78:	89fa      	ldrh	r2, [r7, #14]
 8001f7a:	849a      	strh	r2, [r3, #36]	; 0x24
 8001f7c:	e011      	b.n	8001fa2 <ucg_handle_st7735_l90fx+0x82>
 8001f7e:	687b      	ldr	r3, [r7, #4]
 8001f80:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8001f82:	81fb      	strh	r3, [r7, #14]
 8001f84:	89fb      	ldrh	r3, [r7, #14]
 8001f86:	f1c3 037f 	rsb	r3, r3, #127	; 0x7f
 8001f8a:	b29b      	uxth	r3, r3
 8001f8c:	b21a      	sxth	r2, r3
 8001f8e:	687b      	ldr	r3, [r7, #4]
 8001f90:	84da      	strh	r2, [r3, #38]	; 0x26
 8001f92:	4918      	ldr	r1, [pc, #96]	; (8001ff4 <ucg_handle_st7735_l90fx+0xd4>)
 8001f94:	6878      	ldr	r0, [r7, #4]
 8001f96:	f001 fed5 	bl	8003d44 <ucg_com_SendCmdSeq>
 8001f9a:	687b      	ldr	r3, [r7, #4]
 8001f9c:	89fa      	ldrh	r2, [r7, #14]
 8001f9e:	84da      	strh	r2, [r3, #38]	; 0x26
 8001fa0:	bf00      	nop
 8001fa2:	687b      	ldr	r3, [r7, #4]
 8001fa4:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8001fa8:	723b      	strb	r3, [r7, #8]
 8001faa:	687b      	ldr	r3, [r7, #4]
 8001fac:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8001fb0:	727b      	strb	r3, [r7, #9]
 8001fb2:	687b      	ldr	r3, [r7, #4]
 8001fb4:	f893 302a 	ldrb.w	r3, [r3, #42]	; 0x2a
 8001fb8:	72bb      	strb	r3, [r7, #10]
 8001fba:	687b      	ldr	r3, [r7, #4]
 8001fbc:	69dc      	ldr	r4, [r3, #28]
 8001fbe:	687b      	ldr	r3, [r7, #4]
 8001fc0:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 8001fc4:	b29a      	uxth	r2, r3
 8001fc6:	f107 0308 	add.w	r3, r7, #8
 8001fca:	2113      	movs	r1, #19
 8001fcc:	6878      	ldr	r0, [r7, #4]
 8001fce:	47a0      	blx	r4
 8001fd0:	2101      	movs	r1, #1
 8001fd2:	6878      	ldr	r0, [r7, #4]
 8001fd4:	f001 fe02 	bl	8003bdc <ucg_com_SetCSLineStatus>
 8001fd8:	2301      	movs	r3, #1
 8001fda:	e000      	b.n	8001fde <ucg_handle_st7735_l90fx+0xbe>
 8001fdc:	2300      	movs	r3, #0
 8001fde:	4618      	mov	r0, r3
 8001fe0:	3714      	adds	r7, #20
 8001fe2:	46bd      	mov	sp, r7
 8001fe4:	bd90      	pop	{r4, r7, pc}
 8001fe6:	bf00      	nop
 8001fe8:	08004988 	.word	0x08004988
 8001fec:	080049a8 	.word	0x080049a8
 8001ff0:	080049cc 	.word	0x080049cc
 8001ff4:	080049f0 	.word	0x080049f0

08001ff8 <ucg_handle_st7735_l90se>:
 8001ff8:	b590      	push	{r4, r7, lr}
 8001ffa:	b087      	sub	sp, #28
 8001ffc:	af00      	add	r7, sp, #0
 8001ffe:	6078      	str	r0, [r7, #4]
 8002000:	2300      	movs	r3, #0
 8002002:	75fb      	strb	r3, [r7, #23]
 8002004:	e01a      	b.n	800203c <ucg_handle_st7735_l90se+0x44>
 8002006:	687b      	ldr	r3, [r7, #4]
 8002008:	f103 0146 	add.w	r1, r3, #70	; 0x46
 800200c:	7dfa      	ldrb	r2, [r7, #23]
 800200e:	4613      	mov	r3, r2
 8002010:	00db      	lsls	r3, r3, #3
 8002012:	1a9b      	subs	r3, r3, r2
 8002014:	005b      	lsls	r3, r3, #1
 8002016:	18c8      	adds	r0, r1, r3
 8002018:	7dfb      	ldrb	r3, [r7, #23]
 800201a:	687a      	ldr	r2, [r7, #4]
 800201c:	4413      	add	r3, r2
 800201e:	f893 103a 	ldrb.w	r1, [r3, #58]	; 0x3a
 8002022:	7dfb      	ldrb	r3, [r7, #23]
 8002024:	687a      	ldr	r2, [r7, #4]
 8002026:	4413      	add	r3, r2
 8002028:	f893 203d 	ldrb.w	r2, [r3, #61]	; 0x3d
 800202c:	687b      	ldr	r3, [r7, #4]
 800202e:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 8002032:	f7ff fe40 	bl	8001cb6 <ucg_ccs_init>
 8002036:	7dfb      	ldrb	r3, [r7, #23]
 8002038:	3301      	adds	r3, #1
 800203a:	75fb      	strb	r3, [r7, #23]
 800203c:	7dfb      	ldrb	r3, [r7, #23]
 800203e:	2b02      	cmp	r3, #2
 8002040:	d9e1      	bls.n	8002006 <ucg_handle_st7735_l90se+0xe>
 8002042:	6878      	ldr	r0, [r7, #4]
 8002044:	f001 fcd0 	bl	80039e8 <ucg_clip_l90se>
 8002048:	4603      	mov	r3, r0
 800204a:	2b00      	cmp	r3, #0
 800204c:	d071      	beq.n	8002132 <ucg_handle_st7735_l90se+0x13a>
 800204e:	687b      	ldr	r3, [r7, #4]
 8002050:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 8002054:	2b01      	cmp	r3, #1
 8002056:	d008      	beq.n	800206a <ucg_handle_st7735_l90se+0x72>
 8002058:	2b02      	cmp	r3, #2
 800205a:	d00b      	beq.n	8002074 <ucg_handle_st7735_l90se+0x7c>
 800205c:	2b00      	cmp	r3, #0
 800205e:	d11b      	bne.n	8002098 <ucg_handle_st7735_l90se+0xa0>
 8002060:	4936      	ldr	r1, [pc, #216]	; (800213c <ucg_handle_st7735_l90se+0x144>)
 8002062:	6878      	ldr	r0, [r7, #4]
 8002064:	f001 fe6e 	bl	8003d44 <ucg_com_SendCmdSeq>
 8002068:	e028      	b.n	80020bc <ucg_handle_st7735_l90se+0xc4>
 800206a:	4935      	ldr	r1, [pc, #212]	; (8002140 <ucg_handle_st7735_l90se+0x148>)
 800206c:	6878      	ldr	r0, [r7, #4]
 800206e:	f001 fe69 	bl	8003d44 <ucg_com_SendCmdSeq>
 8002072:	e023      	b.n	80020bc <ucg_handle_st7735_l90se+0xc4>
 8002074:	687b      	ldr	r3, [r7, #4]
 8002076:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8002078:	827b      	strh	r3, [r7, #18]
 800207a:	8a7b      	ldrh	r3, [r7, #18]
 800207c:	f1c3 037f 	rsb	r3, r3, #127	; 0x7f
 8002080:	b29b      	uxth	r3, r3
 8002082:	b21a      	sxth	r2, r3
 8002084:	687b      	ldr	r3, [r7, #4]
 8002086:	849a      	strh	r2, [r3, #36]	; 0x24
 8002088:	492e      	ldr	r1, [pc, #184]	; (8002144 <ucg_handle_st7735_l90se+0x14c>)
 800208a:	6878      	ldr	r0, [r7, #4]
 800208c:	f001 fe5a 	bl	8003d44 <ucg_com_SendCmdSeq>
 8002090:	687b      	ldr	r3, [r7, #4]
 8002092:	8a7a      	ldrh	r2, [r7, #18]
 8002094:	849a      	strh	r2, [r3, #36]	; 0x24
 8002096:	e011      	b.n	80020bc <ucg_handle_st7735_l90se+0xc4>
 8002098:	687b      	ldr	r3, [r7, #4]
 800209a:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800209c:	827b      	strh	r3, [r7, #18]
 800209e:	8a7b      	ldrh	r3, [r7, #18]
 80020a0:	f1c3 037f 	rsb	r3, r3, #127	; 0x7f
 80020a4:	b29b      	uxth	r3, r3
 80020a6:	b21a      	sxth	r2, r3
 80020a8:	687b      	ldr	r3, [r7, #4]
 80020aa:	84da      	strh	r2, [r3, #38]	; 0x26
 80020ac:	4926      	ldr	r1, [pc, #152]	; (8002148 <ucg_handle_st7735_l90se+0x150>)
 80020ae:	6878      	ldr	r0, [r7, #4]
 80020b0:	f001 fe48 	bl	8003d44 <ucg_com_SendCmdSeq>
 80020b4:	687b      	ldr	r3, [r7, #4]
 80020b6:	8a7a      	ldrh	r2, [r7, #18]
 80020b8:	84da      	strh	r2, [r3, #38]	; 0x26
 80020ba:	bf00      	nop
 80020bc:	2300      	movs	r3, #0
 80020be:	82bb      	strh	r3, [r7, #20]
 80020c0:	e02a      	b.n	8002118 <ucg_handle_st7735_l90se+0x120>
 80020c2:	687b      	ldr	r3, [r7, #4]
 80020c4:	f893 3046 	ldrb.w	r3, [r3, #70]	; 0x46
 80020c8:	733b      	strb	r3, [r7, #12]
 80020ca:	687b      	ldr	r3, [r7, #4]
 80020cc:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 80020d0:	737b      	strb	r3, [r7, #13]
 80020d2:	687b      	ldr	r3, [r7, #4]
 80020d4:	f893 3062 	ldrb.w	r3, [r3, #98]	; 0x62
 80020d8:	73bb      	strb	r3, [r7, #14]
 80020da:	687b      	ldr	r3, [r7, #4]
 80020dc:	69dc      	ldr	r4, [r3, #28]
 80020de:	f107 030c 	add.w	r3, r7, #12
 80020e2:	2201      	movs	r2, #1
 80020e4:	2113      	movs	r1, #19
 80020e6:	6878      	ldr	r0, [r7, #4]
 80020e8:	47a0      	blx	r4
 80020ea:	687b      	ldr	r3, [r7, #4]
 80020ec:	3346      	adds	r3, #70	; 0x46
 80020ee:	4618      	mov	r0, r3
 80020f0:	f7ff fe41 	bl	8001d76 <ucg_ccs_step>
 80020f4:	687b      	ldr	r3, [r7, #4]
 80020f6:	3346      	adds	r3, #70	; 0x46
 80020f8:	330e      	adds	r3, #14
 80020fa:	4618      	mov	r0, r3
 80020fc:	f7ff fe3b 	bl	8001d76 <ucg_ccs_step>
 8002100:	687b      	ldr	r3, [r7, #4]
 8002102:	3346      	adds	r3, #70	; 0x46
 8002104:	331c      	adds	r3, #28
 8002106:	4618      	mov	r0, r3
 8002108:	f7ff fe35 	bl	8001d76 <ucg_ccs_step>
 800210c:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 8002110:	b29b      	uxth	r3, r3
 8002112:	3301      	adds	r3, #1
 8002114:	b29b      	uxth	r3, r3
 8002116:	82bb      	strh	r3, [r7, #20]
 8002118:	687b      	ldr	r3, [r7, #4]
 800211a:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 800211e:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 8002122:	429a      	cmp	r2, r3
 8002124:	dbcd      	blt.n	80020c2 <ucg_handle_st7735_l90se+0xca>
 8002126:	2101      	movs	r1, #1
 8002128:	6878      	ldr	r0, [r7, #4]
 800212a:	f001 fd57 	bl	8003bdc <ucg_com_SetCSLineStatus>
 800212e:	2301      	movs	r3, #1
 8002130:	e000      	b.n	8002134 <ucg_handle_st7735_l90se+0x13c>
 8002132:	2300      	movs	r3, #0
 8002134:	4618      	mov	r0, r3
 8002136:	371c      	adds	r7, #28
 8002138:	46bd      	mov	sp, r7
 800213a:	bd90      	pop	{r4, r7, pc}
 800213c:	08004988 	.word	0x08004988
 8002140:	080049a8 	.word	0x080049a8
 8002144:	080049cc 	.word	0x080049cc
 8002148:	080049f0 	.word	0x080049f0

0800214c <ucg_dev_ic_st7735_18>:
 800214c:	b590      	push	{r4, r7, lr}
 800214e:	b087      	sub	sp, #28
 8002150:	af00      	add	r7, sp, #0
 8002152:	60f8      	str	r0, [r7, #12]
 8002154:	460b      	mov	r3, r1
 8002156:	607a      	str	r2, [r7, #4]
 8002158:	817b      	strh	r3, [r7, #10]
 800215a:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800215e:	3b0a      	subs	r3, #10
 8002160:	2b0b      	cmp	r3, #11
 8002162:	d85f      	bhi.n	8002224 <ucg_dev_ic_st7735_18+0xd8>
 8002164:	a201      	add	r2, pc, #4	; (adr r2, 800216c <ucg_dev_ic_st7735_18+0x20>)
 8002166:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800216a:	bf00      	nop
 800216c:	0800219d 	.word	0x0800219d
 8002170:	080021b7 	.word	0x080021b7
 8002174:	08002225 	.word	0x08002225
 8002178:	08002225 	.word	0x08002225
 800217c:	08002225 	.word	0x08002225
 8002180:	080021c3 	.word	0x080021c3
 8002184:	08002225 	.word	0x08002225
 8002188:	08002225 	.word	0x08002225
 800218c:	08002225 	.word	0x08002225
 8002190:	08002225 	.word	0x08002225
 8002194:	080021d3 	.word	0x080021d3
 8002198:	0800221b 	.word	0x0800221b
 800219c:	68fb      	ldr	r3, [r7, #12]
 800219e:	2202      	movs	r2, #2
 80021a0:	841a      	strh	r2, [r3, #32]
 80021a2:	68fb      	ldr	r3, [r7, #12]
 80021a4:	2201      	movs	r2, #1
 80021a6:	845a      	strh	r2, [r3, #34]	; 0x22
 80021a8:	2242      	movs	r2, #66	; 0x42
 80021aa:	2164      	movs	r1, #100	; 0x64
 80021ac:	68f8      	ldr	r0, [r7, #12]
 80021ae:	f001 fc64 	bl	8003a7a <ucg_com_PowerUp>
 80021b2:	4603      	mov	r3, r0
 80021b4:	e03e      	b.n	8002234 <ucg_dev_ic_st7735_18+0xe8>
 80021b6:	4921      	ldr	r1, [pc, #132]	; (800223c <ucg_dev_ic_st7735_18+0xf0>)
 80021b8:	68f8      	ldr	r0, [r7, #12]
 80021ba:	f001 fdc3 	bl	8003d44 <ucg_com_SendCmdSeq>
 80021be:	2301      	movs	r3, #1
 80021c0:	e038      	b.n	8002234 <ucg_dev_ic_st7735_18+0xe8>
 80021c2:	687b      	ldr	r3, [r7, #4]
 80021c4:	2280      	movs	r2, #128	; 0x80
 80021c6:	801a      	strh	r2, [r3, #0]
 80021c8:	687b      	ldr	r3, [r7, #4]
 80021ca:	2280      	movs	r2, #128	; 0x80
 80021cc:	805a      	strh	r2, [r3, #2]
 80021ce:	2301      	movs	r3, #1
 80021d0:	e030      	b.n	8002234 <ucg_dev_ic_st7735_18+0xe8>
 80021d2:	68f8      	ldr	r0, [r7, #12]
 80021d4:	f001 fa6f 	bl	80036b6 <ucg_clip_is_pixel_visible>
 80021d8:	4603      	mov	r3, r0
 80021da:	2b00      	cmp	r3, #0
 80021dc:	d01b      	beq.n	8002216 <ucg_dev_ic_st7735_18+0xca>
 80021de:	4918      	ldr	r1, [pc, #96]	; (8002240 <ucg_dev_ic_st7735_18+0xf4>)
 80021e0:	68f8      	ldr	r0, [r7, #12]
 80021e2:	f001 fdaf 	bl	8003d44 <ucg_com_SendCmdSeq>
 80021e6:	68fb      	ldr	r3, [r7, #12]
 80021e8:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 80021ec:	753b      	strb	r3, [r7, #20]
 80021ee:	68fb      	ldr	r3, [r7, #12]
 80021f0:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 80021f4:	757b      	strb	r3, [r7, #21]
 80021f6:	68fb      	ldr	r3, [r7, #12]
 80021f8:	f893 302a 	ldrb.w	r3, [r3, #42]	; 0x2a
 80021fc:	75bb      	strb	r3, [r7, #22]
 80021fe:	68fb      	ldr	r3, [r7, #12]
 8002200:	69dc      	ldr	r4, [r3, #28]
 8002202:	f107 0314 	add.w	r3, r7, #20
 8002206:	2201      	movs	r2, #1
 8002208:	2113      	movs	r1, #19
 800220a:	68f8      	ldr	r0, [r7, #12]
 800220c:	47a0      	blx	r4
 800220e:	2101      	movs	r1, #1
 8002210:	68f8      	ldr	r0, [r7, #12]
 8002212:	f001 fce3 	bl	8003bdc <ucg_com_SetCSLineStatus>
 8002216:	2301      	movs	r3, #1
 8002218:	e00c      	b.n	8002234 <ucg_dev_ic_st7735_18+0xe8>
 800221a:	68f8      	ldr	r0, [r7, #12]
 800221c:	f7ff fe80 	bl	8001f20 <ucg_handle_st7735_l90fx>
 8002220:	2301      	movs	r3, #1
 8002222:	e007      	b.n	8002234 <ucg_dev_ic_st7735_18+0xe8>
 8002224:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8002228:	687a      	ldr	r2, [r7, #4]
 800222a:	4619      	mov	r1, r3
 800222c:	68f8      	ldr	r0, [r7, #12]
 800222e:	f7ff fe47 	bl	8001ec0 <ucg_dev_default_cb>
 8002232:	4603      	mov	r3, r0
 8002234:	4618      	mov	r0, r3
 8002236:	371c      	adds	r7, #28
 8002238:	46bd      	mov	sp, r7
 800223a:	bd90      	pop	{r4, r7, pc}
 800223c:	08004a14 	.word	0x08004a14
 8002240:	08004968 	.word	0x08004968

08002244 <ucg_ext_st7735_18>:
 8002244:	b580      	push	{r7, lr}
 8002246:	b084      	sub	sp, #16
 8002248:	af00      	add	r7, sp, #0
 800224a:	60f8      	str	r0, [r7, #12]
 800224c:	460b      	mov	r3, r1
 800224e:	607a      	str	r2, [r7, #4]
 8002250:	817b      	strh	r3, [r7, #10]
 8002252:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8002256:	2b17      	cmp	r3, #23
 8002258:	d103      	bne.n	8002262 <ucg_ext_st7735_18+0x1e>
 800225a:	68f8      	ldr	r0, [r7, #12]
 800225c:	f7ff fecc 	bl	8001ff8 <ucg_handle_st7735_l90se>
 8002260:	bf00      	nop
 8002262:	2301      	movs	r3, #1
 8002264:	4618      	mov	r0, r3
 8002266:	3710      	adds	r7, #16
 8002268:	46bd      	mov	sp, r7
 800226a:	bd80      	pop	{r7, pc}

0800226c <ucg_PowerDown>:
 800226c:	b580      	push	{r7, lr}
 800226e:	b082      	sub	sp, #8
 8002270:	af00      	add	r7, sp, #0
 8002272:	6078      	str	r0, [r7, #4]
 8002274:	687b      	ldr	r3, [r7, #4]
 8002276:	781b      	ldrb	r3, [r3, #0]
 8002278:	f003 0301 	and.w	r3, r3, #1
 800227c:	b2db      	uxtb	r3, r3
 800227e:	2b00      	cmp	r3, #0
 8002280:	d00a      	beq.n	8002298 <ucg_PowerDown+0x2c>
 8002282:	687b      	ldr	r3, [r7, #4]
 8002284:	689b      	ldr	r3, [r3, #8]
 8002286:	2200      	movs	r2, #0
 8002288:	210b      	movs	r1, #11
 800228a:	6878      	ldr	r0, [r7, #4]
 800228c:	4798      	blx	r3
 800228e:	687a      	ldr	r2, [r7, #4]
 8002290:	7813      	ldrb	r3, [r2, #0]
 8002292:	f36f 0300 	bfc	r3, #0, #1
 8002296:	7013      	strb	r3, [r2, #0]
 8002298:	bf00      	nop
 800229a:	3708      	adds	r7, #8
 800229c:	46bd      	mov	sp, r7
 800229e:	bd80      	pop	{r7, pc}

080022a0 <ucg_PowerUp>:
 80022a0:	b580      	push	{r7, lr}
 80022a2:	b084      	sub	sp, #16
 80022a4:	af00      	add	r7, sp, #0
 80022a6:	6078      	str	r0, [r7, #4]
 80022a8:	6878      	ldr	r0, [r7, #4]
 80022aa:	f7ff ffdf 	bl	800226c <ucg_PowerDown>
 80022ae:	687b      	ldr	r3, [r7, #4]
 80022b0:	689b      	ldr	r3, [r3, #8]
 80022b2:	2200      	movs	r2, #0
 80022b4:	210a      	movs	r1, #10
 80022b6:	6878      	ldr	r0, [r7, #4]
 80022b8:	4798      	blx	r3
 80022ba:	4603      	mov	r3, r0
 80022bc:	81fb      	strh	r3, [r7, #14]
 80022be:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80022c2:	2b00      	cmp	r3, #0
 80022c4:	d004      	beq.n	80022d0 <ucg_PowerUp+0x30>
 80022c6:	687a      	ldr	r2, [r7, #4]
 80022c8:	7813      	ldrb	r3, [r2, #0]
 80022ca:	f043 0301 	orr.w	r3, r3, #1
 80022ce:	7013      	strb	r3, [r2, #0]
 80022d0:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80022d4:	4618      	mov	r0, r3
 80022d6:	3710      	adds	r7, #16
 80022d8:	46bd      	mov	sp, r7
 80022da:	bd80      	pop	{r7, pc}

080022dc <ucg_SetClipBox>:
 80022dc:	b580      	push	{r7, lr}
 80022de:	b082      	sub	sp, #8
 80022e0:	af00      	add	r7, sp, #0
 80022e2:	6078      	str	r0, [r7, #4]
 80022e4:	6039      	str	r1, [r7, #0]
 80022e6:	687b      	ldr	r3, [r7, #4]
 80022e8:	689b      	ldr	r3, [r3, #8]
 80022ea:	683a      	ldr	r2, [r7, #0]
 80022ec:	210c      	movs	r1, #12
 80022ee:	6878      	ldr	r0, [r7, #4]
 80022f0:	4798      	blx	r3
 80022f2:	bf00      	nop
 80022f4:	3708      	adds	r7, #8
 80022f6:	46bd      	mov	sp, r7
 80022f8:	bd80      	pop	{r7, pc}

080022fa <ucg_SetMaxClipRange>:
 80022fa:	b580      	push	{r7, lr}
 80022fc:	b084      	sub	sp, #16
 80022fe:	af00      	add	r7, sp, #0
 8002300:	6078      	str	r0, [r7, #4]
 8002302:	687a      	ldr	r2, [r7, #4]
 8002304:	f107 030c 	add.w	r3, r7, #12
 8002308:	3202      	adds	r2, #2
 800230a:	6810      	ldr	r0, [r2, #0]
 800230c:	6018      	str	r0, [r3, #0]
 800230e:	2300      	movs	r3, #0
 8002310:	813b      	strh	r3, [r7, #8]
 8002312:	2300      	movs	r3, #0
 8002314:	817b      	strh	r3, [r7, #10]
 8002316:	f107 0308 	add.w	r3, r7, #8
 800231a:	4619      	mov	r1, r3
 800231c:	6878      	ldr	r0, [r7, #4]
 800231e:	f7ff ffdd 	bl	80022dc <ucg_SetClipBox>
 8002322:	bf00      	nop
 8002324:	3710      	adds	r7, #16
 8002326:	46bd      	mov	sp, r7
 8002328:	bd80      	pop	{r7, pc}

0800232a <ucg_GetDimension>:
 800232a:	b580      	push	{r7, lr}
 800232c:	b082      	sub	sp, #8
 800232e:	af00      	add	r7, sp, #0
 8002330:	6078      	str	r0, [r7, #4]
 8002332:	687b      	ldr	r3, [r7, #4]
 8002334:	689b      	ldr	r3, [r3, #8]
 8002336:	687a      	ldr	r2, [r7, #4]
 8002338:	3202      	adds	r2, #2
 800233a:	210f      	movs	r1, #15
 800233c:	6878      	ldr	r0, [r7, #4]
 800233e:	4798      	blx	r3
 8002340:	6878      	ldr	r0, [r7, #4]
 8002342:	f7ff ffda 	bl	80022fa <ucg_SetMaxClipRange>
 8002346:	bf00      	nop
 8002348:	3708      	adds	r7, #8
 800234a:	46bd      	mov	sp, r7
 800234c:	bd80      	pop	{r7, pc}

0800234e <ucg_DrawL90FXWithArg>:
 800234e:	b580      	push	{r7, lr}
 8002350:	b082      	sub	sp, #8
 8002352:	af00      	add	r7, sp, #0
 8002354:	6078      	str	r0, [r7, #4]
 8002356:	687b      	ldr	r3, [r7, #4]
 8002358:	689b      	ldr	r3, [r3, #8]
 800235a:	687a      	ldr	r2, [r7, #4]
 800235c:	3224      	adds	r2, #36	; 0x24
 800235e:	2115      	movs	r1, #21
 8002360:	6878      	ldr	r0, [r7, #4]
 8002362:	4798      	blx	r3
 8002364:	bf00      	nop
 8002366:	3708      	adds	r7, #8
 8002368:	46bd      	mov	sp, r7
 800236a:	bd80      	pop	{r7, pc}

0800236c <ucg_dev_st7735_18x128x128>:
 800236c:	b580      	push	{r7, lr}
 800236e:	b084      	sub	sp, #16
 8002370:	af00      	add	r7, sp, #0
 8002372:	60f8      	str	r0, [r7, #12]
 8002374:	460b      	mov	r3, r1
 8002376:	607a      	str	r2, [r7, #4]
 8002378:	817b      	strh	r3, [r7, #10]
 800237a:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800237e:	2b0b      	cmp	r3, #11
 8002380:	d015      	beq.n	80023ae <ucg_dev_st7735_18x128x128+0x42>
 8002382:	2b0f      	cmp	r3, #15
 8002384:	d01c      	beq.n	80023c0 <ucg_dev_st7735_18x128x128+0x54>
 8002386:	2b0a      	cmp	r3, #10
 8002388:	d122      	bne.n	80023d0 <ucg_dev_st7735_18x128x128+0x64>
 800238a:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800238e:	687a      	ldr	r2, [r7, #4]
 8002390:	4619      	mov	r1, r3
 8002392:	68f8      	ldr	r0, [r7, #12]
 8002394:	f7ff feda 	bl	800214c <ucg_dev_ic_st7735_18>
 8002398:	4603      	mov	r3, r0
 800239a:	2b00      	cmp	r3, #0
 800239c:	d101      	bne.n	80023a2 <ucg_dev_st7735_18x128x128+0x36>
 800239e:	2300      	movs	r3, #0
 80023a0:	e01e      	b.n	80023e0 <ucg_dev_st7735_18x128x128+0x74>
 80023a2:	4911      	ldr	r1, [pc, #68]	; (80023e8 <ucg_dev_st7735_18x128x128+0x7c>)
 80023a4:	68f8      	ldr	r0, [r7, #12]
 80023a6:	f001 fccd 	bl	8003d44 <ucg_com_SendCmdSeq>
 80023aa:	2301      	movs	r3, #1
 80023ac:	e018      	b.n	80023e0 <ucg_dev_st7735_18x128x128+0x74>
 80023ae:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80023b2:	687a      	ldr	r2, [r7, #4]
 80023b4:	4619      	mov	r1, r3
 80023b6:	68f8      	ldr	r0, [r7, #12]
 80023b8:	f7ff fec8 	bl	800214c <ucg_dev_ic_st7735_18>
 80023bc:	4603      	mov	r3, r0
 80023be:	e00f      	b.n	80023e0 <ucg_dev_st7735_18x128x128+0x74>
 80023c0:	687b      	ldr	r3, [r7, #4]
 80023c2:	2280      	movs	r2, #128	; 0x80
 80023c4:	801a      	strh	r2, [r3, #0]
 80023c6:	687b      	ldr	r3, [r7, #4]
 80023c8:	2280      	movs	r2, #128	; 0x80
 80023ca:	805a      	strh	r2, [r3, #2]
 80023cc:	2301      	movs	r3, #1
 80023ce:	e007      	b.n	80023e0 <ucg_dev_st7735_18x128x128+0x74>
 80023d0:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80023d4:	687a      	ldr	r2, [r7, #4]
 80023d6:	4619      	mov	r1, r3
 80023d8:	68f8      	ldr	r0, [r7, #12]
 80023da:	f7ff feb7 	bl	800214c <ucg_dev_ic_st7735_18>
 80023de:	4603      	mov	r3, r0
 80023e0:	4618      	mov	r0, r3
 80023e2:	3710      	adds	r7, #16
 80023e4:	46bd      	mov	sp, r7
 80023e6:	bd80      	pop	{r7, pc}
 80023e8:	08004a1c 	.word	0x08004a1c

080023ec <ucg_font_get_byte>:
 80023ec:	b480      	push	{r7}
 80023ee:	b083      	sub	sp, #12
 80023f0:	af00      	add	r7, sp, #0
 80023f2:	6078      	str	r0, [r7, #4]
 80023f4:	460b      	mov	r3, r1
 80023f6:	70fb      	strb	r3, [r7, #3]
 80023f8:	78fb      	ldrb	r3, [r7, #3]
 80023fa:	687a      	ldr	r2, [r7, #4]
 80023fc:	4413      	add	r3, r2
 80023fe:	607b      	str	r3, [r7, #4]
 8002400:	687b      	ldr	r3, [r7, #4]
 8002402:	781b      	ldrb	r3, [r3, #0]
 8002404:	4618      	mov	r0, r3
 8002406:	370c      	adds	r7, #12
 8002408:	46bd      	mov	sp, r7
 800240a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800240e:	4770      	bx	lr

08002410 <ucg_font_get_word>:
 8002410:	b480      	push	{r7}
 8002412:	b085      	sub	sp, #20
 8002414:	af00      	add	r7, sp, #0
 8002416:	6078      	str	r0, [r7, #4]
 8002418:	460b      	mov	r3, r1
 800241a:	70fb      	strb	r3, [r7, #3]
 800241c:	78fb      	ldrb	r3, [r7, #3]
 800241e:	687a      	ldr	r2, [r7, #4]
 8002420:	4413      	add	r3, r2
 8002422:	607b      	str	r3, [r7, #4]
 8002424:	687b      	ldr	r3, [r7, #4]
 8002426:	781b      	ldrb	r3, [r3, #0]
 8002428:	81fb      	strh	r3, [r7, #14]
 800242a:	687b      	ldr	r3, [r7, #4]
 800242c:	3301      	adds	r3, #1
 800242e:	607b      	str	r3, [r7, #4]
 8002430:	89fb      	ldrh	r3, [r7, #14]
 8002432:	021b      	lsls	r3, r3, #8
 8002434:	81fb      	strh	r3, [r7, #14]
 8002436:	687b      	ldr	r3, [r7, #4]
 8002438:	781b      	ldrb	r3, [r3, #0]
 800243a:	b29a      	uxth	r2, r3
 800243c:	89fb      	ldrh	r3, [r7, #14]
 800243e:	4413      	add	r3, r2
 8002440:	81fb      	strh	r3, [r7, #14]
 8002442:	89fb      	ldrh	r3, [r7, #14]
 8002444:	4618      	mov	r0, r3
 8002446:	3714      	adds	r7, #20
 8002448:	46bd      	mov	sp, r7
 800244a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800244e:	4770      	bx	lr

08002450 <ucg_read_font_info>:
 8002450:	b580      	push	{r7, lr}
 8002452:	b082      	sub	sp, #8
 8002454:	af00      	add	r7, sp, #0
 8002456:	6078      	str	r0, [r7, #4]
 8002458:	6039      	str	r1, [r7, #0]
 800245a:	2100      	movs	r1, #0
 800245c:	6838      	ldr	r0, [r7, #0]
 800245e:	f7ff ffc5 	bl	80023ec <ucg_font_get_byte>
 8002462:	4603      	mov	r3, r0
 8002464:	461a      	mov	r2, r3
 8002466:	687b      	ldr	r3, [r7, #4]
 8002468:	701a      	strb	r2, [r3, #0]
 800246a:	2101      	movs	r1, #1
 800246c:	6838      	ldr	r0, [r7, #0]
 800246e:	f7ff ffbd 	bl	80023ec <ucg_font_get_byte>
 8002472:	4603      	mov	r3, r0
 8002474:	461a      	mov	r2, r3
 8002476:	687b      	ldr	r3, [r7, #4]
 8002478:	705a      	strb	r2, [r3, #1]
 800247a:	2102      	movs	r1, #2
 800247c:	6838      	ldr	r0, [r7, #0]
 800247e:	f7ff ffb5 	bl	80023ec <ucg_font_get_byte>
 8002482:	4603      	mov	r3, r0
 8002484:	461a      	mov	r2, r3
 8002486:	687b      	ldr	r3, [r7, #4]
 8002488:	709a      	strb	r2, [r3, #2]
 800248a:	2103      	movs	r1, #3
 800248c:	6838      	ldr	r0, [r7, #0]
 800248e:	f7ff ffad 	bl	80023ec <ucg_font_get_byte>
 8002492:	4603      	mov	r3, r0
 8002494:	461a      	mov	r2, r3
 8002496:	687b      	ldr	r3, [r7, #4]
 8002498:	70da      	strb	r2, [r3, #3]
 800249a:	2104      	movs	r1, #4
 800249c:	6838      	ldr	r0, [r7, #0]
 800249e:	f7ff ffa5 	bl	80023ec <ucg_font_get_byte>
 80024a2:	4603      	mov	r3, r0
 80024a4:	461a      	mov	r2, r3
 80024a6:	687b      	ldr	r3, [r7, #4]
 80024a8:	711a      	strb	r2, [r3, #4]
 80024aa:	2105      	movs	r1, #5
 80024ac:	6838      	ldr	r0, [r7, #0]
 80024ae:	f7ff ff9d 	bl	80023ec <ucg_font_get_byte>
 80024b2:	4603      	mov	r3, r0
 80024b4:	461a      	mov	r2, r3
 80024b6:	687b      	ldr	r3, [r7, #4]
 80024b8:	715a      	strb	r2, [r3, #5]
 80024ba:	2106      	movs	r1, #6
 80024bc:	6838      	ldr	r0, [r7, #0]
 80024be:	f7ff ff95 	bl	80023ec <ucg_font_get_byte>
 80024c2:	4603      	mov	r3, r0
 80024c4:	461a      	mov	r2, r3
 80024c6:	687b      	ldr	r3, [r7, #4]
 80024c8:	719a      	strb	r2, [r3, #6]
 80024ca:	2107      	movs	r1, #7
 80024cc:	6838      	ldr	r0, [r7, #0]
 80024ce:	f7ff ff8d 	bl	80023ec <ucg_font_get_byte>
 80024d2:	4603      	mov	r3, r0
 80024d4:	461a      	mov	r2, r3
 80024d6:	687b      	ldr	r3, [r7, #4]
 80024d8:	71da      	strb	r2, [r3, #7]
 80024da:	2108      	movs	r1, #8
 80024dc:	6838      	ldr	r0, [r7, #0]
 80024de:	f7ff ff85 	bl	80023ec <ucg_font_get_byte>
 80024e2:	4603      	mov	r3, r0
 80024e4:	461a      	mov	r2, r3
 80024e6:	687b      	ldr	r3, [r7, #4]
 80024e8:	721a      	strb	r2, [r3, #8]
 80024ea:	2109      	movs	r1, #9
 80024ec:	6838      	ldr	r0, [r7, #0]
 80024ee:	f7ff ff7d 	bl	80023ec <ucg_font_get_byte>
 80024f2:	4603      	mov	r3, r0
 80024f4:	b25a      	sxtb	r2, r3
 80024f6:	687b      	ldr	r3, [r7, #4]
 80024f8:	725a      	strb	r2, [r3, #9]
 80024fa:	210a      	movs	r1, #10
 80024fc:	6838      	ldr	r0, [r7, #0]
 80024fe:	f7ff ff75 	bl	80023ec <ucg_font_get_byte>
 8002502:	4603      	mov	r3, r0
 8002504:	b25a      	sxtb	r2, r3
 8002506:	687b      	ldr	r3, [r7, #4]
 8002508:	729a      	strb	r2, [r3, #10]
 800250a:	210b      	movs	r1, #11
 800250c:	6838      	ldr	r0, [r7, #0]
 800250e:	f7ff ff6d 	bl	80023ec <ucg_font_get_byte>
 8002512:	4603      	mov	r3, r0
 8002514:	b25a      	sxtb	r2, r3
 8002516:	687b      	ldr	r3, [r7, #4]
 8002518:	72da      	strb	r2, [r3, #11]
 800251a:	210c      	movs	r1, #12
 800251c:	6838      	ldr	r0, [r7, #0]
 800251e:	f7ff ff65 	bl	80023ec <ucg_font_get_byte>
 8002522:	4603      	mov	r3, r0
 8002524:	b25a      	sxtb	r2, r3
 8002526:	687b      	ldr	r3, [r7, #4]
 8002528:	731a      	strb	r2, [r3, #12]
 800252a:	210d      	movs	r1, #13
 800252c:	6838      	ldr	r0, [r7, #0]
 800252e:	f7ff ff5d 	bl	80023ec <ucg_font_get_byte>
 8002532:	4603      	mov	r3, r0
 8002534:	b25a      	sxtb	r2, r3
 8002536:	687b      	ldr	r3, [r7, #4]
 8002538:	735a      	strb	r2, [r3, #13]
 800253a:	210e      	movs	r1, #14
 800253c:	6838      	ldr	r0, [r7, #0]
 800253e:	f7ff ff55 	bl	80023ec <ucg_font_get_byte>
 8002542:	4603      	mov	r3, r0
 8002544:	b25a      	sxtb	r2, r3
 8002546:	687b      	ldr	r3, [r7, #4]
 8002548:	739a      	strb	r2, [r3, #14]
 800254a:	210f      	movs	r1, #15
 800254c:	6838      	ldr	r0, [r7, #0]
 800254e:	f7ff ff4d 	bl	80023ec <ucg_font_get_byte>
 8002552:	4603      	mov	r3, r0
 8002554:	b25a      	sxtb	r2, r3
 8002556:	687b      	ldr	r3, [r7, #4]
 8002558:	73da      	strb	r2, [r3, #15]
 800255a:	2110      	movs	r1, #16
 800255c:	6838      	ldr	r0, [r7, #0]
 800255e:	f7ff ff45 	bl	80023ec <ucg_font_get_byte>
 8002562:	4603      	mov	r3, r0
 8002564:	b25a      	sxtb	r2, r3
 8002566:	687b      	ldr	r3, [r7, #4]
 8002568:	741a      	strb	r2, [r3, #16]
 800256a:	2111      	movs	r1, #17
 800256c:	6838      	ldr	r0, [r7, #0]
 800256e:	f7ff ff4f 	bl	8002410 <ucg_font_get_word>
 8002572:	4603      	mov	r3, r0
 8002574:	461a      	mov	r2, r3
 8002576:	687b      	ldr	r3, [r7, #4]
 8002578:	825a      	strh	r2, [r3, #18]
 800257a:	2113      	movs	r1, #19
 800257c:	6838      	ldr	r0, [r7, #0]
 800257e:	f7ff ff47 	bl	8002410 <ucg_font_get_word>
 8002582:	4603      	mov	r3, r0
 8002584:	461a      	mov	r2, r3
 8002586:	687b      	ldr	r3, [r7, #4]
 8002588:	829a      	strh	r2, [r3, #20]
 800258a:	bf00      	nop
 800258c:	3708      	adds	r7, #8
 800258e:	46bd      	mov	sp, r7
 8002590:	bd80      	pop	{r7, pc}

08002592 <ucg_font_decode_get_unsigned_bits>:
 8002592:	b480      	push	{r7}
 8002594:	b085      	sub	sp, #20
 8002596:	af00      	add	r7, sp, #0
 8002598:	6078      	str	r0, [r7, #4]
 800259a:	460b      	mov	r3, r1
 800259c:	70fb      	strb	r3, [r7, #3]
 800259e:	687b      	ldr	r3, [r7, #4]
 80025a0:	7b1b      	ldrb	r3, [r3, #12]
 80025a2:	737b      	strb	r3, [r7, #13]
 80025a4:	687b      	ldr	r3, [r7, #4]
 80025a6:	681b      	ldr	r3, [r3, #0]
 80025a8:	781b      	ldrb	r3, [r3, #0]
 80025aa:	73fb      	strb	r3, [r7, #15]
 80025ac:	7bfa      	ldrb	r2, [r7, #15]
 80025ae:	7b7b      	ldrb	r3, [r7, #13]
 80025b0:	fa42 f303 	asr.w	r3, r2, r3
 80025b4:	73fb      	strb	r3, [r7, #15]
 80025b6:	7b7b      	ldrb	r3, [r7, #13]
 80025b8:	73bb      	strb	r3, [r7, #14]
 80025ba:	7bba      	ldrb	r2, [r7, #14]
 80025bc:	78fb      	ldrb	r3, [r7, #3]
 80025be:	4413      	add	r3, r2
 80025c0:	73bb      	strb	r3, [r7, #14]
 80025c2:	7bbb      	ldrb	r3, [r7, #14]
 80025c4:	2b07      	cmp	r3, #7
 80025c6:	d91a      	bls.n	80025fe <ucg_font_decode_get_unsigned_bits+0x6c>
 80025c8:	2308      	movs	r3, #8
 80025ca:	733b      	strb	r3, [r7, #12]
 80025cc:	7b3a      	ldrb	r2, [r7, #12]
 80025ce:	7b7b      	ldrb	r3, [r7, #13]
 80025d0:	1ad3      	subs	r3, r2, r3
 80025d2:	733b      	strb	r3, [r7, #12]
 80025d4:	687b      	ldr	r3, [r7, #4]
 80025d6:	681b      	ldr	r3, [r3, #0]
 80025d8:	1c5a      	adds	r2, r3, #1
 80025da:	687b      	ldr	r3, [r7, #4]
 80025dc:	601a      	str	r2, [r3, #0]
 80025de:	687b      	ldr	r3, [r7, #4]
 80025e0:	681b      	ldr	r3, [r3, #0]
 80025e2:	781b      	ldrb	r3, [r3, #0]
 80025e4:	461a      	mov	r2, r3
 80025e6:	7b3b      	ldrb	r3, [r7, #12]
 80025e8:	fa02 f303 	lsl.w	r3, r2, r3
 80025ec:	b25a      	sxtb	r2, r3
 80025ee:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80025f2:	4313      	orrs	r3, r2
 80025f4:	b25b      	sxtb	r3, r3
 80025f6:	73fb      	strb	r3, [r7, #15]
 80025f8:	7bbb      	ldrb	r3, [r7, #14]
 80025fa:	3b08      	subs	r3, #8
 80025fc:	73bb      	strb	r3, [r7, #14]
 80025fe:	78fb      	ldrb	r3, [r7, #3]
 8002600:	f04f 32ff 	mov.w	r2, #4294967295
 8002604:	fa02 f303 	lsl.w	r3, r2, r3
 8002608:	b2db      	uxtb	r3, r3
 800260a:	43db      	mvns	r3, r3
 800260c:	b2da      	uxtb	r2, r3
 800260e:	7bfb      	ldrb	r3, [r7, #15]
 8002610:	4013      	ands	r3, r2
 8002612:	73fb      	strb	r3, [r7, #15]
 8002614:	687b      	ldr	r3, [r7, #4]
 8002616:	7bba      	ldrb	r2, [r7, #14]
 8002618:	731a      	strb	r2, [r3, #12]
 800261a:	7bfb      	ldrb	r3, [r7, #15]
 800261c:	4618      	mov	r0, r3
 800261e:	3714      	adds	r7, #20
 8002620:	46bd      	mov	sp, r7
 8002622:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002626:	4770      	bx	lr

08002628 <ucg_font_decode_get_signed_bits>:
 8002628:	b580      	push	{r7, lr}
 800262a:	b084      	sub	sp, #16
 800262c:	af00      	add	r7, sp, #0
 800262e:	6078      	str	r0, [r7, #4]
 8002630:	460b      	mov	r3, r1
 8002632:	70fb      	strb	r3, [r7, #3]
 8002634:	78fb      	ldrb	r3, [r7, #3]
 8002636:	4619      	mov	r1, r3
 8002638:	6878      	ldr	r0, [r7, #4]
 800263a:	f7ff ffaa 	bl	8002592 <ucg_font_decode_get_unsigned_bits>
 800263e:	4603      	mov	r3, r0
 8002640:	73fb      	strb	r3, [r7, #15]
 8002642:	2301      	movs	r3, #1
 8002644:	73bb      	strb	r3, [r7, #14]
 8002646:	78fb      	ldrb	r3, [r7, #3]
 8002648:	3b01      	subs	r3, #1
 800264a:	70fb      	strb	r3, [r7, #3]
 800264c:	f997 200e 	ldrsb.w	r2, [r7, #14]
 8002650:	78fb      	ldrb	r3, [r7, #3]
 8002652:	fa02 f303 	lsl.w	r3, r2, r3
 8002656:	73bb      	strb	r3, [r7, #14]
 8002658:	7bfa      	ldrb	r2, [r7, #15]
 800265a:	7bbb      	ldrb	r3, [r7, #14]
 800265c:	1ad3      	subs	r3, r2, r3
 800265e:	b2db      	uxtb	r3, r3
 8002660:	73fb      	strb	r3, [r7, #15]
 8002662:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002666:	4618      	mov	r0, r3
 8002668:	3710      	adds	r7, #16
 800266a:	46bd      	mov	sp, r7
 800266c:	bd80      	pop	{r7, pc}

0800266e <ucg_add_vector_y>:
 800266e:	b490      	push	{r4, r7}
 8002670:	b082      	sub	sp, #8
 8002672:	af00      	add	r7, sp, #0
 8002674:	4604      	mov	r4, r0
 8002676:	4608      	mov	r0, r1
 8002678:	4611      	mov	r1, r2
 800267a:	461a      	mov	r2, r3
 800267c:	4623      	mov	r3, r4
 800267e:	80fb      	strh	r3, [r7, #6]
 8002680:	4603      	mov	r3, r0
 8002682:	717b      	strb	r3, [r7, #5]
 8002684:	460b      	mov	r3, r1
 8002686:	713b      	strb	r3, [r7, #4]
 8002688:	4613      	mov	r3, r2
 800268a:	70fb      	strb	r3, [r7, #3]
 800268c:	78fb      	ldrb	r3, [r7, #3]
 800268e:	2b01      	cmp	r3, #1
 8002690:	d00b      	beq.n	80026aa <ucg_add_vector_y+0x3c>
 8002692:	2b02      	cmp	r3, #2
 8002694:	d011      	beq.n	80026ba <ucg_add_vector_y+0x4c>
 8002696:	2b00      	cmp	r3, #0
 8002698:	d117      	bne.n	80026ca <ucg_add_vector_y+0x5c>
 800269a:	f997 3004 	ldrsb.w	r3, [r7, #4]
 800269e:	b29a      	uxth	r2, r3
 80026a0:	88fb      	ldrh	r3, [r7, #6]
 80026a2:	4413      	add	r3, r2
 80026a4:	b29b      	uxth	r3, r3
 80026a6:	80fb      	strh	r3, [r7, #6]
 80026a8:	e017      	b.n	80026da <ucg_add_vector_y+0x6c>
 80026aa:	f997 3005 	ldrsb.w	r3, [r7, #5]
 80026ae:	b29a      	uxth	r2, r3
 80026b0:	88fb      	ldrh	r3, [r7, #6]
 80026b2:	4413      	add	r3, r2
 80026b4:	b29b      	uxth	r3, r3
 80026b6:	80fb      	strh	r3, [r7, #6]
 80026b8:	e00f      	b.n	80026da <ucg_add_vector_y+0x6c>
 80026ba:	88fa      	ldrh	r2, [r7, #6]
 80026bc:	f997 3004 	ldrsb.w	r3, [r7, #4]
 80026c0:	b29b      	uxth	r3, r3
 80026c2:	1ad3      	subs	r3, r2, r3
 80026c4:	b29b      	uxth	r3, r3
 80026c6:	80fb      	strh	r3, [r7, #6]
 80026c8:	e007      	b.n	80026da <ucg_add_vector_y+0x6c>
 80026ca:	88fa      	ldrh	r2, [r7, #6]
 80026cc:	f997 3005 	ldrsb.w	r3, [r7, #5]
 80026d0:	b29b      	uxth	r3, r3
 80026d2:	1ad3      	subs	r3, r2, r3
 80026d4:	b29b      	uxth	r3, r3
 80026d6:	80fb      	strh	r3, [r7, #6]
 80026d8:	bf00      	nop
 80026da:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80026de:	4618      	mov	r0, r3
 80026e0:	3708      	adds	r7, #8
 80026e2:	46bd      	mov	sp, r7
 80026e4:	bc90      	pop	{r4, r7}
 80026e6:	4770      	bx	lr

080026e8 <ucg_add_vector_x>:
 80026e8:	b490      	push	{r4, r7}
 80026ea:	b082      	sub	sp, #8
 80026ec:	af00      	add	r7, sp, #0
 80026ee:	4604      	mov	r4, r0
 80026f0:	4608      	mov	r0, r1
 80026f2:	4611      	mov	r1, r2
 80026f4:	461a      	mov	r2, r3
 80026f6:	4623      	mov	r3, r4
 80026f8:	80fb      	strh	r3, [r7, #6]
 80026fa:	4603      	mov	r3, r0
 80026fc:	717b      	strb	r3, [r7, #5]
 80026fe:	460b      	mov	r3, r1
 8002700:	713b      	strb	r3, [r7, #4]
 8002702:	4613      	mov	r3, r2
 8002704:	70fb      	strb	r3, [r7, #3]
 8002706:	78fb      	ldrb	r3, [r7, #3]
 8002708:	2b01      	cmp	r3, #1
 800270a:	d00b      	beq.n	8002724 <ucg_add_vector_x+0x3c>
 800270c:	2b02      	cmp	r3, #2
 800270e:	d011      	beq.n	8002734 <ucg_add_vector_x+0x4c>
 8002710:	2b00      	cmp	r3, #0
 8002712:	d117      	bne.n	8002744 <ucg_add_vector_x+0x5c>
 8002714:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8002718:	b29a      	uxth	r2, r3
 800271a:	88fb      	ldrh	r3, [r7, #6]
 800271c:	4413      	add	r3, r2
 800271e:	b29b      	uxth	r3, r3
 8002720:	80fb      	strh	r3, [r7, #6]
 8002722:	e017      	b.n	8002754 <ucg_add_vector_x+0x6c>
 8002724:	88fa      	ldrh	r2, [r7, #6]
 8002726:	f997 3004 	ldrsb.w	r3, [r7, #4]
 800272a:	b29b      	uxth	r3, r3
 800272c:	1ad3      	subs	r3, r2, r3
 800272e:	b29b      	uxth	r3, r3
 8002730:	80fb      	strh	r3, [r7, #6]
 8002732:	e00f      	b.n	8002754 <ucg_add_vector_x+0x6c>
 8002734:	88fa      	ldrh	r2, [r7, #6]
 8002736:	f997 3005 	ldrsb.w	r3, [r7, #5]
 800273a:	b29b      	uxth	r3, r3
 800273c:	1ad3      	subs	r3, r2, r3
 800273e:	b29b      	uxth	r3, r3
 8002740:	80fb      	strh	r3, [r7, #6]
 8002742:	e007      	b.n	8002754 <ucg_add_vector_x+0x6c>
 8002744:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8002748:	b29a      	uxth	r2, r3
 800274a:	88fb      	ldrh	r3, [r7, #6]
 800274c:	4413      	add	r3, r2
 800274e:	b29b      	uxth	r3, r3
 8002750:	80fb      	strh	r3, [r7, #6]
 8002752:	bf00      	nop
 8002754:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8002758:	4618      	mov	r0, r3
 800275a:	3708      	adds	r7, #8
 800275c:	46bd      	mov	sp, r7
 800275e:	bc90      	pop	{r4, r7}
 8002760:	4770      	bx	lr

08002762 <ucg_font_decode_len>:
 8002762:	b590      	push	{r4, r7, lr}
 8002764:	b089      	sub	sp, #36	; 0x24
 8002766:	af02      	add	r7, sp, #8
 8002768:	6078      	str	r0, [r7, #4]
 800276a:	460b      	mov	r3, r1
 800276c:	70fb      	strb	r3, [r7, #3]
 800276e:	4613      	mov	r3, r2
 8002770:	70bb      	strb	r3, [r7, #2]
 8002772:	687b      	ldr	r3, [r7, #4]
 8002774:	3380      	adds	r3, #128	; 0x80
 8002776:	613b      	str	r3, [r7, #16]
 8002778:	78fb      	ldrb	r3, [r7, #3]
 800277a:	75fb      	strb	r3, [r7, #23]
 800277c:	693b      	ldr	r3, [r7, #16]
 800277e:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8002782:	757b      	strb	r3, [r7, #21]
 8002784:	693b      	ldr	r3, [r7, #16]
 8002786:	f993 3009 	ldrsb.w	r3, [r3, #9]
 800278a:	753b      	strb	r3, [r7, #20]
 800278c:	693b      	ldr	r3, [r7, #16]
 800278e:	f993 300a 	ldrsb.w	r3, [r3, #10]
 8002792:	73fb      	strb	r3, [r7, #15]
 8002794:	7bfa      	ldrb	r2, [r7, #15]
 8002796:	7d7b      	ldrb	r3, [r7, #21]
 8002798:	1ad3      	subs	r3, r2, r3
 800279a:	73fb      	strb	r3, [r7, #15]
 800279c:	7bfb      	ldrb	r3, [r7, #15]
 800279e:	75bb      	strb	r3, [r7, #22]
 80027a0:	7dfa      	ldrb	r2, [r7, #23]
 80027a2:	7bfb      	ldrb	r3, [r7, #15]
 80027a4:	429a      	cmp	r2, r3
 80027a6:	d201      	bcs.n	80027ac <ucg_font_decode_len+0x4a>
 80027a8:	7dfb      	ldrb	r3, [r7, #23]
 80027aa:	75bb      	strb	r3, [r7, #22]
 80027ac:	693b      	ldr	r3, [r7, #16]
 80027ae:	889b      	ldrh	r3, [r3, #4]
 80027b0:	81bb      	strh	r3, [r7, #12]
 80027b2:	693b      	ldr	r3, [r7, #16]
 80027b4:	88db      	ldrh	r3, [r3, #6]
 80027b6:	817b      	strh	r3, [r7, #10]
 80027b8:	f997 1015 	ldrsb.w	r1, [r7, #21]
 80027bc:	f997 2014 	ldrsb.w	r2, [r7, #20]
 80027c0:	693b      	ldr	r3, [r7, #16]
 80027c2:	7b9b      	ldrb	r3, [r3, #14]
 80027c4:	f9b7 000c 	ldrsh.w	r0, [r7, #12]
 80027c8:	f7ff ff8e 	bl	80026e8 <ucg_add_vector_x>
 80027cc:	4603      	mov	r3, r0
 80027ce:	81bb      	strh	r3, [r7, #12]
 80027d0:	f997 1015 	ldrsb.w	r1, [r7, #21]
 80027d4:	f997 2014 	ldrsb.w	r2, [r7, #20]
 80027d8:	693b      	ldr	r3, [r7, #16]
 80027da:	7b9b      	ldrb	r3, [r3, #14]
 80027dc:	f9b7 000a 	ldrsh.w	r0, [r7, #10]
 80027e0:	f7ff ff45 	bl	800266e <ucg_add_vector_y>
 80027e4:	4603      	mov	r3, r0
 80027e6:	817b      	strh	r3, [r7, #10]
 80027e8:	78bb      	ldrb	r3, [r7, #2]
 80027ea:	2b00      	cmp	r3, #0
 80027ec:	d011      	beq.n	8002812 <ucg_font_decode_len+0xb0>
 80027ee:	7dbb      	ldrb	r3, [r7, #22]
 80027f0:	b21c      	sxth	r4, r3
 80027f2:	693b      	ldr	r3, [r7, #16]
 80027f4:	7b9b      	ldrb	r3, [r3, #14]
 80027f6:	b21b      	sxth	r3, r3
 80027f8:	f9b7 000a 	ldrsh.w	r0, [r7, #10]
 80027fc:	f9b7 100c 	ldrsh.w	r1, [r7, #12]
 8002800:	2200      	movs	r2, #0
 8002802:	9201      	str	r2, [sp, #4]
 8002804:	9300      	str	r3, [sp, #0]
 8002806:	4623      	mov	r3, r4
 8002808:	4602      	mov	r2, r0
 800280a:	6878      	ldr	r0, [r7, #4]
 800280c:	f000 fbc0 	bl	8002f90 <ucg_Draw90Line>
 8002810:	e014      	b.n	800283c <ucg_font_decode_len+0xda>
 8002812:	693b      	ldr	r3, [r7, #16]
 8002814:	7b5b      	ldrb	r3, [r3, #13]
 8002816:	2b00      	cmp	r3, #0
 8002818:	d110      	bne.n	800283c <ucg_font_decode_len+0xda>
 800281a:	7dbb      	ldrb	r3, [r7, #22]
 800281c:	b21c      	sxth	r4, r3
 800281e:	693b      	ldr	r3, [r7, #16]
 8002820:	7b9b      	ldrb	r3, [r3, #14]
 8002822:	b21b      	sxth	r3, r3
 8002824:	f9b7 000a 	ldrsh.w	r0, [r7, #10]
 8002828:	f9b7 100c 	ldrsh.w	r1, [r7, #12]
 800282c:	2201      	movs	r2, #1
 800282e:	9201      	str	r2, [sp, #4]
 8002830:	9300      	str	r3, [sp, #0]
 8002832:	4623      	mov	r3, r4
 8002834:	4602      	mov	r2, r0
 8002836:	6878      	ldr	r0, [r7, #4]
 8002838:	f000 fbaa 	bl	8002f90 <ucg_Draw90Line>
 800283c:	7dfa      	ldrb	r2, [r7, #23]
 800283e:	7bfb      	ldrb	r3, [r7, #15]
 8002840:	429a      	cmp	r2, r3
 8002842:	d309      	bcc.n	8002858 <ucg_font_decode_len+0xf6>
 8002844:	7dfa      	ldrb	r2, [r7, #23]
 8002846:	7bfb      	ldrb	r3, [r7, #15]
 8002848:	1ad3      	subs	r3, r2, r3
 800284a:	75fb      	strb	r3, [r7, #23]
 800284c:	2300      	movs	r3, #0
 800284e:	757b      	strb	r3, [r7, #21]
 8002850:	7d3b      	ldrb	r3, [r7, #20]
 8002852:	3301      	adds	r3, #1
 8002854:	753b      	strb	r3, [r7, #20]
 8002856:	e799      	b.n	800278c <ucg_font_decode_len+0x2a>
 8002858:	bf00      	nop
 800285a:	7d7a      	ldrb	r2, [r7, #21]
 800285c:	7dfb      	ldrb	r3, [r7, #23]
 800285e:	4413      	add	r3, r2
 8002860:	757b      	strb	r3, [r7, #21]
 8002862:	f997 2015 	ldrsb.w	r2, [r7, #21]
 8002866:	693b      	ldr	r3, [r7, #16]
 8002868:	721a      	strb	r2, [r3, #8]
 800286a:	f997 2014 	ldrsb.w	r2, [r7, #20]
 800286e:	693b      	ldr	r3, [r7, #16]
 8002870:	725a      	strb	r2, [r3, #9]
 8002872:	bf00      	nop
 8002874:	371c      	adds	r7, #28
 8002876:	46bd      	mov	sp, r7
 8002878:	bd90      	pop	{r4, r7, pc}

0800287a <ucg_font_setup_decode>:
 800287a:	b580      	push	{r7, lr}
 800287c:	b084      	sub	sp, #16
 800287e:	af00      	add	r7, sp, #0
 8002880:	6078      	str	r0, [r7, #4]
 8002882:	6039      	str	r1, [r7, #0]
 8002884:	687b      	ldr	r3, [r7, #4]
 8002886:	3380      	adds	r3, #128	; 0x80
 8002888:	60fb      	str	r3, [r7, #12]
 800288a:	68fb      	ldr	r3, [r7, #12]
 800288c:	683a      	ldr	r2, [r7, #0]
 800288e:	601a      	str	r2, [r3, #0]
 8002890:	68fb      	ldr	r3, [r7, #12]
 8002892:	2200      	movs	r2, #0
 8002894:	731a      	strb	r2, [r3, #12]
 8002896:	68fb      	ldr	r3, [r7, #12]
 8002898:	681b      	ldr	r3, [r3, #0]
 800289a:	1c5a      	adds	r2, r3, #1
 800289c:	68fb      	ldr	r3, [r7, #12]
 800289e:	601a      	str	r2, [r3, #0]
 80028a0:	68fb      	ldr	r3, [r7, #12]
 80028a2:	681b      	ldr	r3, [r3, #0]
 80028a4:	1c5a      	adds	r2, r3, #1
 80028a6:	68fb      	ldr	r3, [r7, #12]
 80028a8:	601a      	str	r2, [r3, #0]
 80028aa:	687b      	ldr	r3, [r7, #4]
 80028ac:	f893 3094 	ldrb.w	r3, [r3, #148]	; 0x94
 80028b0:	4619      	mov	r1, r3
 80028b2:	68f8      	ldr	r0, [r7, #12]
 80028b4:	f7ff fe6d 	bl	8002592 <ucg_font_decode_get_unsigned_bits>
 80028b8:	4603      	mov	r3, r0
 80028ba:	b25a      	sxtb	r2, r3
 80028bc:	68fb      	ldr	r3, [r7, #12]
 80028be:	729a      	strb	r2, [r3, #10]
 80028c0:	687b      	ldr	r3, [r7, #4]
 80028c2:	f893 3095 	ldrb.w	r3, [r3, #149]	; 0x95
 80028c6:	4619      	mov	r1, r3
 80028c8:	68f8      	ldr	r0, [r7, #12]
 80028ca:	f7ff fe62 	bl	8002592 <ucg_font_decode_get_unsigned_bits>
 80028ce:	4603      	mov	r3, r0
 80028d0:	b25a      	sxtb	r2, r3
 80028d2:	68fb      	ldr	r3, [r7, #12]
 80028d4:	72da      	strb	r2, [r3, #11]
 80028d6:	bf00      	nop
 80028d8:	3710      	adds	r7, #16
 80028da:	46bd      	mov	sp, r7
 80028dc:	bd80      	pop	{r7, pc}

080028de <ucg_font_decode_glyph>:
 80028de:	b580      	push	{r7, lr}
 80028e0:	b084      	sub	sp, #16
 80028e2:	af00      	add	r7, sp, #0
 80028e4:	6078      	str	r0, [r7, #4]
 80028e6:	6039      	str	r1, [r7, #0]
 80028e8:	6839      	ldr	r1, [r7, #0]
 80028ea:	6878      	ldr	r0, [r7, #4]
 80028ec:	f7ff ffc5 	bl	800287a <ucg_font_setup_decode>
 80028f0:	687b      	ldr	r3, [r7, #4]
 80028f2:	f893 308b 	ldrb.w	r3, [r3, #139]	; 0x8b
 80028f6:	73fb      	strb	r3, [r7, #15]
 80028f8:	687b      	ldr	r3, [r7, #4]
 80028fa:	f103 0280 	add.w	r2, r3, #128	; 0x80
 80028fe:	687b      	ldr	r3, [r7, #4]
 8002900:	f893 3096 	ldrb.w	r3, [r3, #150]	; 0x96
 8002904:	4619      	mov	r1, r3
 8002906:	4610      	mov	r0, r2
 8002908:	f7ff fe8e 	bl	8002628 <ucg_font_decode_get_signed_bits>
 800290c:	4603      	mov	r3, r0
 800290e:	73bb      	strb	r3, [r7, #14]
 8002910:	687b      	ldr	r3, [r7, #4]
 8002912:	f103 0280 	add.w	r2, r3, #128	; 0x80
 8002916:	687b      	ldr	r3, [r7, #4]
 8002918:	f893 3097 	ldrb.w	r3, [r3, #151]	; 0x97
 800291c:	4619      	mov	r1, r3
 800291e:	4610      	mov	r0, r2
 8002920:	f7ff fe82 	bl	8002628 <ucg_font_decode_get_signed_bits>
 8002924:	4603      	mov	r3, r0
 8002926:	737b      	strb	r3, [r7, #13]
 8002928:	687b      	ldr	r3, [r7, #4]
 800292a:	f103 0280 	add.w	r2, r3, #128	; 0x80
 800292e:	687b      	ldr	r3, [r7, #4]
 8002930:	f893 3098 	ldrb.w	r3, [r3, #152]	; 0x98
 8002934:	4619      	mov	r1, r3
 8002936:	4610      	mov	r0, r2
 8002938:	f7ff fe76 	bl	8002628 <ucg_font_decode_get_signed_bits>
 800293c:	4603      	mov	r3, r0
 800293e:	733b      	strb	r3, [r7, #12]
 8002940:	687b      	ldr	r3, [r7, #4]
 8002942:	f993 308a 	ldrsb.w	r3, [r3, #138]	; 0x8a
 8002946:	2b00      	cmp	r3, #0
 8002948:	dd69      	ble.n	8002a1e <ucg_font_decode_glyph+0x140>
 800294a:	687b      	ldr	r3, [r7, #4]
 800294c:	f9b3 0084 	ldrsh.w	r0, [r3, #132]	; 0x84
 8002950:	7bfa      	ldrb	r2, [r7, #15]
 8002952:	7b7b      	ldrb	r3, [r7, #13]
 8002954:	4413      	add	r3, r2
 8002956:	b2db      	uxtb	r3, r3
 8002958:	425b      	negs	r3, r3
 800295a:	b2db      	uxtb	r3, r3
 800295c:	b25a      	sxtb	r2, r3
 800295e:	687b      	ldr	r3, [r7, #4]
 8002960:	f893 308e 	ldrb.w	r3, [r3, #142]	; 0x8e
 8002964:	f997 100e 	ldrsb.w	r1, [r7, #14]
 8002968:	f7ff febe 	bl	80026e8 <ucg_add_vector_x>
 800296c:	4603      	mov	r3, r0
 800296e:	461a      	mov	r2, r3
 8002970:	687b      	ldr	r3, [r7, #4]
 8002972:	f8a3 2084 	strh.w	r2, [r3, #132]	; 0x84
 8002976:	687b      	ldr	r3, [r7, #4]
 8002978:	f9b3 0086 	ldrsh.w	r0, [r3, #134]	; 0x86
 800297c:	7bfa      	ldrb	r2, [r7, #15]
 800297e:	7b7b      	ldrb	r3, [r7, #13]
 8002980:	4413      	add	r3, r2
 8002982:	b2db      	uxtb	r3, r3
 8002984:	425b      	negs	r3, r3
 8002986:	b2db      	uxtb	r3, r3
 8002988:	b25a      	sxtb	r2, r3
 800298a:	687b      	ldr	r3, [r7, #4]
 800298c:	f893 308e 	ldrb.w	r3, [r3, #142]	; 0x8e
 8002990:	f997 100e 	ldrsb.w	r1, [r7, #14]
 8002994:	f7ff fe6b 	bl	800266e <ucg_add_vector_y>
 8002998:	4603      	mov	r3, r0
 800299a:	461a      	mov	r2, r3
 800299c:	687b      	ldr	r3, [r7, #4]
 800299e:	f8a3 2086 	strh.w	r2, [r3, #134]	; 0x86
 80029a2:	687b      	ldr	r3, [r7, #4]
 80029a4:	2200      	movs	r2, #0
 80029a6:	f883 2088 	strb.w	r2, [r3, #136]	; 0x88
 80029aa:	687b      	ldr	r3, [r7, #4]
 80029ac:	2200      	movs	r2, #0
 80029ae:	f883 2089 	strb.w	r2, [r3, #137]	; 0x89
 80029b2:	687b      	ldr	r3, [r7, #4]
 80029b4:	f103 0280 	add.w	r2, r3, #128	; 0x80
 80029b8:	687b      	ldr	r3, [r7, #4]
 80029ba:	f893 3092 	ldrb.w	r3, [r3, #146]	; 0x92
 80029be:	4619      	mov	r1, r3
 80029c0:	4610      	mov	r0, r2
 80029c2:	f7ff fde6 	bl	8002592 <ucg_font_decode_get_unsigned_bits>
 80029c6:	4603      	mov	r3, r0
 80029c8:	72fb      	strb	r3, [r7, #11]
 80029ca:	687b      	ldr	r3, [r7, #4]
 80029cc:	f103 0280 	add.w	r2, r3, #128	; 0x80
 80029d0:	687b      	ldr	r3, [r7, #4]
 80029d2:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 80029d6:	4619      	mov	r1, r3
 80029d8:	4610      	mov	r0, r2
 80029da:	f7ff fdda 	bl	8002592 <ucg_font_decode_get_unsigned_bits>
 80029de:	4603      	mov	r3, r0
 80029e0:	72bb      	strb	r3, [r7, #10]
 80029e2:	7afb      	ldrb	r3, [r7, #11]
 80029e4:	2200      	movs	r2, #0
 80029e6:	4619      	mov	r1, r3
 80029e8:	6878      	ldr	r0, [r7, #4]
 80029ea:	f7ff feba 	bl	8002762 <ucg_font_decode_len>
 80029ee:	7abb      	ldrb	r3, [r7, #10]
 80029f0:	2201      	movs	r2, #1
 80029f2:	4619      	mov	r1, r3
 80029f4:	6878      	ldr	r0, [r7, #4]
 80029f6:	f7ff feb4 	bl	8002762 <ucg_font_decode_len>
 80029fa:	687b      	ldr	r3, [r7, #4]
 80029fc:	3380      	adds	r3, #128	; 0x80
 80029fe:	2101      	movs	r1, #1
 8002a00:	4618      	mov	r0, r3
 8002a02:	f7ff fdc6 	bl	8002592 <ucg_font_decode_get_unsigned_bits>
 8002a06:	4603      	mov	r3, r0
 8002a08:	2b00      	cmp	r3, #0
 8002a0a:	d1ea      	bne.n	80029e2 <ucg_font_decode_glyph+0x104>
 8002a0c:	687b      	ldr	r3, [r7, #4]
 8002a0e:	f993 3089 	ldrsb.w	r3, [r3, #137]	; 0x89
 8002a12:	f997 200f 	ldrsb.w	r2, [r7, #15]
 8002a16:	429a      	cmp	r2, r3
 8002a18:	dd00      	ble.n	8002a1c <ucg_font_decode_glyph+0x13e>
 8002a1a:	e7ca      	b.n	80029b2 <ucg_font_decode_glyph+0xd4>
 8002a1c:	bf00      	nop
 8002a1e:	f997 300c 	ldrsb.w	r3, [r7, #12]
 8002a22:	4618      	mov	r0, r3
 8002a24:	3710      	adds	r7, #16
 8002a26:	46bd      	mov	sp, r7
 8002a28:	bd80      	pop	{r7, pc}

08002a2a <ucg_font_get_glyph_data>:
 8002a2a:	b480      	push	{r7}
 8002a2c:	b085      	sub	sp, #20
 8002a2e:	af00      	add	r7, sp, #0
 8002a30:	6078      	str	r0, [r7, #4]
 8002a32:	460b      	mov	r3, r1
 8002a34:	70fb      	strb	r3, [r7, #3]
 8002a36:	687b      	ldr	r3, [r7, #4]
 8002a38:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8002a3a:	60fb      	str	r3, [r7, #12]
 8002a3c:	68fb      	ldr	r3, [r7, #12]
 8002a3e:	3315      	adds	r3, #21
 8002a40:	60fb      	str	r3, [r7, #12]
 8002a42:	78fb      	ldrb	r3, [r7, #3]
 8002a44:	2b60      	cmp	r3, #96	; 0x60
 8002a46:	d907      	bls.n	8002a58 <ucg_font_get_glyph_data+0x2e>
 8002a48:	687b      	ldr	r3, [r7, #4]
 8002a4a:	f8b3 30a4 	ldrh.w	r3, [r3, #164]	; 0xa4
 8002a4e:	461a      	mov	r2, r3
 8002a50:	68fb      	ldr	r3, [r7, #12]
 8002a52:	4413      	add	r3, r2
 8002a54:	60fb      	str	r3, [r7, #12]
 8002a56:	e009      	b.n	8002a6c <ucg_font_get_glyph_data+0x42>
 8002a58:	78fb      	ldrb	r3, [r7, #3]
 8002a5a:	2b40      	cmp	r3, #64	; 0x40
 8002a5c:	d906      	bls.n	8002a6c <ucg_font_get_glyph_data+0x42>
 8002a5e:	687b      	ldr	r3, [r7, #4]
 8002a60:	f8b3 30a2 	ldrh.w	r3, [r3, #162]	; 0xa2
 8002a64:	461a      	mov	r2, r3
 8002a66:	68fb      	ldr	r3, [r7, #12]
 8002a68:	4413      	add	r3, r2
 8002a6a:	60fb      	str	r3, [r7, #12]
 8002a6c:	68fb      	ldr	r3, [r7, #12]
 8002a6e:	3301      	adds	r3, #1
 8002a70:	781b      	ldrb	r3, [r3, #0]
 8002a72:	2b00      	cmp	r3, #0
 8002a74:	d00e      	beq.n	8002a94 <ucg_font_get_glyph_data+0x6a>
 8002a76:	68fb      	ldr	r3, [r7, #12]
 8002a78:	781b      	ldrb	r3, [r3, #0]
 8002a7a:	78fa      	ldrb	r2, [r7, #3]
 8002a7c:	429a      	cmp	r2, r3
 8002a7e:	d101      	bne.n	8002a84 <ucg_font_get_glyph_data+0x5a>
 8002a80:	68fb      	ldr	r3, [r7, #12]
 8002a82:	e009      	b.n	8002a98 <ucg_font_get_glyph_data+0x6e>
 8002a84:	68fb      	ldr	r3, [r7, #12]
 8002a86:	3301      	adds	r3, #1
 8002a88:	781b      	ldrb	r3, [r3, #0]
 8002a8a:	461a      	mov	r2, r3
 8002a8c:	68fb      	ldr	r3, [r7, #12]
 8002a8e:	4413      	add	r3, r2
 8002a90:	60fb      	str	r3, [r7, #12]
 8002a92:	e7eb      	b.n	8002a6c <ucg_font_get_glyph_data+0x42>
 8002a94:	bf00      	nop
 8002a96:	2300      	movs	r3, #0
 8002a98:	4618      	mov	r0, r3
 8002a9a:	3714      	adds	r7, #20
 8002a9c:	46bd      	mov	sp, r7
 8002a9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002aa2:	4770      	bx	lr

08002aa4 <ucg_font_draw_glyph>:
 8002aa4:	b580      	push	{r7, lr}
 8002aa6:	b086      	sub	sp, #24
 8002aa8:	af00      	add	r7, sp, #0
 8002aaa:	60f8      	str	r0, [r7, #12]
 8002aac:	4608      	mov	r0, r1
 8002aae:	4611      	mov	r1, r2
 8002ab0:	461a      	mov	r2, r3
 8002ab2:	4603      	mov	r3, r0
 8002ab4:	817b      	strh	r3, [r7, #10]
 8002ab6:	460b      	mov	r3, r1
 8002ab8:	813b      	strh	r3, [r7, #8]
 8002aba:	4613      	mov	r3, r2
 8002abc:	71fb      	strb	r3, [r7, #7]
 8002abe:	2300      	movs	r3, #0
 8002ac0:	82fb      	strh	r3, [r7, #22]
 8002ac2:	68fb      	ldr	r3, [r7, #12]
 8002ac4:	897a      	ldrh	r2, [r7, #10]
 8002ac6:	f8a3 2084 	strh.w	r2, [r3, #132]	; 0x84
 8002aca:	68fb      	ldr	r3, [r7, #12]
 8002acc:	893a      	ldrh	r2, [r7, #8]
 8002ace:	f8a3 2086 	strh.w	r2, [r3, #134]	; 0x86
 8002ad2:	68fb      	ldr	r3, [r7, #12]
 8002ad4:	79fa      	ldrb	r2, [r7, #7]
 8002ad6:	f883 208e 	strb.w	r2, [r3, #142]	; 0x8e
 8002ada:	f897 3020 	ldrb.w	r3, [r7, #32]
 8002ade:	4619      	mov	r1, r3
 8002ae0:	68f8      	ldr	r0, [r7, #12]
 8002ae2:	f7ff ffa2 	bl	8002a2a <ucg_font_get_glyph_data>
 8002ae6:	6138      	str	r0, [r7, #16]
 8002ae8:	693b      	ldr	r3, [r7, #16]
 8002aea:	2b00      	cmp	r3, #0
 8002aec:	d005      	beq.n	8002afa <ucg_font_draw_glyph+0x56>
 8002aee:	6939      	ldr	r1, [r7, #16]
 8002af0:	68f8      	ldr	r0, [r7, #12]
 8002af2:	f7ff fef4 	bl	80028de <ucg_font_decode_glyph>
 8002af6:	4603      	mov	r3, r0
 8002af8:	82fb      	strh	r3, [r7, #22]
 8002afa:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 8002afe:	4618      	mov	r0, r3
 8002b00:	3718      	adds	r7, #24
 8002b02:	46bd      	mov	sp, r7
 8002b04:	bd80      	pop	{r7, pc}

08002b06 <ucg_SetFontMode>:
 8002b06:	b480      	push	{r7}
 8002b08:	b083      	sub	sp, #12
 8002b0a:	af00      	add	r7, sp, #0
 8002b0c:	6078      	str	r0, [r7, #4]
 8002b0e:	460b      	mov	r3, r1
 8002b10:	70fb      	strb	r3, [r7, #3]
 8002b12:	687b      	ldr	r3, [r7, #4]
 8002b14:	78fa      	ldrb	r2, [r7, #3]
 8002b16:	f883 208d 	strb.w	r2, [r3, #141]	; 0x8d
 8002b1a:	bf00      	nop
 8002b1c:	370c      	adds	r7, #12
 8002b1e:	46bd      	mov	sp, r7
 8002b20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b24:	4770      	bx	lr
	...

08002b28 <ucg_DrawGlyph>:
 8002b28:	b580      	push	{r7, lr}
 8002b2a:	b086      	sub	sp, #24
 8002b2c:	af02      	add	r7, sp, #8
 8002b2e:	60f8      	str	r0, [r7, #12]
 8002b30:	4608      	mov	r0, r1
 8002b32:	4611      	mov	r1, r2
 8002b34:	461a      	mov	r2, r3
 8002b36:	4603      	mov	r3, r0
 8002b38:	817b      	strh	r3, [r7, #10]
 8002b3a:	460b      	mov	r3, r1
 8002b3c:	813b      	strh	r3, [r7, #8]
 8002b3e:	4613      	mov	r3, r2
 8002b40:	71fb      	strb	r3, [r7, #7]
 8002b42:	79fb      	ldrb	r3, [r7, #7]
 8002b44:	2b03      	cmp	r3, #3
 8002b46:	d837      	bhi.n	8002bb8 <ucg_DrawGlyph+0x90>
 8002b48:	a201      	add	r2, pc, #4	; (adr r2, 8002b50 <ucg_DrawGlyph+0x28>)
 8002b4a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002b4e:	bf00      	nop
 8002b50:	08002b61 	.word	0x08002b61
 8002b54:	08002b77 	.word	0x08002b77
 8002b58:	08002b8d 	.word	0x08002b8d
 8002b5c:	08002ba3 	.word	0x08002ba3
 8002b60:	68fb      	ldr	r3, [r7, #12]
 8002b62:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8002b64:	68f8      	ldr	r0, [r7, #12]
 8002b66:	4798      	blx	r3
 8002b68:	4603      	mov	r3, r0
 8002b6a:	b29a      	uxth	r2, r3
 8002b6c:	893b      	ldrh	r3, [r7, #8]
 8002b6e:	4413      	add	r3, r2
 8002b70:	b29b      	uxth	r3, r3
 8002b72:	813b      	strh	r3, [r7, #8]
 8002b74:	e020      	b.n	8002bb8 <ucg_DrawGlyph+0x90>
 8002b76:	68fb      	ldr	r3, [r7, #12]
 8002b78:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8002b7a:	68f8      	ldr	r0, [r7, #12]
 8002b7c:	4798      	blx	r3
 8002b7e:	4603      	mov	r3, r0
 8002b80:	897a      	ldrh	r2, [r7, #10]
 8002b82:	b29b      	uxth	r3, r3
 8002b84:	1ad3      	subs	r3, r2, r3
 8002b86:	b29b      	uxth	r3, r3
 8002b88:	817b      	strh	r3, [r7, #10]
 8002b8a:	e015      	b.n	8002bb8 <ucg_DrawGlyph+0x90>
 8002b8c:	68fb      	ldr	r3, [r7, #12]
 8002b8e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8002b90:	68f8      	ldr	r0, [r7, #12]
 8002b92:	4798      	blx	r3
 8002b94:	4603      	mov	r3, r0
 8002b96:	893a      	ldrh	r2, [r7, #8]
 8002b98:	b29b      	uxth	r3, r3
 8002b9a:	1ad3      	subs	r3, r2, r3
 8002b9c:	b29b      	uxth	r3, r3
 8002b9e:	813b      	strh	r3, [r7, #8]
 8002ba0:	e00a      	b.n	8002bb8 <ucg_DrawGlyph+0x90>
 8002ba2:	68fb      	ldr	r3, [r7, #12]
 8002ba4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8002ba6:	68f8      	ldr	r0, [r7, #12]
 8002ba8:	4798      	blx	r3
 8002baa:	4603      	mov	r3, r0
 8002bac:	b29a      	uxth	r2, r3
 8002bae:	897b      	ldrh	r3, [r7, #10]
 8002bb0:	4413      	add	r3, r2
 8002bb2:	b29b      	uxth	r3, r3
 8002bb4:	817b      	strh	r3, [r7, #10]
 8002bb6:	bf00      	nop
 8002bb8:	79f8      	ldrb	r0, [r7, #7]
 8002bba:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8002bbe:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8002bc2:	7e3b      	ldrb	r3, [r7, #24]
 8002bc4:	9300      	str	r3, [sp, #0]
 8002bc6:	4603      	mov	r3, r0
 8002bc8:	68f8      	ldr	r0, [r7, #12]
 8002bca:	f7ff ff6b 	bl	8002aa4 <ucg_font_draw_glyph>
 8002bce:	4603      	mov	r3, r0
 8002bd0:	4618      	mov	r0, r3
 8002bd2:	3710      	adds	r7, #16
 8002bd4:	46bd      	mov	sp, r7
 8002bd6:	bd80      	pop	{r7, pc}

08002bd8 <task_drawString>:
 8002bd8:	b580      	push	{r7, lr}
 8002bda:	b086      	sub	sp, #24
 8002bdc:	af02      	add	r7, sp, #8
 8002bde:	6078      	str	r0, [r7, #4]
 8002be0:	2300      	movs	r3, #0
 8002be2:	81fb      	strh	r3, [r7, #14]
 8002be4:	687b      	ldr	r3, [r7, #4]
 8002be6:	60bb      	str	r3, [r7, #8]
 8002be8:	4b45      	ldr	r3, [pc, #276]	; (8002d00 <task_drawString+0x128>)
 8002bea:	781b      	ldrb	r3, [r3, #0]
 8002bec:	2b00      	cmp	r3, #0
 8002bee:	d002      	beq.n	8002bf6 <task_drawString+0x1e>
 8002bf0:	2b01      	cmp	r3, #1
 8002bf2:	d01e      	beq.n	8002c32 <task_drawString+0x5a>
 8002bf4:	e07b      	b.n	8002cee <task_drawString+0x116>
 8002bf6:	4843      	ldr	r0, [pc, #268]	; (8002d04 <task_drawString+0x12c>)
 8002bf8:	f000 fb5d 	bl	80032b6 <bufNumItems>
 8002bfc:	4603      	mov	r3, r0
 8002bfe:	2b00      	cmp	r3, #0
 8002c00:	d007      	beq.n	8002c12 <task_drawString+0x3a>
 8002c02:	4941      	ldr	r1, [pc, #260]	; (8002d08 <task_drawString+0x130>)
 8002c04:	483f      	ldr	r0, [pc, #252]	; (8002d04 <task_drawString+0x12c>)
 8002c06:	f000 fbef 	bl	80033e8 <bufDeDat>
 8002c0a:	4b3d      	ldr	r3, [pc, #244]	; (8002d00 <task_drawString+0x128>)
 8002c0c:	2201      	movs	r2, #1
 8002c0e:	701a      	strb	r2, [r3, #0]
 8002c10:	e071      	b.n	8002cf6 <task_drawString+0x11e>
 8002c12:	4b3e      	ldr	r3, [pc, #248]	; (8002d0c <task_drawString+0x134>)
 8002c14:	781b      	ldrb	r3, [r3, #0]
 8002c16:	2bff      	cmp	r3, #255	; 0xff
 8002c18:	d007      	beq.n	8002c2a <task_drawString+0x52>
 8002c1a:	4b3c      	ldr	r3, [pc, #240]	; (8002d0c <task_drawString+0x134>)
 8002c1c:	781b      	ldrb	r3, [r3, #0]
 8002c1e:	4618      	mov	r0, r3
 8002c20:	f7fe fcb0 	bl	8001584 <TimerStop>
 8002c24:	4b39      	ldr	r3, [pc, #228]	; (8002d0c <task_drawString+0x134>)
 8002c26:	22ff      	movs	r2, #255	; 0xff
 8002c28:	701a      	strb	r2, [r3, #0]
 8002c2a:	4b35      	ldr	r3, [pc, #212]	; (8002d00 <task_drawString+0x128>)
 8002c2c:	2200      	movs	r2, #0
 8002c2e:	701a      	strb	r2, [r3, #0]
 8002c30:	e061      	b.n	8002cf6 <task_drawString+0x11e>
 8002c32:	4b35      	ldr	r3, [pc, #212]	; (8002d08 <task_drawString+0x130>)
 8002c34:	689b      	ldr	r3, [r3, #8]
 8002c36:	781b      	ldrb	r3, [r3, #0]
 8002c38:	2b00      	cmp	r3, #0
 8002c3a:	d054      	beq.n	8002ce6 <task_drawString+0x10e>
 8002c3c:	4b32      	ldr	r3, [pc, #200]	; (8002d08 <task_drawString+0x130>)
 8002c3e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8002c42:	4b31      	ldr	r3, [pc, #196]	; (8002d08 <task_drawString+0x130>)
 8002c44:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8002c48:	4b2f      	ldr	r3, [pc, #188]	; (8002d08 <task_drawString+0x130>)
 8002c4a:	7918      	ldrb	r0, [r3, #4]
 8002c4c:	4b2e      	ldr	r3, [pc, #184]	; (8002d08 <task_drawString+0x130>)
 8002c4e:	689b      	ldr	r3, [r3, #8]
 8002c50:	781b      	ldrb	r3, [r3, #0]
 8002c52:	9300      	str	r3, [sp, #0]
 8002c54:	4603      	mov	r3, r0
 8002c56:	68b8      	ldr	r0, [r7, #8]
 8002c58:	f7ff ff66 	bl	8002b28 <ucg_DrawGlyph>
 8002c5c:	4603      	mov	r3, r0
 8002c5e:	81fb      	strh	r3, [r7, #14]
 8002c60:	4b29      	ldr	r3, [pc, #164]	; (8002d08 <task_drawString+0x130>)
 8002c62:	791b      	ldrb	r3, [r3, #4]
 8002c64:	2b03      	cmp	r3, #3
 8002c66:	d837      	bhi.n	8002cd8 <task_drawString+0x100>
 8002c68:	a201      	add	r2, pc, #4	; (adr r2, 8002c70 <task_drawString+0x98>)
 8002c6a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002c6e:	bf00      	nop
 8002c70:	08002c81 	.word	0x08002c81
 8002c74:	08002c97 	.word	0x08002c97
 8002c78:	08002cad 	.word	0x08002cad
 8002c7c:	08002cc3 	.word	0x08002cc3
 8002c80:	4b21      	ldr	r3, [pc, #132]	; (8002d08 <task_drawString+0x130>)
 8002c82:	f9b3 3000 	ldrsh.w	r3, [r3]
 8002c86:	b29a      	uxth	r2, r3
 8002c88:	89fb      	ldrh	r3, [r7, #14]
 8002c8a:	4413      	add	r3, r2
 8002c8c:	b29b      	uxth	r3, r3
 8002c8e:	b21a      	sxth	r2, r3
 8002c90:	4b1d      	ldr	r3, [pc, #116]	; (8002d08 <task_drawString+0x130>)
 8002c92:	801a      	strh	r2, [r3, #0]
 8002c94:	e021      	b.n	8002cda <task_drawString+0x102>
 8002c96:	4b1c      	ldr	r3, [pc, #112]	; (8002d08 <task_drawString+0x130>)
 8002c98:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8002c9c:	b29a      	uxth	r2, r3
 8002c9e:	89fb      	ldrh	r3, [r7, #14]
 8002ca0:	4413      	add	r3, r2
 8002ca2:	b29b      	uxth	r3, r3
 8002ca4:	b21a      	sxth	r2, r3
 8002ca6:	4b18      	ldr	r3, [pc, #96]	; (8002d08 <task_drawString+0x130>)
 8002ca8:	805a      	strh	r2, [r3, #2]
 8002caa:	e016      	b.n	8002cda <task_drawString+0x102>
 8002cac:	4b16      	ldr	r3, [pc, #88]	; (8002d08 <task_drawString+0x130>)
 8002cae:	f9b3 3000 	ldrsh.w	r3, [r3]
 8002cb2:	b29a      	uxth	r2, r3
 8002cb4:	89fb      	ldrh	r3, [r7, #14]
 8002cb6:	1ad3      	subs	r3, r2, r3
 8002cb8:	b29b      	uxth	r3, r3
 8002cba:	b21a      	sxth	r2, r3
 8002cbc:	4b12      	ldr	r3, [pc, #72]	; (8002d08 <task_drawString+0x130>)
 8002cbe:	801a      	strh	r2, [r3, #0]
 8002cc0:	e00b      	b.n	8002cda <task_drawString+0x102>
 8002cc2:	4b11      	ldr	r3, [pc, #68]	; (8002d08 <task_drawString+0x130>)
 8002cc4:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8002cc8:	b29a      	uxth	r2, r3
 8002cca:	89fb      	ldrh	r3, [r7, #14]
 8002ccc:	1ad3      	subs	r3, r2, r3
 8002cce:	b29b      	uxth	r3, r3
 8002cd0:	b21a      	sxth	r2, r3
 8002cd2:	4b0d      	ldr	r3, [pc, #52]	; (8002d08 <task_drawString+0x130>)
 8002cd4:	805a      	strh	r2, [r3, #2]
 8002cd6:	e000      	b.n	8002cda <task_drawString+0x102>
 8002cd8:	bf00      	nop
 8002cda:	4b0b      	ldr	r3, [pc, #44]	; (8002d08 <task_drawString+0x130>)
 8002cdc:	689b      	ldr	r3, [r3, #8]
 8002cde:	3301      	adds	r3, #1
 8002ce0:	4a09      	ldr	r2, [pc, #36]	; (8002d08 <task_drawString+0x130>)
 8002ce2:	6093      	str	r3, [r2, #8]
 8002ce4:	e007      	b.n	8002cf6 <task_drawString+0x11e>
 8002ce6:	4b06      	ldr	r3, [pc, #24]	; (8002d00 <task_drawString+0x128>)
 8002ce8:	2200      	movs	r2, #0
 8002cea:	701a      	strb	r2, [r3, #0]
 8002cec:	e003      	b.n	8002cf6 <task_drawString+0x11e>
 8002cee:	4b04      	ldr	r3, [pc, #16]	; (8002d00 <task_drawString+0x128>)
 8002cf0:	2200      	movs	r2, #0
 8002cf2:	701a      	strb	r2, [r3, #0]
 8002cf4:	bf00      	nop
 8002cf6:	bf00      	nop
 8002cf8:	3710      	adds	r7, #16
 8002cfa:	46bd      	mov	sp, r7
 8002cfc:	bd80      	pop	{r7, pc}
 8002cfe:	bf00      	nop
 8002d00:	20001360 	.word	0x20001360
 8002d04:	20000350 	.word	0x20000350
 8002d08:	20001374 	.word	0x20001374
 8002d0c:	20000024 	.word	0x20000024

08002d10 <ucg_DrawString>:
 8002d10:	b580      	push	{r7, lr}
 8002d12:	b08a      	sub	sp, #40	; 0x28
 8002d14:	af02      	add	r7, sp, #8
 8002d16:	60f8      	str	r0, [r7, #12]
 8002d18:	4608      	mov	r0, r1
 8002d1a:	4611      	mov	r1, r2
 8002d1c:	461a      	mov	r2, r3
 8002d1e:	4603      	mov	r3, r0
 8002d20:	817b      	strh	r3, [r7, #10]
 8002d22:	460b      	mov	r3, r1
 8002d24:	813b      	strh	r3, [r7, #8]
 8002d26:	4613      	mov	r3, r2
 8002d28:	71fb      	strb	r3, [r7, #7]
 8002d2a:	2300      	movs	r3, #0
 8002d2c:	83fb      	strh	r3, [r7, #30]
 8002d2e:	897b      	ldrh	r3, [r7, #10]
 8002d30:	823b      	strh	r3, [r7, #16]
 8002d32:	893b      	ldrh	r3, [r7, #8]
 8002d34:	827b      	strh	r3, [r7, #18]
 8002d36:	79fb      	ldrb	r3, [r7, #7]
 8002d38:	753b      	strb	r3, [r7, #20]
 8002d3a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002d3c:	61bb      	str	r3, [r7, #24]
 8002d3e:	f107 0310 	add.w	r3, r7, #16
 8002d42:	4619      	mov	r1, r3
 8002d44:	480c      	ldr	r0, [pc, #48]	; (8002d78 <ucg_DrawString+0x68>)
 8002d46:	f000 fb01 	bl	800334c <bufEnDat>
 8002d4a:	4b0c      	ldr	r3, [pc, #48]	; (8002d7c <ucg_DrawString+0x6c>)
 8002d4c:	781b      	ldrb	r3, [r3, #0]
 8002d4e:	2bff      	cmp	r3, #255	; 0xff
 8002d50:	d10b      	bne.n	8002d6a <ucg_DrawString+0x5a>
 8002d52:	68fb      	ldr	r3, [r7, #12]
 8002d54:	9300      	str	r3, [sp, #0]
 8002d56:	4b0a      	ldr	r3, [pc, #40]	; (8002d80 <ucg_DrawString+0x70>)
 8002d58:	22ff      	movs	r2, #255	; 0xff
 8002d5a:	211e      	movs	r1, #30
 8002d5c:	4809      	ldr	r0, [pc, #36]	; (8002d84 <ucg_DrawString+0x74>)
 8002d5e:	f7fe fbaf 	bl	80014c0 <TimerStart>
 8002d62:	4603      	mov	r3, r0
 8002d64:	461a      	mov	r2, r3
 8002d66:	4b05      	ldr	r3, [pc, #20]	; (8002d7c <ucg_DrawString+0x6c>)
 8002d68:	701a      	strb	r2, [r3, #0]
 8002d6a:	f9b7 301e 	ldrsh.w	r3, [r7, #30]
 8002d6e:	4618      	mov	r0, r3
 8002d70:	3720      	adds	r7, #32
 8002d72:	46bd      	mov	sp, r7
 8002d74:	bd80      	pop	{r7, pc}
 8002d76:	bf00      	nop
 8002d78:	20000350 	.word	0x20000350
 8002d7c:	20000024 	.word	0x20000024
 8002d80:	08002bd9 	.word	0x08002bd9
 8002d84:	08004958 	.word	0x08004958

08002d88 <ucg_UpdateRefHeight>:
 8002d88:	b480      	push	{r7}
 8002d8a:	b083      	sub	sp, #12
 8002d8c:	af00      	add	r7, sp, #0
 8002d8e:	6078      	str	r0, [r7, #4]
 8002d90:	687b      	ldr	r3, [r7, #4]
 8002d92:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8002d94:	2b00      	cmp	r3, #0
 8002d96:	d05d      	beq.n	8002e54 <ucg_UpdateRefHeight+0xcc>
 8002d98:	687b      	ldr	r3, [r7, #4]
 8002d9a:	f993 209d 	ldrsb.w	r2, [r3, #157]	; 0x9d
 8002d9e:	687b      	ldr	r3, [r7, #4]
 8002da0:	f883 20ac 	strb.w	r2, [r3, #172]	; 0xac
 8002da4:	687b      	ldr	r3, [r7, #4]
 8002da6:	f993 209e 	ldrsb.w	r2, [r3, #158]	; 0x9e
 8002daa:	687b      	ldr	r3, [r7, #4]
 8002dac:	f883 20ad 	strb.w	r2, [r3, #173]	; 0xad
 8002db0:	687b      	ldr	r3, [r7, #4]
 8002db2:	f893 30ab 	ldrb.w	r3, [r3, #171]	; 0xab
 8002db6:	2b00      	cmp	r3, #0
 8002db8:	d04d      	beq.n	8002e56 <ucg_UpdateRefHeight+0xce>
 8002dba:	687b      	ldr	r3, [r7, #4]
 8002dbc:	f893 30ab 	ldrb.w	r3, [r3, #171]	; 0xab
 8002dc0:	2b01      	cmp	r3, #1
 8002dc2:	d11c      	bne.n	8002dfe <ucg_UpdateRefHeight+0x76>
 8002dc4:	687b      	ldr	r3, [r7, #4]
 8002dc6:	f993 20ac 	ldrsb.w	r2, [r3, #172]	; 0xac
 8002dca:	687b      	ldr	r3, [r7, #4]
 8002dcc:	f993 309f 	ldrsb.w	r3, [r3, #159]	; 0x9f
 8002dd0:	429a      	cmp	r2, r3
 8002dd2:	da05      	bge.n	8002de0 <ucg_UpdateRefHeight+0x58>
 8002dd4:	687b      	ldr	r3, [r7, #4]
 8002dd6:	f993 209f 	ldrsb.w	r2, [r3, #159]	; 0x9f
 8002dda:	687b      	ldr	r3, [r7, #4]
 8002ddc:	f883 20ac 	strb.w	r2, [r3, #172]	; 0xac
 8002de0:	687b      	ldr	r3, [r7, #4]
 8002de2:	f993 20ad 	ldrsb.w	r2, [r3, #173]	; 0xad
 8002de6:	687b      	ldr	r3, [r7, #4]
 8002de8:	f993 30a0 	ldrsb.w	r3, [r3, #160]	; 0xa0
 8002dec:	429a      	cmp	r2, r3
 8002dee:	dd32      	ble.n	8002e56 <ucg_UpdateRefHeight+0xce>
 8002df0:	687b      	ldr	r3, [r7, #4]
 8002df2:	f993 20a0 	ldrsb.w	r2, [r3, #160]	; 0xa0
 8002df6:	687b      	ldr	r3, [r7, #4]
 8002df8:	f883 20ad 	strb.w	r2, [r3, #173]	; 0xad
 8002dfc:	e02b      	b.n	8002e56 <ucg_UpdateRefHeight+0xce>
 8002dfe:	687b      	ldr	r3, [r7, #4]
 8002e00:	f993 30ac 	ldrsb.w	r3, [r3, #172]	; 0xac
 8002e04:	461a      	mov	r2, r3
 8002e06:	687b      	ldr	r3, [r7, #4]
 8002e08:	f993 309a 	ldrsb.w	r3, [r3, #154]	; 0x9a
 8002e0c:	4619      	mov	r1, r3
 8002e0e:	687b      	ldr	r3, [r7, #4]
 8002e10:	f993 309c 	ldrsb.w	r3, [r3, #156]	; 0x9c
 8002e14:	440b      	add	r3, r1
 8002e16:	429a      	cmp	r2, r3
 8002e18:	da0d      	bge.n	8002e36 <ucg_UpdateRefHeight+0xae>
 8002e1a:	687b      	ldr	r3, [r7, #4]
 8002e1c:	f993 309a 	ldrsb.w	r3, [r3, #154]	; 0x9a
 8002e20:	b2da      	uxtb	r2, r3
 8002e22:	687b      	ldr	r3, [r7, #4]
 8002e24:	f993 309c 	ldrsb.w	r3, [r3, #156]	; 0x9c
 8002e28:	b2db      	uxtb	r3, r3
 8002e2a:	4413      	add	r3, r2
 8002e2c:	b2db      	uxtb	r3, r3
 8002e2e:	b25a      	sxtb	r2, r3
 8002e30:	687b      	ldr	r3, [r7, #4]
 8002e32:	f883 20ac 	strb.w	r2, [r3, #172]	; 0xac
 8002e36:	687b      	ldr	r3, [r7, #4]
 8002e38:	f993 20ad 	ldrsb.w	r2, [r3, #173]	; 0xad
 8002e3c:	687b      	ldr	r3, [r7, #4]
 8002e3e:	f993 309c 	ldrsb.w	r3, [r3, #156]	; 0x9c
 8002e42:	429a      	cmp	r2, r3
 8002e44:	dd07      	ble.n	8002e56 <ucg_UpdateRefHeight+0xce>
 8002e46:	687b      	ldr	r3, [r7, #4]
 8002e48:	f993 209c 	ldrsb.w	r2, [r3, #156]	; 0x9c
 8002e4c:	687b      	ldr	r3, [r7, #4]
 8002e4e:	f883 20ad 	strb.w	r2, [r3, #173]	; 0xad
 8002e52:	e000      	b.n	8002e56 <ucg_UpdateRefHeight+0xce>
 8002e54:	bf00      	nop
 8002e56:	370c      	adds	r7, #12
 8002e58:	46bd      	mov	sp, r7
 8002e5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e5e:	4770      	bx	lr

08002e60 <ucg_font_calc_vref_font>:
 8002e60:	b480      	push	{r7}
 8002e62:	b083      	sub	sp, #12
 8002e64:	af00      	add	r7, sp, #0
 8002e66:	6078      	str	r0, [r7, #4]
 8002e68:	2300      	movs	r3, #0
 8002e6a:	4618      	mov	r0, r3
 8002e6c:	370c      	adds	r7, #12
 8002e6e:	46bd      	mov	sp, r7
 8002e70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e74:	4770      	bx	lr
	...

08002e78 <ucg_SetFontPosBaseline>:
 8002e78:	b480      	push	{r7}
 8002e7a:	b083      	sub	sp, #12
 8002e7c:	af00      	add	r7, sp, #0
 8002e7e:	6078      	str	r0, [r7, #4]
 8002e80:	687b      	ldr	r3, [r7, #4]
 8002e82:	4a04      	ldr	r2, [pc, #16]	; (8002e94 <ucg_SetFontPosBaseline+0x1c>)
 8002e84:	67da      	str	r2, [r3, #124]	; 0x7c
 8002e86:	bf00      	nop
 8002e88:	370c      	adds	r7, #12
 8002e8a:	46bd      	mov	sp, r7
 8002e8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e90:	4770      	bx	lr
 8002e92:	bf00      	nop
 8002e94:	08002e61 	.word	0x08002e61

08002e98 <ucg_SetFont>:
 8002e98:	b580      	push	{r7, lr}
 8002e9a:	b082      	sub	sp, #8
 8002e9c:	af00      	add	r7, sp, #0
 8002e9e:	6078      	str	r0, [r7, #4]
 8002ea0:	6039      	str	r1, [r7, #0]
 8002ea2:	687b      	ldr	r3, [r7, #4]
 8002ea4:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8002ea6:	683a      	ldr	r2, [r7, #0]
 8002ea8:	429a      	cmp	r2, r3
 8002eaa:	d012      	beq.n	8002ed2 <ucg_SetFont+0x3a>
 8002eac:	687b      	ldr	r3, [r7, #4]
 8002eae:	683a      	ldr	r2, [r7, #0]
 8002eb0:	679a      	str	r2, [r3, #120]	; 0x78
 8002eb2:	687b      	ldr	r3, [r7, #4]
 8002eb4:	3390      	adds	r3, #144	; 0x90
 8002eb6:	6839      	ldr	r1, [r7, #0]
 8002eb8:	4618      	mov	r0, r3
 8002eba:	f7ff fac9 	bl	8002450 <ucg_read_font_info>
 8002ebe:	6878      	ldr	r0, [r7, #4]
 8002ec0:	f7ff ff62 	bl	8002d88 <ucg_UpdateRefHeight>
 8002ec4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002ec8:	220c      	movs	r2, #12
 8002eca:	4904      	ldr	r1, [pc, #16]	; (8002edc <ucg_SetFont+0x44>)
 8002ecc:	4804      	ldr	r0, [pc, #16]	; (8002ee0 <ucg_SetFont+0x48>)
 8002ece:	f000 f9d7 	bl	8003280 <bufInit>
 8002ed2:	bf00      	nop
 8002ed4:	3708      	adds	r7, #8
 8002ed6:	46bd      	mov	sp, r7
 8002ed8:	bd80      	pop	{r7, pc}
 8002eda:	bf00      	nop
 8002edc:	20000350 	.word	0x20000350
 8002ee0:	20000360 	.word	0x20000360

08002ee4 <ucg_init_struct>:
 8002ee4:	b480      	push	{r7}
 8002ee6:	b083      	sub	sp, #12
 8002ee8:	af00      	add	r7, sp, #0
 8002eea:	6078      	str	r0, [r7, #4]
 8002eec:	687a      	ldr	r2, [r7, #4]
 8002eee:	7813      	ldrb	r3, [r2, #0]
 8002ef0:	f36f 0300 	bfc	r3, #0, #1
 8002ef4:	7013      	strb	r3, [r2, #0]
 8002ef6:	687b      	ldr	r3, [r7, #4]
 8002ef8:	2200      	movs	r2, #0
 8002efa:	611a      	str	r2, [r3, #16]
 8002efc:	687b      	ldr	r3, [r7, #4]
 8002efe:	2201      	movs	r2, #1
 8002f00:	865a      	strh	r2, [r3, #50]	; 0x32
 8002f02:	687b      	ldr	r3, [r7, #4]
 8002f04:	2200      	movs	r2, #0
 8002f06:	679a      	str	r2, [r3, #120]	; 0x78
 8002f08:	687b      	ldr	r3, [r7, #4]
 8002f0a:	2201      	movs	r2, #1
 8002f0c:	f883 208d 	strb.w	r2, [r3, #141]	; 0x8d
 8002f10:	687b      	ldr	r3, [r7, #4]
 8002f12:	2200      	movs	r2, #0
 8002f14:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 8002f18:	687b      	ldr	r3, [r7, #4]
 8002f1a:	2200      	movs	r2, #0
 8002f1c:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 8002f20:	687b      	ldr	r3, [r7, #4]
 8002f22:	2200      	movs	r2, #0
 8002f24:	f883 20b0 	strb.w	r2, [r3, #176]	; 0xb0
 8002f28:	bf00      	nop
 8002f2a:	370c      	adds	r7, #12
 8002f2c:	46bd      	mov	sp, r7
 8002f2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f32:	4770      	bx	lr

08002f34 <ucg_Init>:
 8002f34:	b580      	push	{r7, lr}
 8002f36:	b086      	sub	sp, #24
 8002f38:	af00      	add	r7, sp, #0
 8002f3a:	60f8      	str	r0, [r7, #12]
 8002f3c:	60b9      	str	r1, [r7, #8]
 8002f3e:	607a      	str	r2, [r7, #4]
 8002f40:	603b      	str	r3, [r7, #0]
 8002f42:	68f8      	ldr	r0, [r7, #12]
 8002f44:	f7ff ffce 	bl	8002ee4 <ucg_init_struct>
 8002f48:	687b      	ldr	r3, [r7, #4]
 8002f4a:	2b00      	cmp	r3, #0
 8002f4c:	d103      	bne.n	8002f56 <ucg_Init+0x22>
 8002f4e:	68fb      	ldr	r3, [r7, #12]
 8002f50:	4a0e      	ldr	r2, [pc, #56]	; (8002f8c <ucg_Init+0x58>)
 8002f52:	60da      	str	r2, [r3, #12]
 8002f54:	e002      	b.n	8002f5c <ucg_Init+0x28>
 8002f56:	68fb      	ldr	r3, [r7, #12]
 8002f58:	687a      	ldr	r2, [r7, #4]
 8002f5a:	60da      	str	r2, [r3, #12]
 8002f5c:	68fb      	ldr	r3, [r7, #12]
 8002f5e:	68ba      	ldr	r2, [r7, #8]
 8002f60:	609a      	str	r2, [r3, #8]
 8002f62:	68fb      	ldr	r3, [r7, #12]
 8002f64:	683a      	ldr	r2, [r7, #0]
 8002f66:	61da      	str	r2, [r3, #28]
 8002f68:	68f8      	ldr	r0, [r7, #12]
 8002f6a:	f7ff ff85 	bl	8002e78 <ucg_SetFontPosBaseline>
 8002f6e:	68f8      	ldr	r0, [r7, #12]
 8002f70:	f7ff f996 	bl	80022a0 <ucg_PowerUp>
 8002f74:	4603      	mov	r3, r0
 8002f76:	82fb      	strh	r3, [r7, #22]
 8002f78:	68f8      	ldr	r0, [r7, #12]
 8002f7a:	f7ff f9d6 	bl	800232a <ucg_GetDimension>
 8002f7e:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 8002f82:	4618      	mov	r0, r3
 8002f84:	3718      	adds	r7, #24
 8002f86:	46bd      	mov	sp, r7
 8002f88:	bd80      	pop	{r7, pc}
 8002f8a:	bf00      	nop
 8002f8c:	08001f05 	.word	0x08001f05

08002f90 <ucg_Draw90Line>:
 8002f90:	b580      	push	{r7, lr}
 8002f92:	b084      	sub	sp, #16
 8002f94:	af00      	add	r7, sp, #0
 8002f96:	60f8      	str	r0, [r7, #12]
 8002f98:	4608      	mov	r0, r1
 8002f9a:	4611      	mov	r1, r2
 8002f9c:	461a      	mov	r2, r3
 8002f9e:	4603      	mov	r3, r0
 8002fa0:	817b      	strh	r3, [r7, #10]
 8002fa2:	460b      	mov	r3, r1
 8002fa4:	813b      	strh	r3, [r7, #8]
 8002fa6:	4613      	mov	r3, r2
 8002fa8:	80fb      	strh	r3, [r7, #6]
 8002faa:	f9b7 201c 	ldrsh.w	r2, [r7, #28]
 8002fae:	68f9      	ldr	r1, [r7, #12]
 8002fb0:	4613      	mov	r3, r2
 8002fb2:	005b      	lsls	r3, r3, #1
 8002fb4:	4413      	add	r3, r2
 8002fb6:	440b      	add	r3, r1
 8002fb8:	333a      	adds	r3, #58	; 0x3a
 8002fba:	781a      	ldrb	r2, [r3, #0]
 8002fbc:	68fb      	ldr	r3, [r7, #12]
 8002fbe:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8002fc2:	f9b7 201c 	ldrsh.w	r2, [r7, #28]
 8002fc6:	68f9      	ldr	r1, [r7, #12]
 8002fc8:	4613      	mov	r3, r2
 8002fca:	005b      	lsls	r3, r3, #1
 8002fcc:	4413      	add	r3, r2
 8002fce:	440b      	add	r3, r1
 8002fd0:	333b      	adds	r3, #59	; 0x3b
 8002fd2:	781a      	ldrb	r2, [r3, #0]
 8002fd4:	68fb      	ldr	r3, [r7, #12]
 8002fd6:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29
 8002fda:	f9b7 201c 	ldrsh.w	r2, [r7, #28]
 8002fde:	68f9      	ldr	r1, [r7, #12]
 8002fe0:	4613      	mov	r3, r2
 8002fe2:	005b      	lsls	r3, r3, #1
 8002fe4:	4413      	add	r3, r2
 8002fe6:	440b      	add	r3, r1
 8002fe8:	333c      	adds	r3, #60	; 0x3c
 8002fea:	781a      	ldrb	r2, [r3, #0]
 8002fec:	68fb      	ldr	r3, [r7, #12]
 8002fee:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 8002ff2:	68fb      	ldr	r3, [r7, #12]
 8002ff4:	897a      	ldrh	r2, [r7, #10]
 8002ff6:	849a      	strh	r2, [r3, #36]	; 0x24
 8002ff8:	68fb      	ldr	r3, [r7, #12]
 8002ffa:	893a      	ldrh	r2, [r7, #8]
 8002ffc:	84da      	strh	r2, [r3, #38]	; 0x26
 8002ffe:	68fb      	ldr	r3, [r7, #12]
 8003000:	88fa      	ldrh	r2, [r7, #6]
 8003002:	859a      	strh	r2, [r3, #44]	; 0x2c
 8003004:	68fb      	ldr	r3, [r7, #12]
 8003006:	8b3a      	ldrh	r2, [r7, #24]
 8003008:	85da      	strh	r2, [r3, #46]	; 0x2e
 800300a:	68f8      	ldr	r0, [r7, #12]
 800300c:	f7ff f99f 	bl	800234e <ucg_DrawL90FXWithArg>
 8003010:	bf00      	nop
 8003012:	3710      	adds	r7, #16
 8003014:	46bd      	mov	sp, r7
 8003016:	bd80      	pop	{r7, pc}

08003018 <ucg_DrawHLine>:
 8003018:	b580      	push	{r7, lr}
 800301a:	b086      	sub	sp, #24
 800301c:	af02      	add	r7, sp, #8
 800301e:	60f8      	str	r0, [r7, #12]
 8003020:	4608      	mov	r0, r1
 8003022:	4611      	mov	r1, r2
 8003024:	461a      	mov	r2, r3
 8003026:	4603      	mov	r3, r0
 8003028:	817b      	strh	r3, [r7, #10]
 800302a:	460b      	mov	r3, r1
 800302c:	813b      	strh	r3, [r7, #8]
 800302e:	4613      	mov	r3, r2
 8003030:	80fb      	strh	r3, [r7, #6]
 8003032:	f9b7 0006 	ldrsh.w	r0, [r7, #6]
 8003036:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800303a:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800303e:	2300      	movs	r3, #0
 8003040:	9301      	str	r3, [sp, #4]
 8003042:	2300      	movs	r3, #0
 8003044:	9300      	str	r3, [sp, #0]
 8003046:	4603      	mov	r3, r0
 8003048:	68f8      	ldr	r0, [r7, #12]
 800304a:	f7ff ffa1 	bl	8002f90 <ucg_Draw90Line>
 800304e:	bf00      	nop
 8003050:	3710      	adds	r7, #16
 8003052:	46bd      	mov	sp, r7
 8003054:	bd80      	pop	{r7, pc}

08003056 <ucg_SetColor>:
 8003056:	b480      	push	{r7}
 8003058:	b083      	sub	sp, #12
 800305a:	af00      	add	r7, sp, #0
 800305c:	6078      	str	r0, [r7, #4]
 800305e:	4608      	mov	r0, r1
 8003060:	4611      	mov	r1, r2
 8003062:	461a      	mov	r2, r3
 8003064:	4603      	mov	r3, r0
 8003066:	70fb      	strb	r3, [r7, #3]
 8003068:	460b      	mov	r3, r1
 800306a:	70bb      	strb	r3, [r7, #2]
 800306c:	4613      	mov	r3, r2
 800306e:	707b      	strb	r3, [r7, #1]
 8003070:	78fa      	ldrb	r2, [r7, #3]
 8003072:	6879      	ldr	r1, [r7, #4]
 8003074:	4613      	mov	r3, r2
 8003076:	005b      	lsls	r3, r3, #1
 8003078:	4413      	add	r3, r2
 800307a:	440b      	add	r3, r1
 800307c:	333a      	adds	r3, #58	; 0x3a
 800307e:	78ba      	ldrb	r2, [r7, #2]
 8003080:	701a      	strb	r2, [r3, #0]
 8003082:	78fa      	ldrb	r2, [r7, #3]
 8003084:	6879      	ldr	r1, [r7, #4]
 8003086:	4613      	mov	r3, r2
 8003088:	005b      	lsls	r3, r3, #1
 800308a:	4413      	add	r3, r2
 800308c:	440b      	add	r3, r1
 800308e:	333b      	adds	r3, #59	; 0x3b
 8003090:	787a      	ldrb	r2, [r7, #1]
 8003092:	701a      	strb	r2, [r3, #0]
 8003094:	78fa      	ldrb	r2, [r7, #3]
 8003096:	6879      	ldr	r1, [r7, #4]
 8003098:	4613      	mov	r3, r2
 800309a:	005b      	lsls	r3, r3, #1
 800309c:	4413      	add	r3, r2
 800309e:	440b      	add	r3, r1
 80030a0:	333c      	adds	r3, #60	; 0x3c
 80030a2:	7c3a      	ldrb	r2, [r7, #16]
 80030a4:	701a      	strb	r2, [r3, #0]
 80030a6:	bf00      	nop
 80030a8:	370c      	adds	r7, #12
 80030aa:	46bd      	mov	sp, r7
 80030ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030b0:	4770      	bx	lr

080030b2 <ucg_UndoRotate>:
 80030b2:	b580      	push	{r7, lr}
 80030b4:	b082      	sub	sp, #8
 80030b6:	af00      	add	r7, sp, #0
 80030b8:	6078      	str	r0, [r7, #4]
 80030ba:	687b      	ldr	r3, [r7, #4]
 80030bc:	691b      	ldr	r3, [r3, #16]
 80030be:	2b00      	cmp	r3, #0
 80030c0:	d006      	beq.n	80030d0 <ucg_UndoRotate+0x1e>
 80030c2:	687b      	ldr	r3, [r7, #4]
 80030c4:	691a      	ldr	r2, [r3, #16]
 80030c6:	687b      	ldr	r3, [r7, #4]
 80030c8:	609a      	str	r2, [r3, #8]
 80030ca:	687b      	ldr	r3, [r7, #4]
 80030cc:	2200      	movs	r2, #0
 80030ce:	611a      	str	r2, [r3, #16]
 80030d0:	6878      	ldr	r0, [r7, #4]
 80030d2:	f7ff f92a 	bl	800232a <ucg_GetDimension>
 80030d6:	6878      	ldr	r0, [r7, #4]
 80030d8:	f7ff f90f 	bl	80022fa <ucg_SetMaxClipRange>
 80030dc:	bf00      	nop
 80030de:	3708      	adds	r7, #8
 80030e0:	46bd      	mov	sp, r7
 80030e2:	bd80      	pop	{r7, pc}

080030e4 <ucg_rotate_180_xy>:
 80030e4:	b480      	push	{r7}
 80030e6:	b085      	sub	sp, #20
 80030e8:	af00      	add	r7, sp, #0
 80030ea:	6078      	str	r0, [r7, #4]
 80030ec:	6039      	str	r1, [r7, #0]
 80030ee:	687b      	ldr	r3, [r7, #4]
 80030f0:	8adb      	ldrh	r3, [r3, #22]
 80030f2:	81fb      	strh	r3, [r7, #14]
 80030f4:	89fa      	ldrh	r2, [r7, #14]
 80030f6:	683b      	ldr	r3, [r7, #0]
 80030f8:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80030fc:	b29b      	uxth	r3, r3
 80030fe:	1ad3      	subs	r3, r2, r3
 8003100:	b29b      	uxth	r3, r3
 8003102:	81fb      	strh	r3, [r7, #14]
 8003104:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003108:	b29b      	uxth	r3, r3
 800310a:	3b01      	subs	r3, #1
 800310c:	b29b      	uxth	r3, r3
 800310e:	81fb      	strh	r3, [r7, #14]
 8003110:	683b      	ldr	r3, [r7, #0]
 8003112:	89fa      	ldrh	r2, [r7, #14]
 8003114:	805a      	strh	r2, [r3, #2]
 8003116:	687b      	ldr	r3, [r7, #4]
 8003118:	8a9b      	ldrh	r3, [r3, #20]
 800311a:	81bb      	strh	r3, [r7, #12]
 800311c:	89ba      	ldrh	r2, [r7, #12]
 800311e:	683b      	ldr	r3, [r7, #0]
 8003120:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003124:	b29b      	uxth	r3, r3
 8003126:	1ad3      	subs	r3, r2, r3
 8003128:	b29b      	uxth	r3, r3
 800312a:	81bb      	strh	r3, [r7, #12]
 800312c:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003130:	b29b      	uxth	r3, r3
 8003132:	3b01      	subs	r3, #1
 8003134:	b29b      	uxth	r3, r3
 8003136:	81bb      	strh	r3, [r7, #12]
 8003138:	683b      	ldr	r3, [r7, #0]
 800313a:	89ba      	ldrh	r2, [r7, #12]
 800313c:	801a      	strh	r2, [r3, #0]
 800313e:	bf00      	nop
 8003140:	3714      	adds	r7, #20
 8003142:	46bd      	mov	sp, r7
 8003144:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003148:	4770      	bx	lr
	...

0800314c <ucg_dev_rotate180>:
 800314c:	b580      	push	{r7, lr}
 800314e:	b084      	sub	sp, #16
 8003150:	af00      	add	r7, sp, #0
 8003152:	60f8      	str	r0, [r7, #12]
 8003154:	460b      	mov	r3, r1
 8003156:	607a      	str	r2, [r7, #4]
 8003158:	817b      	strh	r3, [r7, #10]
 800315a:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800315e:	3b0c      	subs	r3, #12
 8003160:	2b0b      	cmp	r3, #11
 8003162:	d866      	bhi.n	8003232 <ucg_dev_rotate180+0xe6>
 8003164:	a201      	add	r2, pc, #4	; (adr r2, 800316c <ucg_dev_rotate180+0x20>)
 8003166:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800316a:	bf00      	nop
 800316c:	080031bb 	.word	0x080031bb
 8003170:	08003233 	.word	0x08003233
 8003174:	08003233 	.word	0x08003233
 8003178:	0800319d 	.word	0x0800319d
 800317c:	08003233 	.word	0x08003233
 8003180:	08003233 	.word	0x08003233
 8003184:	08003233 	.word	0x08003233
 8003188:	08003233 	.word	0x08003233
 800318c:	08003203 	.word	0x08003203
 8003190:	08003203 	.word	0x08003203
 8003194:	08003233 	.word	0x08003233
 8003198:	08003203 	.word	0x08003203
 800319c:	68fb      	ldr	r3, [r7, #12]
 800319e:	691b      	ldr	r3, [r3, #16]
 80031a0:	68fa      	ldr	r2, [r7, #12]
 80031a2:	3214      	adds	r2, #20
 80031a4:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 80031a8:	68f8      	ldr	r0, [r7, #12]
 80031aa:	4798      	blx	r3
 80031ac:	687a      	ldr	r2, [r7, #4]
 80031ae:	68fb      	ldr	r3, [r7, #12]
 80031b0:	3314      	adds	r3, #20
 80031b2:	6818      	ldr	r0, [r3, #0]
 80031b4:	6010      	str	r0, [r2, #0]
 80031b6:	2301      	movs	r3, #1
 80031b8:	e043      	b.n	8003242 <ucg_dev_rotate180+0xf6>
 80031ba:	687b      	ldr	r3, [r7, #4]
 80031bc:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80031c0:	b29a      	uxth	r2, r3
 80031c2:	687b      	ldr	r3, [r7, #4]
 80031c4:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 80031c8:	b29b      	uxth	r3, r3
 80031ca:	4413      	add	r3, r2
 80031cc:	b29b      	uxth	r3, r3
 80031ce:	3b01      	subs	r3, #1
 80031d0:	b29b      	uxth	r3, r3
 80031d2:	b21a      	sxth	r2, r3
 80031d4:	687b      	ldr	r3, [r7, #4]
 80031d6:	805a      	strh	r2, [r3, #2]
 80031d8:	687b      	ldr	r3, [r7, #4]
 80031da:	f9b3 3000 	ldrsh.w	r3, [r3]
 80031de:	b29a      	uxth	r2, r3
 80031e0:	687b      	ldr	r3, [r7, #4]
 80031e2:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80031e6:	b29b      	uxth	r3, r3
 80031e8:	4413      	add	r3, r2
 80031ea:	b29b      	uxth	r3, r3
 80031ec:	3b01      	subs	r3, #1
 80031ee:	b29b      	uxth	r3, r3
 80031f0:	b21a      	sxth	r2, r3
 80031f2:	687b      	ldr	r3, [r7, #4]
 80031f4:	801a      	strh	r2, [r3, #0]
 80031f6:	687b      	ldr	r3, [r7, #4]
 80031f8:	4619      	mov	r1, r3
 80031fa:	68f8      	ldr	r0, [r7, #12]
 80031fc:	f7ff ff72 	bl	80030e4 <ucg_rotate_180_xy>
 8003200:	e017      	b.n	8003232 <ucg_dev_rotate180+0xe6>
 8003202:	68fb      	ldr	r3, [r7, #12]
 8003204:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 8003208:	b29b      	uxth	r3, r3
 800320a:	3302      	adds	r3, #2
 800320c:	b29b      	uxth	r3, r3
 800320e:	b21a      	sxth	r2, r3
 8003210:	68fb      	ldr	r3, [r7, #12]
 8003212:	85da      	strh	r2, [r3, #46]	; 0x2e
 8003214:	68fb      	ldr	r3, [r7, #12]
 8003216:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 800321a:	f003 0303 	and.w	r3, r3, #3
 800321e:	b21a      	sxth	r2, r3
 8003220:	68fb      	ldr	r3, [r7, #12]
 8003222:	85da      	strh	r2, [r3, #46]	; 0x2e
 8003224:	68fb      	ldr	r3, [r7, #12]
 8003226:	3324      	adds	r3, #36	; 0x24
 8003228:	4619      	mov	r1, r3
 800322a:	68f8      	ldr	r0, [r7, #12]
 800322c:	f7ff ff5a 	bl	80030e4 <ucg_rotate_180_xy>
 8003230:	bf00      	nop
 8003232:	68fb      	ldr	r3, [r7, #12]
 8003234:	691b      	ldr	r3, [r3, #16]
 8003236:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800323a:	687a      	ldr	r2, [r7, #4]
 800323c:	68f8      	ldr	r0, [r7, #12]
 800323e:	4798      	blx	r3
 8003240:	4603      	mov	r3, r0
 8003242:	4618      	mov	r0, r3
 8003244:	3710      	adds	r7, #16
 8003246:	46bd      	mov	sp, r7
 8003248:	bd80      	pop	{r7, pc}
 800324a:	bf00      	nop

0800324c <ucg_SetRotate180>:
 800324c:	b580      	push	{r7, lr}
 800324e:	b082      	sub	sp, #8
 8003250:	af00      	add	r7, sp, #0
 8003252:	6078      	str	r0, [r7, #4]
 8003254:	6878      	ldr	r0, [r7, #4]
 8003256:	f7ff ff2c 	bl	80030b2 <ucg_UndoRotate>
 800325a:	687b      	ldr	r3, [r7, #4]
 800325c:	689a      	ldr	r2, [r3, #8]
 800325e:	687b      	ldr	r3, [r7, #4]
 8003260:	611a      	str	r2, [r3, #16]
 8003262:	687b      	ldr	r3, [r7, #4]
 8003264:	4a05      	ldr	r2, [pc, #20]	; (800327c <ucg_SetRotate180+0x30>)
 8003266:	609a      	str	r2, [r3, #8]
 8003268:	6878      	ldr	r0, [r7, #4]
 800326a:	f7ff f85e 	bl	800232a <ucg_GetDimension>
 800326e:	6878      	ldr	r0, [r7, #4]
 8003270:	f7ff f843 	bl	80022fa <ucg_SetMaxClipRange>
 8003274:	bf00      	nop
 8003276:	3708      	adds	r7, #8
 8003278:	46bd      	mov	sp, r7
 800327a:	bd80      	pop	{r7, pc}
 800327c:	0800314d 	.word	0x0800314d

08003280 <bufInit>:
 8003280:	b580      	push	{r7, lr}
 8003282:	b084      	sub	sp, #16
 8003284:	af00      	add	r7, sp, #0
 8003286:	60f8      	str	r0, [r7, #12]
 8003288:	60b9      	str	r1, [r7, #8]
 800328a:	4611      	mov	r1, r2
 800328c:	461a      	mov	r2, r3
 800328e:	460b      	mov	r3, r1
 8003290:	71fb      	strb	r3, [r7, #7]
 8003292:	4613      	mov	r3, r2
 8003294:	80bb      	strh	r3, [r7, #4]
 8003296:	68bb      	ldr	r3, [r7, #8]
 8003298:	88ba      	ldrh	r2, [r7, #4]
 800329a:	801a      	strh	r2, [r3, #0]
 800329c:	68bb      	ldr	r3, [r7, #8]
 800329e:	79fa      	ldrb	r2, [r7, #7]
 80032a0:	711a      	strb	r2, [r3, #4]
 80032a2:	68bb      	ldr	r3, [r7, #8]
 80032a4:	68fa      	ldr	r2, [r7, #12]
 80032a6:	60da      	str	r2, [r3, #12]
 80032a8:	68b8      	ldr	r0, [r7, #8]
 80032aa:	f000 f836 	bl	800331a <bufFlush>
 80032ae:	bf00      	nop
 80032b0:	3710      	adds	r7, #16
 80032b2:	46bd      	mov	sp, r7
 80032b4:	bd80      	pop	{r7, pc}

080032b6 <bufNumItems>:
 80032b6:	b480      	push	{r7}
 80032b8:	b083      	sub	sp, #12
 80032ba:	af00      	add	r7, sp, #0
 80032bc:	6078      	str	r0, [r7, #4]
 80032be:	687b      	ldr	r3, [r7, #4]
 80032c0:	885b      	ldrh	r3, [r3, #2]
 80032c2:	4618      	mov	r0, r3
 80032c4:	370c      	adds	r7, #12
 80032c6:	46bd      	mov	sp, r7
 80032c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032cc:	4770      	bx	lr

080032ce <bufIsFull>:
 80032ce:	b480      	push	{r7}
 80032d0:	b083      	sub	sp, #12
 80032d2:	af00      	add	r7, sp, #0
 80032d4:	6078      	str	r0, [r7, #4]
 80032d6:	687b      	ldr	r3, [r7, #4]
 80032d8:	885a      	ldrh	r2, [r3, #2]
 80032da:	687b      	ldr	r3, [r7, #4]
 80032dc:	881b      	ldrh	r3, [r3, #0]
 80032de:	429a      	cmp	r2, r3
 80032e0:	bf2c      	ite	cs
 80032e2:	2301      	movcs	r3, #1
 80032e4:	2300      	movcc	r3, #0
 80032e6:	b2db      	uxtb	r3, r3
 80032e8:	4618      	mov	r0, r3
 80032ea:	370c      	adds	r7, #12
 80032ec:	46bd      	mov	sp, r7
 80032ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032f2:	4770      	bx	lr

080032f4 <bufIsEmpty>:
 80032f4:	b480      	push	{r7}
 80032f6:	b083      	sub	sp, #12
 80032f8:	af00      	add	r7, sp, #0
 80032fa:	6078      	str	r0, [r7, #4]
 80032fc:	687b      	ldr	r3, [r7, #4]
 80032fe:	88da      	ldrh	r2, [r3, #6]
 8003300:	687b      	ldr	r3, [r7, #4]
 8003302:	891b      	ldrh	r3, [r3, #8]
 8003304:	429a      	cmp	r2, r3
 8003306:	bf0c      	ite	eq
 8003308:	2301      	moveq	r3, #1
 800330a:	2300      	movne	r3, #0
 800330c:	b2db      	uxtb	r3, r3
 800330e:	4618      	mov	r0, r3
 8003310:	370c      	adds	r7, #12
 8003312:	46bd      	mov	sp, r7
 8003314:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003318:	4770      	bx	lr

0800331a <bufFlush>:
 800331a:	b580      	push	{r7, lr}
 800331c:	b082      	sub	sp, #8
 800331e:	af00      	add	r7, sp, #0
 8003320:	6078      	str	r0, [r7, #4]
 8003322:	687b      	ldr	r3, [r7, #4]
 8003324:	2200      	movs	r2, #0
 8003326:	80da      	strh	r2, [r3, #6]
 8003328:	687b      	ldr	r3, [r7, #4]
 800332a:	2200      	movs	r2, #0
 800332c:	811a      	strh	r2, [r3, #8]
 800332e:	687b      	ldr	r3, [r7, #4]
 8003330:	2200      	movs	r2, #0
 8003332:	805a      	strh	r2, [r3, #2]
 8003334:	687b      	ldr	r3, [r7, #4]
 8003336:	68d8      	ldr	r0, [r3, #12]
 8003338:	687b      	ldr	r3, [r7, #4]
 800333a:	881b      	ldrh	r3, [r3, #0]
 800333c:	461a      	mov	r2, r3
 800333e:	2100      	movs	r1, #0
 8003340:	f000 f894 	bl	800346c <memsetl>
 8003344:	bf00      	nop
 8003346:	3708      	adds	r7, #8
 8003348:	46bd      	mov	sp, r7
 800334a:	bd80      	pop	{r7, pc}

0800334c <bufEnDat>:
 800334c:	b580      	push	{r7, lr}
 800334e:	b084      	sub	sp, #16
 8003350:	af00      	add	r7, sp, #0
 8003352:	6078      	str	r0, [r7, #4]
 8003354:	6039      	str	r1, [r7, #0]
 8003356:	b672      	cpsid	i
 8003358:	2300      	movs	r3, #0
 800335a:	73fb      	strb	r3, [r7, #15]
 800335c:	e021      	b.n	80033a2 <bufEnDat+0x56>
 800335e:	7bfb      	ldrb	r3, [r7, #15]
 8003360:	683a      	ldr	r2, [r7, #0]
 8003362:	441a      	add	r2, r3
 8003364:	687b      	ldr	r3, [r7, #4]
 8003366:	68db      	ldr	r3, [r3, #12]
 8003368:	6879      	ldr	r1, [r7, #4]
 800336a:	88c9      	ldrh	r1, [r1, #6]
 800336c:	440b      	add	r3, r1
 800336e:	7812      	ldrb	r2, [r2, #0]
 8003370:	701a      	strb	r2, [r3, #0]
 8003372:	687b      	ldr	r3, [r7, #4]
 8003374:	88db      	ldrh	r3, [r3, #6]
 8003376:	3301      	adds	r3, #1
 8003378:	b29b      	uxth	r3, r3
 800337a:	b21a      	sxth	r2, r3
 800337c:	687b      	ldr	r3, [r7, #4]
 800337e:	881b      	ldrh	r3, [r3, #0]
 8003380:	3b01      	subs	r3, #1
 8003382:	b29b      	uxth	r3, r3
 8003384:	b21b      	sxth	r3, r3
 8003386:	4013      	ands	r3, r2
 8003388:	b21b      	sxth	r3, r3
 800338a:	b29a      	uxth	r2, r3
 800338c:	687b      	ldr	r3, [r7, #4]
 800338e:	80da      	strh	r2, [r3, #6]
 8003390:	687b      	ldr	r3, [r7, #4]
 8003392:	885b      	ldrh	r3, [r3, #2]
 8003394:	3301      	adds	r3, #1
 8003396:	b29a      	uxth	r2, r3
 8003398:	687b      	ldr	r3, [r7, #4]
 800339a:	805a      	strh	r2, [r3, #2]
 800339c:	7bfb      	ldrb	r3, [r7, #15]
 800339e:	3301      	adds	r3, #1
 80033a0:	73fb      	strb	r3, [r7, #15]
 80033a2:	687b      	ldr	r3, [r7, #4]
 80033a4:	791b      	ldrb	r3, [r3, #4]
 80033a6:	7bfa      	ldrb	r2, [r7, #15]
 80033a8:	429a      	cmp	r2, r3
 80033aa:	d3d8      	bcc.n	800335e <bufEnDat+0x12>
 80033ac:	6878      	ldr	r0, [r7, #4]
 80033ae:	f7ff ff8e 	bl	80032ce <bufIsFull>
 80033b2:	4603      	mov	r3, r0
 80033b4:	2b00      	cmp	r3, #0
 80033b6:	d011      	beq.n	80033dc <bufEnDat+0x90>
 80033b8:	687b      	ldr	r3, [r7, #4]
 80033ba:	891a      	ldrh	r2, [r3, #8]
 80033bc:	687b      	ldr	r3, [r7, #4]
 80033be:	791b      	ldrb	r3, [r3, #4]
 80033c0:	b29b      	uxth	r3, r3
 80033c2:	4413      	add	r3, r2
 80033c4:	b29b      	uxth	r3, r3
 80033c6:	b21a      	sxth	r2, r3
 80033c8:	687b      	ldr	r3, [r7, #4]
 80033ca:	881b      	ldrh	r3, [r3, #0]
 80033cc:	3b01      	subs	r3, #1
 80033ce:	b29b      	uxth	r3, r3
 80033d0:	b21b      	sxth	r3, r3
 80033d2:	4013      	ands	r3, r2
 80033d4:	b21b      	sxth	r3, r3
 80033d6:	b29a      	uxth	r2, r3
 80033d8:	687b      	ldr	r3, [r7, #4]
 80033da:	811a      	strh	r2, [r3, #8]
 80033dc:	b662      	cpsie	i
 80033de:	2300      	movs	r3, #0
 80033e0:	4618      	mov	r0, r3
 80033e2:	3710      	adds	r7, #16
 80033e4:	46bd      	mov	sp, r7
 80033e6:	bd80      	pop	{r7, pc}

080033e8 <bufDeDat>:
 80033e8:	b580      	push	{r7, lr}
 80033ea:	b084      	sub	sp, #16
 80033ec:	af00      	add	r7, sp, #0
 80033ee:	6078      	str	r0, [r7, #4]
 80033f0:	6039      	str	r1, [r7, #0]
 80033f2:	b672      	cpsid	i
 80033f4:	6878      	ldr	r0, [r7, #4]
 80033f6:	f7ff ff7d 	bl	80032f4 <bufIsEmpty>
 80033fa:	4603      	mov	r3, r0
 80033fc:	2b00      	cmp	r3, #0
 80033fe:	d005      	beq.n	800340c <bufDeDat+0x24>
 8003400:	687b      	ldr	r3, [r7, #4]
 8003402:	2200      	movs	r2, #0
 8003404:	805a      	strh	r2, [r3, #2]
 8003406:	b662      	cpsie	i
 8003408:	2302      	movs	r3, #2
 800340a:	e02b      	b.n	8003464 <bufDeDat+0x7c>
 800340c:	2300      	movs	r3, #0
 800340e:	73fb      	strb	r3, [r7, #15]
 8003410:	e021      	b.n	8003456 <bufDeDat+0x6e>
 8003412:	687b      	ldr	r3, [r7, #4]
 8003414:	68db      	ldr	r3, [r3, #12]
 8003416:	687a      	ldr	r2, [r7, #4]
 8003418:	8912      	ldrh	r2, [r2, #8]
 800341a:	441a      	add	r2, r3
 800341c:	7bfb      	ldrb	r3, [r7, #15]
 800341e:	6839      	ldr	r1, [r7, #0]
 8003420:	440b      	add	r3, r1
 8003422:	7812      	ldrb	r2, [r2, #0]
 8003424:	701a      	strb	r2, [r3, #0]
 8003426:	687b      	ldr	r3, [r7, #4]
 8003428:	891b      	ldrh	r3, [r3, #8]
 800342a:	3301      	adds	r3, #1
 800342c:	b29b      	uxth	r3, r3
 800342e:	b21a      	sxth	r2, r3
 8003430:	687b      	ldr	r3, [r7, #4]
 8003432:	881b      	ldrh	r3, [r3, #0]
 8003434:	3b01      	subs	r3, #1
 8003436:	b29b      	uxth	r3, r3
 8003438:	b21b      	sxth	r3, r3
 800343a:	4013      	ands	r3, r2
 800343c:	b21b      	sxth	r3, r3
 800343e:	b29a      	uxth	r2, r3
 8003440:	687b      	ldr	r3, [r7, #4]
 8003442:	811a      	strh	r2, [r3, #8]
 8003444:	687b      	ldr	r3, [r7, #4]
 8003446:	885b      	ldrh	r3, [r3, #2]
 8003448:	3b01      	subs	r3, #1
 800344a:	b29a      	uxth	r2, r3
 800344c:	687b      	ldr	r3, [r7, #4]
 800344e:	805a      	strh	r2, [r3, #2]
 8003450:	7bfb      	ldrb	r3, [r7, #15]
 8003452:	3301      	adds	r3, #1
 8003454:	73fb      	strb	r3, [r7, #15]
 8003456:	687b      	ldr	r3, [r7, #4]
 8003458:	791b      	ldrb	r3, [r3, #4]
 800345a:	7bfa      	ldrb	r2, [r7, #15]
 800345c:	429a      	cmp	r2, r3
 800345e:	d3d8      	bcc.n	8003412 <bufDeDat+0x2a>
 8003460:	b662      	cpsie	i
 8003462:	2300      	movs	r3, #0
 8003464:	4618      	mov	r0, r3
 8003466:	3710      	adds	r7, #16
 8003468:	46bd      	mov	sp, r7
 800346a:	bd80      	pop	{r7, pc}

0800346c <memsetl>:
 800346c:	b480      	push	{r7}
 800346e:	b083      	sub	sp, #12
 8003470:	af00      	add	r7, sp, #0
 8003472:	6078      	str	r0, [r7, #4]
 8003474:	460b      	mov	r3, r1
 8003476:	70fb      	strb	r3, [r7, #3]
 8003478:	4613      	mov	r3, r2
 800347a:	803b      	strh	r3, [r7, #0]
 800347c:	e004      	b.n	8003488 <memsetl+0x1c>
 800347e:	687b      	ldr	r3, [r7, #4]
 8003480:	1c5a      	adds	r2, r3, #1
 8003482:	607a      	str	r2, [r7, #4]
 8003484:	78fa      	ldrb	r2, [r7, #3]
 8003486:	701a      	strb	r2, [r3, #0]
 8003488:	883b      	ldrh	r3, [r7, #0]
 800348a:	1e5a      	subs	r2, r3, #1
 800348c:	803a      	strh	r2, [r7, #0]
 800348e:	2b00      	cmp	r3, #0
 8003490:	d1f5      	bne.n	800347e <memsetl+0x12>
 8003492:	bf00      	nop
 8003494:	370c      	adds	r7, #12
 8003496:	46bd      	mov	sp, r7
 8003498:	f85d 7b04 	ldr.w	r7, [sp], #4
 800349c:	4770      	bx	lr

0800349e <USART_ReceiveData>:
 800349e:	b480      	push	{r7}
 80034a0:	b083      	sub	sp, #12
 80034a2:	af00      	add	r7, sp, #0
 80034a4:	6078      	str	r0, [r7, #4]
 80034a6:	687b      	ldr	r3, [r7, #4]
 80034a8:	889b      	ldrh	r3, [r3, #4]
 80034aa:	b29b      	uxth	r3, r3
 80034ac:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80034b0:	b29b      	uxth	r3, r3
 80034b2:	4618      	mov	r0, r3
 80034b4:	370c      	adds	r7, #12
 80034b6:	46bd      	mov	sp, r7
 80034b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034bc:	4770      	bx	lr

080034be <USART_GetITStatus>:
 80034be:	b480      	push	{r7}
 80034c0:	b087      	sub	sp, #28
 80034c2:	af00      	add	r7, sp, #0
 80034c4:	6078      	str	r0, [r7, #4]
 80034c6:	460b      	mov	r3, r1
 80034c8:	807b      	strh	r3, [r7, #2]
 80034ca:	2300      	movs	r3, #0
 80034cc:	60fb      	str	r3, [r7, #12]
 80034ce:	2300      	movs	r3, #0
 80034d0:	617b      	str	r3, [r7, #20]
 80034d2:	2300      	movs	r3, #0
 80034d4:	60bb      	str	r3, [r7, #8]
 80034d6:	2300      	movs	r3, #0
 80034d8:	74fb      	strb	r3, [r7, #19]
 80034da:	887b      	ldrh	r3, [r7, #2]
 80034dc:	b2db      	uxtb	r3, r3
 80034de:	095b      	lsrs	r3, r3, #5
 80034e0:	b2db      	uxtb	r3, r3
 80034e2:	60bb      	str	r3, [r7, #8]
 80034e4:	887b      	ldrh	r3, [r7, #2]
 80034e6:	f003 031f 	and.w	r3, r3, #31
 80034ea:	617b      	str	r3, [r7, #20]
 80034ec:	2201      	movs	r2, #1
 80034ee:	697b      	ldr	r3, [r7, #20]
 80034f0:	fa02 f303 	lsl.w	r3, r2, r3
 80034f4:	617b      	str	r3, [r7, #20]
 80034f6:	68bb      	ldr	r3, [r7, #8]
 80034f8:	2b01      	cmp	r3, #1
 80034fa:	d107      	bne.n	800350c <USART_GetITStatus+0x4e>
 80034fc:	687b      	ldr	r3, [r7, #4]
 80034fe:	899b      	ldrh	r3, [r3, #12]
 8003500:	b29b      	uxth	r3, r3
 8003502:	461a      	mov	r2, r3
 8003504:	697b      	ldr	r3, [r7, #20]
 8003506:	4013      	ands	r3, r2
 8003508:	617b      	str	r3, [r7, #20]
 800350a:	e011      	b.n	8003530 <USART_GetITStatus+0x72>
 800350c:	68bb      	ldr	r3, [r7, #8]
 800350e:	2b02      	cmp	r3, #2
 8003510:	d107      	bne.n	8003522 <USART_GetITStatus+0x64>
 8003512:	687b      	ldr	r3, [r7, #4]
 8003514:	8a1b      	ldrh	r3, [r3, #16]
 8003516:	b29b      	uxth	r3, r3
 8003518:	461a      	mov	r2, r3
 800351a:	697b      	ldr	r3, [r7, #20]
 800351c:	4013      	ands	r3, r2
 800351e:	617b      	str	r3, [r7, #20]
 8003520:	e006      	b.n	8003530 <USART_GetITStatus+0x72>
 8003522:	687b      	ldr	r3, [r7, #4]
 8003524:	8a9b      	ldrh	r3, [r3, #20]
 8003526:	b29b      	uxth	r3, r3
 8003528:	461a      	mov	r2, r3
 800352a:	697b      	ldr	r3, [r7, #20]
 800352c:	4013      	ands	r3, r2
 800352e:	617b      	str	r3, [r7, #20]
 8003530:	887b      	ldrh	r3, [r7, #2]
 8003532:	0a1b      	lsrs	r3, r3, #8
 8003534:	b29b      	uxth	r3, r3
 8003536:	60fb      	str	r3, [r7, #12]
 8003538:	2201      	movs	r2, #1
 800353a:	68fb      	ldr	r3, [r7, #12]
 800353c:	fa02 f303 	lsl.w	r3, r2, r3
 8003540:	60fb      	str	r3, [r7, #12]
 8003542:	687b      	ldr	r3, [r7, #4]
 8003544:	881b      	ldrh	r3, [r3, #0]
 8003546:	b29b      	uxth	r3, r3
 8003548:	461a      	mov	r2, r3
 800354a:	68fb      	ldr	r3, [r7, #12]
 800354c:	4013      	ands	r3, r2
 800354e:	60fb      	str	r3, [r7, #12]
 8003550:	697b      	ldr	r3, [r7, #20]
 8003552:	2b00      	cmp	r3, #0
 8003554:	d005      	beq.n	8003562 <USART_GetITStatus+0xa4>
 8003556:	68fb      	ldr	r3, [r7, #12]
 8003558:	2b00      	cmp	r3, #0
 800355a:	d002      	beq.n	8003562 <USART_GetITStatus+0xa4>
 800355c:	2301      	movs	r3, #1
 800355e:	74fb      	strb	r3, [r7, #19]
 8003560:	e001      	b.n	8003566 <USART_GetITStatus+0xa8>
 8003562:	2300      	movs	r3, #0
 8003564:	74fb      	strb	r3, [r7, #19]
 8003566:	7cfb      	ldrb	r3, [r7, #19]
 8003568:	4618      	mov	r0, r3
 800356a:	371c      	adds	r7, #28
 800356c:	46bd      	mov	sp, r7
 800356e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003572:	4770      	bx	lr

08003574 <USART_ClearITPendingBit>:
 8003574:	b480      	push	{r7}
 8003576:	b085      	sub	sp, #20
 8003578:	af00      	add	r7, sp, #0
 800357a:	6078      	str	r0, [r7, #4]
 800357c:	460b      	mov	r3, r1
 800357e:	807b      	strh	r3, [r7, #2]
 8003580:	2300      	movs	r3, #0
 8003582:	81fb      	strh	r3, [r7, #14]
 8003584:	2300      	movs	r3, #0
 8003586:	81bb      	strh	r3, [r7, #12]
 8003588:	887b      	ldrh	r3, [r7, #2]
 800358a:	0a1b      	lsrs	r3, r3, #8
 800358c:	81fb      	strh	r3, [r7, #14]
 800358e:	89fb      	ldrh	r3, [r7, #14]
 8003590:	2201      	movs	r2, #1
 8003592:	fa02 f303 	lsl.w	r3, r2, r3
 8003596:	81bb      	strh	r3, [r7, #12]
 8003598:	89bb      	ldrh	r3, [r7, #12]
 800359a:	43db      	mvns	r3, r3
 800359c:	b29a      	uxth	r2, r3
 800359e:	687b      	ldr	r3, [r7, #4]
 80035a0:	801a      	strh	r2, [r3, #0]
 80035a2:	bf00      	nop
 80035a4:	3714      	adds	r7, #20
 80035a6:	46bd      	mov	sp, r7
 80035a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035ac:	4770      	bx	lr

080035ae <ucg_clip_is_x_visible>:
 80035ae:	b480      	push	{r7}
 80035b0:	b085      	sub	sp, #20
 80035b2:	af00      	add	r7, sp, #0
 80035b4:	6078      	str	r0, [r7, #4]
 80035b6:	687b      	ldr	r3, [r7, #4]
 80035b8:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 80035ba:	81fb      	strh	r3, [r7, #14]
 80035bc:	89fa      	ldrh	r2, [r7, #14]
 80035be:	687b      	ldr	r3, [r7, #4]
 80035c0:	f9b3 3070 	ldrsh.w	r3, [r3, #112]	; 0x70
 80035c4:	b29b      	uxth	r3, r3
 80035c6:	1ad3      	subs	r3, r2, r3
 80035c8:	b29b      	uxth	r3, r3
 80035ca:	81fb      	strh	r3, [r7, #14]
 80035cc:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80035d0:	2b00      	cmp	r3, #0
 80035d2:	da01      	bge.n	80035d8 <ucg_clip_is_x_visible+0x2a>
 80035d4:	2300      	movs	r3, #0
 80035d6:	e009      	b.n	80035ec <ucg_clip_is_x_visible+0x3e>
 80035d8:	687b      	ldr	r3, [r7, #4]
 80035da:	f9b3 3074 	ldrsh.w	r3, [r3, #116]	; 0x74
 80035de:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 80035e2:	429a      	cmp	r2, r3
 80035e4:	db01      	blt.n	80035ea <ucg_clip_is_x_visible+0x3c>
 80035e6:	2300      	movs	r3, #0
 80035e8:	e000      	b.n	80035ec <ucg_clip_is_x_visible+0x3e>
 80035ea:	2301      	movs	r3, #1
 80035ec:	4618      	mov	r0, r3
 80035ee:	3714      	adds	r7, #20
 80035f0:	46bd      	mov	sp, r7
 80035f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035f6:	4770      	bx	lr

080035f8 <ucg_clip_is_y_visible>:
 80035f8:	b480      	push	{r7}
 80035fa:	b085      	sub	sp, #20
 80035fc:	af00      	add	r7, sp, #0
 80035fe:	6078      	str	r0, [r7, #4]
 8003600:	687b      	ldr	r3, [r7, #4]
 8003602:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8003604:	81fb      	strh	r3, [r7, #14]
 8003606:	89fa      	ldrh	r2, [r7, #14]
 8003608:	687b      	ldr	r3, [r7, #4]
 800360a:	f9b3 3072 	ldrsh.w	r3, [r3, #114]	; 0x72
 800360e:	b29b      	uxth	r3, r3
 8003610:	1ad3      	subs	r3, r2, r3
 8003612:	b29b      	uxth	r3, r3
 8003614:	81fb      	strh	r3, [r7, #14]
 8003616:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800361a:	2b00      	cmp	r3, #0
 800361c:	da01      	bge.n	8003622 <ucg_clip_is_y_visible+0x2a>
 800361e:	2300      	movs	r3, #0
 8003620:	e009      	b.n	8003636 <ucg_clip_is_y_visible+0x3e>
 8003622:	687b      	ldr	r3, [r7, #4]
 8003624:	f9b3 3076 	ldrsh.w	r3, [r3, #118]	; 0x76
 8003628:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 800362c:	429a      	cmp	r2, r3
 800362e:	db01      	blt.n	8003634 <ucg_clip_is_y_visible+0x3c>
 8003630:	2300      	movs	r3, #0
 8003632:	e000      	b.n	8003636 <ucg_clip_is_y_visible+0x3e>
 8003634:	2301      	movs	r3, #1
 8003636:	4618      	mov	r0, r3
 8003638:	3714      	adds	r7, #20
 800363a:	46bd      	mov	sp, r7
 800363c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003640:	4770      	bx	lr

08003642 <ucg_clip_intersection>:
 8003642:	b480      	push	{r7}
 8003644:	b087      	sub	sp, #28
 8003646:	af00      	add	r7, sp, #0
 8003648:	60f8      	str	r0, [r7, #12]
 800364a:	60b9      	str	r1, [r7, #8]
 800364c:	4611      	mov	r1, r2
 800364e:	461a      	mov	r2, r3
 8003650:	460b      	mov	r3, r1
 8003652:	80fb      	strh	r3, [r7, #6]
 8003654:	4613      	mov	r3, r2
 8003656:	80bb      	strh	r3, [r7, #4]
 8003658:	68fb      	ldr	r3, [r7, #12]
 800365a:	881b      	ldrh	r3, [r3, #0]
 800365c:	82fb      	strh	r3, [r7, #22]
 800365e:	68bb      	ldr	r3, [r7, #8]
 8003660:	881b      	ldrh	r3, [r3, #0]
 8003662:	82bb      	strh	r3, [r7, #20]
 8003664:	f9b7 2016 	ldrsh.w	r2, [r7, #22]
 8003668:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 800366c:	429a      	cmp	r2, r3
 800366e:	db01      	blt.n	8003674 <ucg_clip_intersection+0x32>
 8003670:	2300      	movs	r3, #0
 8003672:	e01a      	b.n	80036aa <ucg_clip_intersection+0x68>
 8003674:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 8003678:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800367c:	429a      	cmp	r2, r3
 800367e:	dc01      	bgt.n	8003684 <ucg_clip_intersection+0x42>
 8003680:	2300      	movs	r3, #0
 8003682:	e012      	b.n	80036aa <ucg_clip_intersection+0x68>
 8003684:	f9b7 2016 	ldrsh.w	r2, [r7, #22]
 8003688:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800368c:	429a      	cmp	r2, r3
 800368e:	da02      	bge.n	8003696 <ucg_clip_intersection+0x54>
 8003690:	68fb      	ldr	r3, [r7, #12]
 8003692:	88fa      	ldrh	r2, [r7, #6]
 8003694:	801a      	strh	r2, [r3, #0]
 8003696:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 800369a:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 800369e:	429a      	cmp	r2, r3
 80036a0:	dd02      	ble.n	80036a8 <ucg_clip_intersection+0x66>
 80036a2:	68bb      	ldr	r3, [r7, #8]
 80036a4:	88ba      	ldrh	r2, [r7, #4]
 80036a6:	801a      	strh	r2, [r3, #0]
 80036a8:	2301      	movs	r3, #1
 80036aa:	4618      	mov	r0, r3
 80036ac:	371c      	adds	r7, #28
 80036ae:	46bd      	mov	sp, r7
 80036b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036b4:	4770      	bx	lr

080036b6 <ucg_clip_is_pixel_visible>:
 80036b6:	b580      	push	{r7, lr}
 80036b8:	b082      	sub	sp, #8
 80036ba:	af00      	add	r7, sp, #0
 80036bc:	6078      	str	r0, [r7, #4]
 80036be:	6878      	ldr	r0, [r7, #4]
 80036c0:	f7ff ff75 	bl	80035ae <ucg_clip_is_x_visible>
 80036c4:	4603      	mov	r3, r0
 80036c6:	2b00      	cmp	r3, #0
 80036c8:	d101      	bne.n	80036ce <ucg_clip_is_pixel_visible+0x18>
 80036ca:	2300      	movs	r3, #0
 80036cc:	e008      	b.n	80036e0 <ucg_clip_is_pixel_visible+0x2a>
 80036ce:	6878      	ldr	r0, [r7, #4]
 80036d0:	f7ff ff92 	bl	80035f8 <ucg_clip_is_y_visible>
 80036d4:	4603      	mov	r3, r0
 80036d6:	2b00      	cmp	r3, #0
 80036d8:	d101      	bne.n	80036de <ucg_clip_is_pixel_visible+0x28>
 80036da:	2300      	movs	r3, #0
 80036dc:	e000      	b.n	80036e0 <ucg_clip_is_pixel_visible+0x2a>
 80036de:	2301      	movs	r3, #1
 80036e0:	4618      	mov	r0, r3
 80036e2:	3708      	adds	r7, #8
 80036e4:	46bd      	mov	sp, r7
 80036e6:	bd80      	pop	{r7, pc}

080036e8 <ucg_clip_l90fx>:
 80036e8:	b590      	push	{r4, r7, lr}
 80036ea:	b085      	sub	sp, #20
 80036ec:	af00      	add	r7, sp, #0
 80036ee:	6078      	str	r0, [r7, #4]
 80036f0:	687b      	ldr	r3, [r7, #4]
 80036f2:	2200      	movs	r2, #0
 80036f4:	861a      	strh	r2, [r3, #48]	; 0x30
 80036f6:	687b      	ldr	r3, [r7, #4]
 80036f8:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 80036fc:	2b03      	cmp	r3, #3
 80036fe:	f200 816d 	bhi.w	80039dc <ucg_clip_l90fx+0x2f4>
 8003702:	a201      	add	r2, pc, #4	; (adr r2, 8003708 <ucg_clip_l90fx+0x20>)
 8003704:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003708:	08003719 	.word	0x08003719
 800370c:	080037bf 	.word	0x080037bf
 8003710:	08003865 	.word	0x08003865
 8003714:	08003921 	.word	0x08003921
 8003718:	6878      	ldr	r0, [r7, #4]
 800371a:	f7ff ff6d 	bl	80035f8 <ucg_clip_is_y_visible>
 800371e:	4603      	mov	r3, r0
 8003720:	2b00      	cmp	r3, #0
 8003722:	d101      	bne.n	8003728 <ucg_clip_l90fx+0x40>
 8003724:	2300      	movs	r3, #0
 8003726:	e15a      	b.n	80039de <ucg_clip_l90fx+0x2f6>
 8003728:	687b      	ldr	r3, [r7, #4]
 800372a:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 800372e:	81fb      	strh	r3, [r7, #14]
 8003730:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003734:	81bb      	strh	r3, [r7, #12]
 8003736:	687b      	ldr	r3, [r7, #4]
 8003738:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 800373c:	b29a      	uxth	r2, r3
 800373e:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003742:	b29b      	uxth	r3, r3
 8003744:	4413      	add	r3, r2
 8003746:	b29b      	uxth	r3, r3
 8003748:	b21b      	sxth	r3, r3
 800374a:	81bb      	strh	r3, [r7, #12]
 800374c:	687b      	ldr	r3, [r7, #4]
 800374e:	f9b3 4070 	ldrsh.w	r4, [r3, #112]	; 0x70
 8003752:	687b      	ldr	r3, [r7, #4]
 8003754:	f9b3 3070 	ldrsh.w	r3, [r3, #112]	; 0x70
 8003758:	b29a      	uxth	r2, r3
 800375a:	687b      	ldr	r3, [r7, #4]
 800375c:	f9b3 3074 	ldrsh.w	r3, [r3, #116]	; 0x74
 8003760:	b29b      	uxth	r3, r3
 8003762:	4413      	add	r3, r2
 8003764:	b29b      	uxth	r3, r3
 8003766:	b21b      	sxth	r3, r3
 8003768:	f107 010c 	add.w	r1, r7, #12
 800376c:	f107 000e 	add.w	r0, r7, #14
 8003770:	4622      	mov	r2, r4
 8003772:	f7ff ff66 	bl	8003642 <ucg_clip_intersection>
 8003776:	4603      	mov	r3, r0
 8003778:	2b00      	cmp	r3, #0
 800377a:	d101      	bne.n	8003780 <ucg_clip_l90fx+0x98>
 800377c:	2300      	movs	r3, #0
 800377e:	e12e      	b.n	80039de <ucg_clip_l90fx+0x2f6>
 8003780:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003784:	b29a      	uxth	r2, r3
 8003786:	687b      	ldr	r3, [r7, #4]
 8003788:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 800378c:	b29b      	uxth	r3, r3
 800378e:	1ad3      	subs	r3, r2, r3
 8003790:	b29b      	uxth	r3, r3
 8003792:	b21a      	sxth	r2, r3
 8003794:	687b      	ldr	r3, [r7, #4]
 8003796:	861a      	strh	r2, [r3, #48]	; 0x30
 8003798:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 800379c:	687b      	ldr	r3, [r7, #4]
 800379e:	849a      	strh	r2, [r3, #36]	; 0x24
 80037a0:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80037a4:	b29a      	uxth	r2, r3
 80037a6:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80037aa:	b29b      	uxth	r3, r3
 80037ac:	1ad3      	subs	r3, r2, r3
 80037ae:	b29b      	uxth	r3, r3
 80037b0:	b21b      	sxth	r3, r3
 80037b2:	81bb      	strh	r3, [r7, #12]
 80037b4:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 80037b8:	687b      	ldr	r3, [r7, #4]
 80037ba:	859a      	strh	r2, [r3, #44]	; 0x2c
 80037bc:	e10e      	b.n	80039dc <ucg_clip_l90fx+0x2f4>
 80037be:	6878      	ldr	r0, [r7, #4]
 80037c0:	f7ff fef5 	bl	80035ae <ucg_clip_is_x_visible>
 80037c4:	4603      	mov	r3, r0
 80037c6:	2b00      	cmp	r3, #0
 80037c8:	d101      	bne.n	80037ce <ucg_clip_l90fx+0xe6>
 80037ca:	2300      	movs	r3, #0
 80037cc:	e107      	b.n	80039de <ucg_clip_l90fx+0x2f6>
 80037ce:	687b      	ldr	r3, [r7, #4]
 80037d0:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 80037d4:	81fb      	strh	r3, [r7, #14]
 80037d6:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80037da:	81bb      	strh	r3, [r7, #12]
 80037dc:	687b      	ldr	r3, [r7, #4]
 80037de:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 80037e2:	b29a      	uxth	r2, r3
 80037e4:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80037e8:	b29b      	uxth	r3, r3
 80037ea:	4413      	add	r3, r2
 80037ec:	b29b      	uxth	r3, r3
 80037ee:	b21b      	sxth	r3, r3
 80037f0:	81bb      	strh	r3, [r7, #12]
 80037f2:	687b      	ldr	r3, [r7, #4]
 80037f4:	f9b3 4072 	ldrsh.w	r4, [r3, #114]	; 0x72
 80037f8:	687b      	ldr	r3, [r7, #4]
 80037fa:	f9b3 3072 	ldrsh.w	r3, [r3, #114]	; 0x72
 80037fe:	b29a      	uxth	r2, r3
 8003800:	687b      	ldr	r3, [r7, #4]
 8003802:	f9b3 3076 	ldrsh.w	r3, [r3, #118]	; 0x76
 8003806:	b29b      	uxth	r3, r3
 8003808:	4413      	add	r3, r2
 800380a:	b29b      	uxth	r3, r3
 800380c:	b21b      	sxth	r3, r3
 800380e:	f107 010c 	add.w	r1, r7, #12
 8003812:	f107 000e 	add.w	r0, r7, #14
 8003816:	4622      	mov	r2, r4
 8003818:	f7ff ff13 	bl	8003642 <ucg_clip_intersection>
 800381c:	4603      	mov	r3, r0
 800381e:	2b00      	cmp	r3, #0
 8003820:	d101      	bne.n	8003826 <ucg_clip_l90fx+0x13e>
 8003822:	2300      	movs	r3, #0
 8003824:	e0db      	b.n	80039de <ucg_clip_l90fx+0x2f6>
 8003826:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800382a:	b29a      	uxth	r2, r3
 800382c:	687b      	ldr	r3, [r7, #4]
 800382e:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 8003832:	b29b      	uxth	r3, r3
 8003834:	1ad3      	subs	r3, r2, r3
 8003836:	b29b      	uxth	r3, r3
 8003838:	b21a      	sxth	r2, r3
 800383a:	687b      	ldr	r3, [r7, #4]
 800383c:	861a      	strh	r2, [r3, #48]	; 0x30
 800383e:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8003842:	687b      	ldr	r3, [r7, #4]
 8003844:	84da      	strh	r2, [r3, #38]	; 0x26
 8003846:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800384a:	b29a      	uxth	r2, r3
 800384c:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003850:	b29b      	uxth	r3, r3
 8003852:	1ad3      	subs	r3, r2, r3
 8003854:	b29b      	uxth	r3, r3
 8003856:	b21b      	sxth	r3, r3
 8003858:	81bb      	strh	r3, [r7, #12]
 800385a:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 800385e:	687b      	ldr	r3, [r7, #4]
 8003860:	859a      	strh	r2, [r3, #44]	; 0x2c
 8003862:	e0bb      	b.n	80039dc <ucg_clip_l90fx+0x2f4>
 8003864:	6878      	ldr	r0, [r7, #4]
 8003866:	f7ff fec7 	bl	80035f8 <ucg_clip_is_y_visible>
 800386a:	4603      	mov	r3, r0
 800386c:	2b00      	cmp	r3, #0
 800386e:	d101      	bne.n	8003874 <ucg_clip_l90fx+0x18c>
 8003870:	2300      	movs	r3, #0
 8003872:	e0b4      	b.n	80039de <ucg_clip_l90fx+0x2f6>
 8003874:	687b      	ldr	r3, [r7, #4]
 8003876:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 800387a:	81bb      	strh	r3, [r7, #12]
 800387c:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003880:	b29b      	uxth	r3, r3
 8003882:	3301      	adds	r3, #1
 8003884:	b29b      	uxth	r3, r3
 8003886:	b21b      	sxth	r3, r3
 8003888:	81bb      	strh	r3, [r7, #12]
 800388a:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800388e:	81fb      	strh	r3, [r7, #14]
 8003890:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003894:	b29a      	uxth	r2, r3
 8003896:	687b      	ldr	r3, [r7, #4]
 8003898:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 800389c:	b29b      	uxth	r3, r3
 800389e:	1ad3      	subs	r3, r2, r3
 80038a0:	b29b      	uxth	r3, r3
 80038a2:	b21b      	sxth	r3, r3
 80038a4:	81fb      	strh	r3, [r7, #14]
 80038a6:	687b      	ldr	r3, [r7, #4]
 80038a8:	f9b3 4070 	ldrsh.w	r4, [r3, #112]	; 0x70
 80038ac:	687b      	ldr	r3, [r7, #4]
 80038ae:	f9b3 3070 	ldrsh.w	r3, [r3, #112]	; 0x70
 80038b2:	b29a      	uxth	r2, r3
 80038b4:	687b      	ldr	r3, [r7, #4]
 80038b6:	f9b3 3074 	ldrsh.w	r3, [r3, #116]	; 0x74
 80038ba:	b29b      	uxth	r3, r3
 80038bc:	4413      	add	r3, r2
 80038be:	b29b      	uxth	r3, r3
 80038c0:	b21b      	sxth	r3, r3
 80038c2:	f107 010c 	add.w	r1, r7, #12
 80038c6:	f107 000e 	add.w	r0, r7, #14
 80038ca:	4622      	mov	r2, r4
 80038cc:	f7ff feb9 	bl	8003642 <ucg_clip_intersection>
 80038d0:	4603      	mov	r3, r0
 80038d2:	2b00      	cmp	r3, #0
 80038d4:	d101      	bne.n	80038da <ucg_clip_l90fx+0x1f2>
 80038d6:	2300      	movs	r3, #0
 80038d8:	e081      	b.n	80039de <ucg_clip_l90fx+0x2f6>
 80038da:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80038de:	b29a      	uxth	r2, r3
 80038e0:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80038e4:	b29b      	uxth	r3, r3
 80038e6:	1ad3      	subs	r3, r2, r3
 80038e8:	b29b      	uxth	r3, r3
 80038ea:	b21a      	sxth	r2, r3
 80038ec:	687b      	ldr	r3, [r7, #4]
 80038ee:	859a      	strh	r2, [r3, #44]	; 0x2c
 80038f0:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80038f4:	b29b      	uxth	r3, r3
 80038f6:	3b01      	subs	r3, #1
 80038f8:	b29b      	uxth	r3, r3
 80038fa:	b21b      	sxth	r3, r3
 80038fc:	81bb      	strh	r3, [r7, #12]
 80038fe:	687b      	ldr	r3, [r7, #4]
 8003900:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 8003904:	b29a      	uxth	r2, r3
 8003906:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800390a:	b29b      	uxth	r3, r3
 800390c:	1ad3      	subs	r3, r2, r3
 800390e:	b29b      	uxth	r3, r3
 8003910:	b21a      	sxth	r2, r3
 8003912:	687b      	ldr	r3, [r7, #4]
 8003914:	861a      	strh	r2, [r3, #48]	; 0x30
 8003916:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 800391a:	687b      	ldr	r3, [r7, #4]
 800391c:	849a      	strh	r2, [r3, #36]	; 0x24
 800391e:	e05d      	b.n	80039dc <ucg_clip_l90fx+0x2f4>
 8003920:	6878      	ldr	r0, [r7, #4]
 8003922:	f7ff fe44 	bl	80035ae <ucg_clip_is_x_visible>
 8003926:	4603      	mov	r3, r0
 8003928:	2b00      	cmp	r3, #0
 800392a:	d101      	bne.n	8003930 <ucg_clip_l90fx+0x248>
 800392c:	2300      	movs	r3, #0
 800392e:	e056      	b.n	80039de <ucg_clip_l90fx+0x2f6>
 8003930:	687b      	ldr	r3, [r7, #4]
 8003932:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 8003936:	81bb      	strh	r3, [r7, #12]
 8003938:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800393c:	b29b      	uxth	r3, r3
 800393e:	3301      	adds	r3, #1
 8003940:	b29b      	uxth	r3, r3
 8003942:	b21b      	sxth	r3, r3
 8003944:	81bb      	strh	r3, [r7, #12]
 8003946:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800394a:	81fb      	strh	r3, [r7, #14]
 800394c:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003950:	b29a      	uxth	r2, r3
 8003952:	687b      	ldr	r3, [r7, #4]
 8003954:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 8003958:	b29b      	uxth	r3, r3
 800395a:	1ad3      	subs	r3, r2, r3
 800395c:	b29b      	uxth	r3, r3
 800395e:	b21b      	sxth	r3, r3
 8003960:	81fb      	strh	r3, [r7, #14]
 8003962:	687b      	ldr	r3, [r7, #4]
 8003964:	f9b3 4072 	ldrsh.w	r4, [r3, #114]	; 0x72
 8003968:	687b      	ldr	r3, [r7, #4]
 800396a:	f9b3 3072 	ldrsh.w	r3, [r3, #114]	; 0x72
 800396e:	b29a      	uxth	r2, r3
 8003970:	687b      	ldr	r3, [r7, #4]
 8003972:	f9b3 3076 	ldrsh.w	r3, [r3, #118]	; 0x76
 8003976:	b29b      	uxth	r3, r3
 8003978:	4413      	add	r3, r2
 800397a:	b29b      	uxth	r3, r3
 800397c:	b21b      	sxth	r3, r3
 800397e:	f107 010c 	add.w	r1, r7, #12
 8003982:	f107 000e 	add.w	r0, r7, #14
 8003986:	4622      	mov	r2, r4
 8003988:	f7ff fe5b 	bl	8003642 <ucg_clip_intersection>
 800398c:	4603      	mov	r3, r0
 800398e:	2b00      	cmp	r3, #0
 8003990:	d101      	bne.n	8003996 <ucg_clip_l90fx+0x2ae>
 8003992:	2300      	movs	r3, #0
 8003994:	e023      	b.n	80039de <ucg_clip_l90fx+0x2f6>
 8003996:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800399a:	b29a      	uxth	r2, r3
 800399c:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80039a0:	b29b      	uxth	r3, r3
 80039a2:	1ad3      	subs	r3, r2, r3
 80039a4:	b29b      	uxth	r3, r3
 80039a6:	b21a      	sxth	r2, r3
 80039a8:	687b      	ldr	r3, [r7, #4]
 80039aa:	859a      	strh	r2, [r3, #44]	; 0x2c
 80039ac:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80039b0:	b29b      	uxth	r3, r3
 80039b2:	3b01      	subs	r3, #1
 80039b4:	b29b      	uxth	r3, r3
 80039b6:	b21b      	sxth	r3, r3
 80039b8:	81bb      	strh	r3, [r7, #12]
 80039ba:	687b      	ldr	r3, [r7, #4]
 80039bc:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 80039c0:	b29a      	uxth	r2, r3
 80039c2:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80039c6:	b29b      	uxth	r3, r3
 80039c8:	1ad3      	subs	r3, r2, r3
 80039ca:	b29b      	uxth	r3, r3
 80039cc:	b21a      	sxth	r2, r3
 80039ce:	687b      	ldr	r3, [r7, #4]
 80039d0:	861a      	strh	r2, [r3, #48]	; 0x30
 80039d2:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 80039d6:	687b      	ldr	r3, [r7, #4]
 80039d8:	84da      	strh	r2, [r3, #38]	; 0x26
 80039da:	bf00      	nop
 80039dc:	2301      	movs	r3, #1
 80039de:	4618      	mov	r0, r3
 80039e0:	3714      	adds	r7, #20
 80039e2:	46bd      	mov	sp, r7
 80039e4:	bd90      	pop	{r4, r7, pc}
 80039e6:	bf00      	nop

080039e8 <ucg_clip_l90se>:
 80039e8:	b580      	push	{r7, lr}
 80039ea:	b084      	sub	sp, #16
 80039ec:	af00      	add	r7, sp, #0
 80039ee:	6078      	str	r0, [r7, #4]
 80039f0:	6878      	ldr	r0, [r7, #4]
 80039f2:	f7ff fe79 	bl	80036e8 <ucg_clip_l90fx>
 80039f6:	4603      	mov	r3, r0
 80039f8:	2b00      	cmp	r3, #0
 80039fa:	d101      	bne.n	8003a00 <ucg_clip_l90se+0x18>
 80039fc:	2300      	movs	r3, #0
 80039fe:	e019      	b.n	8003a34 <ucg_clip_l90se+0x4c>
 8003a00:	2300      	movs	r3, #0
 8003a02:	73fb      	strb	r3, [r7, #15]
 8003a04:	e012      	b.n	8003a2c <ucg_clip_l90se+0x44>
 8003a06:	687b      	ldr	r3, [r7, #4]
 8003a08:	f103 0146 	add.w	r1, r3, #70	; 0x46
 8003a0c:	7bfa      	ldrb	r2, [r7, #15]
 8003a0e:	4613      	mov	r3, r2
 8003a10:	00db      	lsls	r3, r3, #3
 8003a12:	1a9b      	subs	r3, r3, r2
 8003a14:	005b      	lsls	r3, r3, #1
 8003a16:	18ca      	adds	r2, r1, r3
 8003a18:	687b      	ldr	r3, [r7, #4]
 8003a1a:	f9b3 3030 	ldrsh.w	r3, [r3, #48]	; 0x30
 8003a1e:	4619      	mov	r1, r3
 8003a20:	4610      	mov	r0, r2
 8003a22:	f7fe f9e8 	bl	8001df6 <ucg_ccs_seek>
 8003a26:	7bfb      	ldrb	r3, [r7, #15]
 8003a28:	3301      	adds	r3, #1
 8003a2a:	73fb      	strb	r3, [r7, #15]
 8003a2c:	7bfb      	ldrb	r3, [r7, #15]
 8003a2e:	2b02      	cmp	r3, #2
 8003a30:	d9e9      	bls.n	8003a06 <ucg_clip_l90se+0x1e>
 8003a32:	2301      	movs	r3, #1
 8003a34:	4618      	mov	r0, r3
 8003a36:	3710      	adds	r7, #16
 8003a38:	46bd      	mov	sp, r7
 8003a3a:	bd80      	pop	{r7, pc}

08003a3c <ucg_com_PowerDown>:
 8003a3c:	b590      	push	{r4, r7, lr}
 8003a3e:	b083      	sub	sp, #12
 8003a40:	af00      	add	r7, sp, #0
 8003a42:	6078      	str	r0, [r7, #4]
 8003a44:	687b      	ldr	r3, [r7, #4]
 8003a46:	f893 30af 	ldrb.w	r3, [r3, #175]	; 0xaf
 8003a4a:	f003 0308 	and.w	r3, r3, #8
 8003a4e:	2b00      	cmp	r3, #0
 8003a50:	d006      	beq.n	8003a60 <ucg_com_PowerDown+0x24>
 8003a52:	687b      	ldr	r3, [r7, #4]
 8003a54:	69dc      	ldr	r4, [r3, #28]
 8003a56:	2300      	movs	r3, #0
 8003a58:	2200      	movs	r2, #0
 8003a5a:	210b      	movs	r1, #11
 8003a5c:	6878      	ldr	r0, [r7, #4]
 8003a5e:	47a0      	blx	r4
 8003a60:	687b      	ldr	r3, [r7, #4]
 8003a62:	f893 30af 	ldrb.w	r3, [r3, #175]	; 0xaf
 8003a66:	f023 0308 	bic.w	r3, r3, #8
 8003a6a:	b2da      	uxtb	r2, r3
 8003a6c:	687b      	ldr	r3, [r7, #4]
 8003a6e:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 8003a72:	bf00      	nop
 8003a74:	370c      	adds	r7, #12
 8003a76:	46bd      	mov	sp, r7
 8003a78:	bd90      	pop	{r4, r7, pc}

08003a7a <ucg_com_PowerUp>:
 8003a7a:	b590      	push	{r4, r7, lr}
 8003a7c:	b085      	sub	sp, #20
 8003a7e:	af00      	add	r7, sp, #0
 8003a80:	6078      	str	r0, [r7, #4]
 8003a82:	460b      	mov	r3, r1
 8003a84:	807b      	strh	r3, [r7, #2]
 8003a86:	4613      	mov	r3, r2
 8003a88:	803b      	strh	r3, [r7, #0]
 8003a8a:	887b      	ldrh	r3, [r7, #2]
 8003a8c:	813b      	strh	r3, [r7, #8]
 8003a8e:	883b      	ldrh	r3, [r7, #0]
 8003a90:	817b      	strh	r3, [r7, #10]
 8003a92:	6878      	ldr	r0, [r7, #4]
 8003a94:	f7ff ffd2 	bl	8003a3c <ucg_com_PowerDown>
 8003a98:	687b      	ldr	r3, [r7, #4]
 8003a9a:	2200      	movs	r2, #0
 8003a9c:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 8003aa0:	687b      	ldr	r3, [r7, #4]
 8003aa2:	69dc      	ldr	r4, [r3, #28]
 8003aa4:	f107 0308 	add.w	r3, r7, #8
 8003aa8:	2200      	movs	r2, #0
 8003aaa:	210a      	movs	r1, #10
 8003aac:	6878      	ldr	r0, [r7, #4]
 8003aae:	47a0      	blx	r4
 8003ab0:	4603      	mov	r3, r0
 8003ab2:	81fb      	strh	r3, [r7, #14]
 8003ab4:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003ab8:	2b00      	cmp	r3, #0
 8003aba:	d008      	beq.n	8003ace <ucg_com_PowerUp+0x54>
 8003abc:	687b      	ldr	r3, [r7, #4]
 8003abe:	f893 30af 	ldrb.w	r3, [r3, #175]	; 0xaf
 8003ac2:	f043 0308 	orr.w	r3, r3, #8
 8003ac6:	b2da      	uxtb	r2, r3
 8003ac8:	687b      	ldr	r3, [r7, #4]
 8003aca:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 8003ace:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003ad2:	4618      	mov	r0, r3
 8003ad4:	3714      	adds	r7, #20
 8003ad6:	46bd      	mov	sp, r7
 8003ad8:	bd90      	pop	{r4, r7, pc}

08003ada <ucg_com_SetLineStatus>:
 8003ada:	b590      	push	{r4, r7, lr}
 8003adc:	b083      	sub	sp, #12
 8003ade:	af00      	add	r7, sp, #0
 8003ae0:	6078      	str	r0, [r7, #4]
 8003ae2:	4608      	mov	r0, r1
 8003ae4:	4611      	mov	r1, r2
 8003ae6:	461a      	mov	r2, r3
 8003ae8:	4603      	mov	r3, r0
 8003aea:	70fb      	strb	r3, [r7, #3]
 8003aec:	460b      	mov	r3, r1
 8003aee:	70bb      	strb	r3, [r7, #2]
 8003af0:	4613      	mov	r3, r2
 8003af2:	707b      	strb	r3, [r7, #1]
 8003af4:	78fb      	ldrb	r3, [r7, #3]
 8003af6:	2b00      	cmp	r3, #0
 8003af8:	d131      	bne.n	8003b5e <ucg_com_SetLineStatus+0x84>
 8003afa:	687b      	ldr	r3, [r7, #4]
 8003afc:	f893 20ae 	ldrb.w	r2, [r3, #174]	; 0xae
 8003b00:	78bb      	ldrb	r3, [r7, #2]
 8003b02:	4013      	ands	r3, r2
 8003b04:	b2db      	uxtb	r3, r3
 8003b06:	2b00      	cmp	r3, #0
 8003b08:	d008      	beq.n	8003b1c <ucg_com_SetLineStatus+0x42>
 8003b0a:	687b      	ldr	r3, [r7, #4]
 8003b0c:	f893 20af 	ldrb.w	r2, [r3, #175]	; 0xaf
 8003b10:	78bb      	ldrb	r3, [r7, #2]
 8003b12:	4013      	ands	r3, r2
 8003b14:	b2db      	uxtb	r3, r3
 8003b16:	78ba      	ldrb	r2, [r7, #2]
 8003b18:	429a      	cmp	r2, r3
 8003b1a:	d14b      	bne.n	8003bb4 <ucg_com_SetLineStatus+0xda>
 8003b1c:	687b      	ldr	r3, [r7, #4]
 8003b1e:	69dc      	ldr	r4, [r3, #28]
 8003b20:	787b      	ldrb	r3, [r7, #1]
 8003b22:	b219      	sxth	r1, r3
 8003b24:	78fb      	ldrb	r3, [r7, #3]
 8003b26:	b29a      	uxth	r2, r3
 8003b28:	2300      	movs	r3, #0
 8003b2a:	6878      	ldr	r0, [r7, #4]
 8003b2c:	47a0      	blx	r4
 8003b2e:	687b      	ldr	r3, [r7, #4]
 8003b30:	f893 30af 	ldrb.w	r3, [r3, #175]	; 0xaf
 8003b34:	b25a      	sxtb	r2, r3
 8003b36:	f997 3002 	ldrsb.w	r3, [r7, #2]
 8003b3a:	43db      	mvns	r3, r3
 8003b3c:	b25b      	sxtb	r3, r3
 8003b3e:	4013      	ands	r3, r2
 8003b40:	b25b      	sxtb	r3, r3
 8003b42:	b2da      	uxtb	r2, r3
 8003b44:	687b      	ldr	r3, [r7, #4]
 8003b46:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 8003b4a:	687b      	ldr	r3, [r7, #4]
 8003b4c:	f893 20ae 	ldrb.w	r2, [r3, #174]	; 0xae
 8003b50:	78bb      	ldrb	r3, [r7, #2]
 8003b52:	4313      	orrs	r3, r2
 8003b54:	b2da      	uxtb	r2, r3
 8003b56:	687b      	ldr	r3, [r7, #4]
 8003b58:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 8003b5c:	e02a      	b.n	8003bb4 <ucg_com_SetLineStatus+0xda>
 8003b5e:	687b      	ldr	r3, [r7, #4]
 8003b60:	f893 20ae 	ldrb.w	r2, [r3, #174]	; 0xae
 8003b64:	78bb      	ldrb	r3, [r7, #2]
 8003b66:	4013      	ands	r3, r2
 8003b68:	b2db      	uxtb	r3, r3
 8003b6a:	2b00      	cmp	r3, #0
 8003b6c:	d007      	beq.n	8003b7e <ucg_com_SetLineStatus+0xa4>
 8003b6e:	687b      	ldr	r3, [r7, #4]
 8003b70:	f893 20af 	ldrb.w	r2, [r3, #175]	; 0xaf
 8003b74:	78bb      	ldrb	r3, [r7, #2]
 8003b76:	4013      	ands	r3, r2
 8003b78:	b2db      	uxtb	r3, r3
 8003b7a:	2b00      	cmp	r3, #0
 8003b7c:	d11a      	bne.n	8003bb4 <ucg_com_SetLineStatus+0xda>
 8003b7e:	687b      	ldr	r3, [r7, #4]
 8003b80:	69dc      	ldr	r4, [r3, #28]
 8003b82:	787b      	ldrb	r3, [r7, #1]
 8003b84:	b219      	sxth	r1, r3
 8003b86:	78fb      	ldrb	r3, [r7, #3]
 8003b88:	b29a      	uxth	r2, r3
 8003b8a:	2300      	movs	r3, #0
 8003b8c:	6878      	ldr	r0, [r7, #4]
 8003b8e:	47a0      	blx	r4
 8003b90:	687b      	ldr	r3, [r7, #4]
 8003b92:	f893 20af 	ldrb.w	r2, [r3, #175]	; 0xaf
 8003b96:	78bb      	ldrb	r3, [r7, #2]
 8003b98:	4313      	orrs	r3, r2
 8003b9a:	b2da      	uxtb	r2, r3
 8003b9c:	687b      	ldr	r3, [r7, #4]
 8003b9e:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 8003ba2:	687b      	ldr	r3, [r7, #4]
 8003ba4:	f893 20ae 	ldrb.w	r2, [r3, #174]	; 0xae
 8003ba8:	78bb      	ldrb	r3, [r7, #2]
 8003baa:	4313      	orrs	r3, r2
 8003bac:	b2da      	uxtb	r2, r3
 8003bae:	687b      	ldr	r3, [r7, #4]
 8003bb0:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 8003bb4:	bf00      	nop
 8003bb6:	370c      	adds	r7, #12
 8003bb8:	46bd      	mov	sp, r7
 8003bba:	bd90      	pop	{r4, r7, pc}

08003bbc <ucg_com_SetResetLineStatus>:
 8003bbc:	b580      	push	{r7, lr}
 8003bbe:	b082      	sub	sp, #8
 8003bc0:	af00      	add	r7, sp, #0
 8003bc2:	6078      	str	r0, [r7, #4]
 8003bc4:	460b      	mov	r3, r1
 8003bc6:	70fb      	strb	r3, [r7, #3]
 8003bc8:	78f9      	ldrb	r1, [r7, #3]
 8003bca:	230d      	movs	r3, #13
 8003bcc:	2204      	movs	r2, #4
 8003bce:	6878      	ldr	r0, [r7, #4]
 8003bd0:	f7ff ff83 	bl	8003ada <ucg_com_SetLineStatus>
 8003bd4:	bf00      	nop
 8003bd6:	3708      	adds	r7, #8
 8003bd8:	46bd      	mov	sp, r7
 8003bda:	bd80      	pop	{r7, pc}

08003bdc <ucg_com_SetCSLineStatus>:
 8003bdc:	b580      	push	{r7, lr}
 8003bde:	b082      	sub	sp, #8
 8003be0:	af00      	add	r7, sp, #0
 8003be2:	6078      	str	r0, [r7, #4]
 8003be4:	460b      	mov	r3, r1
 8003be6:	70fb      	strb	r3, [r7, #3]
 8003be8:	78f9      	ldrb	r1, [r7, #3]
 8003bea:	230e      	movs	r3, #14
 8003bec:	2202      	movs	r2, #2
 8003bee:	6878      	ldr	r0, [r7, #4]
 8003bf0:	f7ff ff73 	bl	8003ada <ucg_com_SetLineStatus>
 8003bf4:	bf00      	nop
 8003bf6:	3708      	adds	r7, #8
 8003bf8:	46bd      	mov	sp, r7
 8003bfa:	bd80      	pop	{r7, pc}

08003bfc <ucg_com_SetCDLineStatus>:
 8003bfc:	b580      	push	{r7, lr}
 8003bfe:	b082      	sub	sp, #8
 8003c00:	af00      	add	r7, sp, #0
 8003c02:	6078      	str	r0, [r7, #4]
 8003c04:	460b      	mov	r3, r1
 8003c06:	70fb      	strb	r3, [r7, #3]
 8003c08:	78f9      	ldrb	r1, [r7, #3]
 8003c0a:	230f      	movs	r3, #15
 8003c0c:	2201      	movs	r2, #1
 8003c0e:	6878      	ldr	r0, [r7, #4]
 8003c10:	f7ff ff63 	bl	8003ada <ucg_com_SetLineStatus>
 8003c14:	bf00      	nop
 8003c16:	3708      	adds	r7, #8
 8003c18:	46bd      	mov	sp, r7
 8003c1a:	bd80      	pop	{r7, pc}

08003c1c <ucg_com_DelayMicroseconds>:
 8003c1c:	b590      	push	{r4, r7, lr}
 8003c1e:	b083      	sub	sp, #12
 8003c20:	af00      	add	r7, sp, #0
 8003c22:	6078      	str	r0, [r7, #4]
 8003c24:	460b      	mov	r3, r1
 8003c26:	807b      	strh	r3, [r7, #2]
 8003c28:	687b      	ldr	r3, [r7, #4]
 8003c2a:	69dc      	ldr	r4, [r3, #28]
 8003c2c:	887a      	ldrh	r2, [r7, #2]
 8003c2e:	2300      	movs	r3, #0
 8003c30:	210c      	movs	r1, #12
 8003c32:	6878      	ldr	r0, [r7, #4]
 8003c34:	47a0      	blx	r4
 8003c36:	bf00      	nop
 8003c38:	370c      	adds	r7, #12
 8003c3a:	46bd      	mov	sp, r7
 8003c3c:	bd90      	pop	{r4, r7, pc}

08003c3e <ucg_com_DelayMilliseconds>:
 8003c3e:	b580      	push	{r7, lr}
 8003c40:	b082      	sub	sp, #8
 8003c42:	af00      	add	r7, sp, #0
 8003c44:	6078      	str	r0, [r7, #4]
 8003c46:	460b      	mov	r3, r1
 8003c48:	807b      	strh	r3, [r7, #2]
 8003c4a:	e007      	b.n	8003c5c <ucg_com_DelayMilliseconds+0x1e>
 8003c4c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8003c50:	6878      	ldr	r0, [r7, #4]
 8003c52:	f7ff ffe3 	bl	8003c1c <ucg_com_DelayMicroseconds>
 8003c56:	887b      	ldrh	r3, [r7, #2]
 8003c58:	3b01      	subs	r3, #1
 8003c5a:	807b      	strh	r3, [r7, #2]
 8003c5c:	887b      	ldrh	r3, [r7, #2]
 8003c5e:	2b00      	cmp	r3, #0
 8003c60:	d1f4      	bne.n	8003c4c <ucg_com_DelayMilliseconds+0xe>
 8003c62:	bf00      	nop
 8003c64:	3708      	adds	r7, #8
 8003c66:	46bd      	mov	sp, r7
 8003c68:	bd80      	pop	{r7, pc}

08003c6a <ucg_com_SendByte>:
 8003c6a:	b590      	push	{r4, r7, lr}
 8003c6c:	b083      	sub	sp, #12
 8003c6e:	af00      	add	r7, sp, #0
 8003c70:	6078      	str	r0, [r7, #4]
 8003c72:	460b      	mov	r3, r1
 8003c74:	70fb      	strb	r3, [r7, #3]
 8003c76:	687b      	ldr	r3, [r7, #4]
 8003c78:	69dc      	ldr	r4, [r3, #28]
 8003c7a:	78fb      	ldrb	r3, [r7, #3]
 8003c7c:	b29a      	uxth	r2, r3
 8003c7e:	2300      	movs	r3, #0
 8003c80:	2110      	movs	r1, #16
 8003c82:	6878      	ldr	r0, [r7, #4]
 8003c84:	47a0      	blx	r4
 8003c86:	bf00      	nop
 8003c88:	370c      	adds	r7, #12
 8003c8a:	46bd      	mov	sp, r7
 8003c8c:	bd90      	pop	{r4, r7, pc}

08003c8e <ucg_com_SendStringP>:
 8003c8e:	b590      	push	{r4, r7, lr}
 8003c90:	b087      	sub	sp, #28
 8003c92:	af00      	add	r7, sp, #0
 8003c94:	60f8      	str	r0, [r7, #12]
 8003c96:	460b      	mov	r3, r1
 8003c98:	607a      	str	r2, [r7, #4]
 8003c9a:	817b      	strh	r3, [r7, #10]
 8003c9c:	e010      	b.n	8003cc0 <ucg_com_SendStringP+0x32>
 8003c9e:	687b      	ldr	r3, [r7, #4]
 8003ca0:	781b      	ldrb	r3, [r3, #0]
 8003ca2:	75fb      	strb	r3, [r7, #23]
 8003ca4:	68fb      	ldr	r3, [r7, #12]
 8003ca6:	69dc      	ldr	r4, [r3, #28]
 8003ca8:	7dfb      	ldrb	r3, [r7, #23]
 8003caa:	b29a      	uxth	r2, r3
 8003cac:	2300      	movs	r3, #0
 8003cae:	2110      	movs	r1, #16
 8003cb0:	68f8      	ldr	r0, [r7, #12]
 8003cb2:	47a0      	blx	r4
 8003cb4:	687b      	ldr	r3, [r7, #4]
 8003cb6:	3301      	adds	r3, #1
 8003cb8:	607b      	str	r3, [r7, #4]
 8003cba:	897b      	ldrh	r3, [r7, #10]
 8003cbc:	3b01      	subs	r3, #1
 8003cbe:	817b      	strh	r3, [r7, #10]
 8003cc0:	897b      	ldrh	r3, [r7, #10]
 8003cc2:	2b00      	cmp	r3, #0
 8003cc4:	d1eb      	bne.n	8003c9e <ucg_com_SendStringP+0x10>
 8003cc6:	bf00      	nop
 8003cc8:	371c      	adds	r7, #28
 8003cca:	46bd      	mov	sp, r7
 8003ccc:	bd90      	pop	{r4, r7, pc}

08003cce <ucg_com_SendCmdArg>:
 8003cce:	b580      	push	{r7, lr}
 8003cd0:	b084      	sub	sp, #16
 8003cd2:	af00      	add	r7, sp, #0
 8003cd4:	60f8      	str	r0, [r7, #12]
 8003cd6:	60b9      	str	r1, [r7, #8]
 8003cd8:	4611      	mov	r1, r2
 8003cda:	461a      	mov	r2, r3
 8003cdc:	460b      	mov	r3, r1
 8003cde:	71fb      	strb	r3, [r7, #7]
 8003ce0:	4613      	mov	r3, r2
 8003ce2:	71bb      	strb	r3, [r7, #6]
 8003ce4:	68fb      	ldr	r3, [r7, #12]
 8003ce6:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 8003cea:	085b      	lsrs	r3, r3, #1
 8003cec:	b2db      	uxtb	r3, r3
 8003cee:	f003 0301 	and.w	r3, r3, #1
 8003cf2:	b2db      	uxtb	r3, r3
 8003cf4:	4619      	mov	r1, r3
 8003cf6:	68f8      	ldr	r0, [r7, #12]
 8003cf8:	f7ff ff80 	bl	8003bfc <ucg_com_SetCDLineStatus>
 8003cfc:	79fb      	ldrb	r3, [r7, #7]
 8003cfe:	b29b      	uxth	r3, r3
 8003d00:	68ba      	ldr	r2, [r7, #8]
 8003d02:	4619      	mov	r1, r3
 8003d04:	68f8      	ldr	r0, [r7, #12]
 8003d06:	f7ff ffc2 	bl	8003c8e <ucg_com_SendStringP>
 8003d0a:	79bb      	ldrb	r3, [r7, #6]
 8003d0c:	2b00      	cmp	r3, #0
 8003d0e:	d014      	beq.n	8003d3a <ucg_com_SendCmdArg+0x6c>
 8003d10:	79fb      	ldrb	r3, [r7, #7]
 8003d12:	68ba      	ldr	r2, [r7, #8]
 8003d14:	4413      	add	r3, r2
 8003d16:	60bb      	str	r3, [r7, #8]
 8003d18:	68fb      	ldr	r3, [r7, #12]
 8003d1a:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 8003d1e:	f003 0301 	and.w	r3, r3, #1
 8003d22:	b2db      	uxtb	r3, r3
 8003d24:	4619      	mov	r1, r3
 8003d26:	68f8      	ldr	r0, [r7, #12]
 8003d28:	f7ff ff68 	bl	8003bfc <ucg_com_SetCDLineStatus>
 8003d2c:	79bb      	ldrb	r3, [r7, #6]
 8003d2e:	b29b      	uxth	r3, r3
 8003d30:	68ba      	ldr	r2, [r7, #8]
 8003d32:	4619      	mov	r1, r3
 8003d34:	68f8      	ldr	r0, [r7, #12]
 8003d36:	f7ff ffaa 	bl	8003c8e <ucg_com_SendStringP>
 8003d3a:	bf00      	nop
 8003d3c:	3710      	adds	r7, #16
 8003d3e:	46bd      	mov	sp, r7
 8003d40:	bd80      	pop	{r7, pc}
	...

08003d44 <ucg_com_SendCmdSeq>:
 8003d44:	b580      	push	{r7, lr}
 8003d46:	b084      	sub	sp, #16
 8003d48:	af00      	add	r7, sp, #0
 8003d4a:	6078      	str	r0, [r7, #4]
 8003d4c:	6039      	str	r1, [r7, #0]
 8003d4e:	683b      	ldr	r3, [r7, #0]
 8003d50:	781b      	ldrb	r3, [r3, #0]
 8003d52:	73fb      	strb	r3, [r7, #15]
 8003d54:	7bfb      	ldrb	r3, [r7, #15]
 8003d56:	091b      	lsrs	r3, r3, #4
 8003d58:	73bb      	strb	r3, [r7, #14]
 8003d5a:	7bfb      	ldrb	r3, [r7, #15]
 8003d5c:	f003 030f 	and.w	r3, r3, #15
 8003d60:	737b      	strb	r3, [r7, #13]
 8003d62:	7bbb      	ldrb	r3, [r7, #14]
 8003d64:	2b0f      	cmp	r3, #15
 8003d66:	f200 8124 	bhi.w	8003fb2 <ucg_com_SendCmdSeq+0x26e>
 8003d6a:	a201      	add	r2, pc, #4	; (adr r2, 8003d70 <ucg_com_SendCmdSeq+0x2c>)
 8003d6c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003d70:	08003fb3 	.word	0x08003fb3
 8003d74:	08003db1 	.word	0x08003db1
 8003d78:	08003db1 	.word	0x08003db1
 8003d7c:	08003db1 	.word	0x08003db1
 8003d80:	08003fb3 	.word	0x08003fb3
 8003d84:	08003fb3 	.word	0x08003fb3
 8003d88:	08003dd1 	.word	0x08003dd1
 8003d8c:	08003e03 	.word	0x08003e03
 8003d90:	08003e47 	.word	0x08003e47
 8003d94:	08003e73 	.word	0x08003e73
 8003d98:	08003e9f 	.word	0x08003e9f
 8003d9c:	08003eff 	.word	0x08003eff
 8003da0:	08003fb3 	.word	0x08003fb3
 8003da4:	08003fb3 	.word	0x08003fb3
 8003da8:	08003fb3 	.word	0x08003fb3
 8003dac:	08003f5f 	.word	0x08003f5f
 8003db0:	683b      	ldr	r3, [r7, #0]
 8003db2:	1c59      	adds	r1, r3, #1
 8003db4:	7b7b      	ldrb	r3, [r7, #13]
 8003db6:	7bba      	ldrb	r2, [r7, #14]
 8003db8:	6878      	ldr	r0, [r7, #4]
 8003dba:	f7ff ff88 	bl	8003cce <ucg_com_SendCmdArg>
 8003dbe:	7bbb      	ldrb	r3, [r7, #14]
 8003dc0:	1c5a      	adds	r2, r3, #1
 8003dc2:	7b7b      	ldrb	r3, [r7, #13]
 8003dc4:	4413      	add	r3, r2
 8003dc6:	461a      	mov	r2, r3
 8003dc8:	683b      	ldr	r3, [r7, #0]
 8003dca:	4413      	add	r3, r2
 8003dcc:	603b      	str	r3, [r7, #0]
 8003dce:	e0ef      	b.n	8003fb0 <ucg_com_SendCmdSeq+0x26c>
 8003dd0:	687b      	ldr	r3, [r7, #4]
 8003dd2:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 8003dd6:	f003 0301 	and.w	r3, r3, #1
 8003dda:	b2db      	uxtb	r3, r3
 8003ddc:	4619      	mov	r1, r3
 8003dde:	6878      	ldr	r0, [r7, #4]
 8003de0:	f7ff ff0c 	bl	8003bfc <ucg_com_SetCDLineStatus>
 8003de4:	7b7b      	ldrb	r3, [r7, #13]
 8003de6:	b299      	uxth	r1, r3
 8003de8:	683b      	ldr	r3, [r7, #0]
 8003dea:	3301      	adds	r3, #1
 8003dec:	461a      	mov	r2, r3
 8003dee:	6878      	ldr	r0, [r7, #4]
 8003df0:	f7ff ff4d 	bl	8003c8e <ucg_com_SendStringP>
 8003df4:	7b7b      	ldrb	r3, [r7, #13]
 8003df6:	3301      	adds	r3, #1
 8003df8:	461a      	mov	r2, r3
 8003dfa:	683b      	ldr	r3, [r7, #0]
 8003dfc:	4413      	add	r3, r2
 8003dfe:	603b      	str	r3, [r7, #0]
 8003e00:	e0d6      	b.n	8003fb0 <ucg_com_SendCmdSeq+0x26c>
 8003e02:	687b      	ldr	r3, [r7, #4]
 8003e04:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 8003e08:	085b      	lsrs	r3, r3, #1
 8003e0a:	b2db      	uxtb	r3, r3
 8003e0c:	f003 0301 	and.w	r3, r3, #1
 8003e10:	2b00      	cmp	r3, #0
 8003e12:	bf0c      	ite	eq
 8003e14:	2301      	moveq	r3, #1
 8003e16:	2300      	movne	r3, #0
 8003e18:	b2db      	uxtb	r3, r3
 8003e1a:	4619      	mov	r1, r3
 8003e1c:	6878      	ldr	r0, [r7, #4]
 8003e1e:	f7ff feed 	bl	8003bfc <ucg_com_SetCDLineStatus>
 8003e22:	7b7b      	ldrb	r3, [r7, #13]
 8003e24:	2b00      	cmp	r3, #0
 8003e26:	d007      	beq.n	8003e38 <ucg_com_SendCmdSeq+0xf4>
 8003e28:	7b7b      	ldrb	r3, [r7, #13]
 8003e2a:	b299      	uxth	r1, r3
 8003e2c:	683b      	ldr	r3, [r7, #0]
 8003e2e:	3301      	adds	r3, #1
 8003e30:	461a      	mov	r2, r3
 8003e32:	6878      	ldr	r0, [r7, #4]
 8003e34:	f7ff ff2b 	bl	8003c8e <ucg_com_SendStringP>
 8003e38:	7b7b      	ldrb	r3, [r7, #13]
 8003e3a:	3301      	adds	r3, #1
 8003e3c:	461a      	mov	r2, r3
 8003e3e:	683b      	ldr	r3, [r7, #0]
 8003e40:	4413      	add	r3, r2
 8003e42:	603b      	str	r3, [r7, #0]
 8003e44:	e0b4      	b.n	8003fb0 <ucg_com_SendCmdSeq+0x26c>
 8003e46:	683b      	ldr	r3, [r7, #0]
 8003e48:	3301      	adds	r3, #1
 8003e4a:	603b      	str	r3, [r7, #0]
 8003e4c:	683b      	ldr	r3, [r7, #0]
 8003e4e:	781b      	ldrb	r3, [r3, #0]
 8003e50:	73fb      	strb	r3, [r7, #15]
 8003e52:	7b7b      	ldrb	r3, [r7, #13]
 8003e54:	b29b      	uxth	r3, r3
 8003e56:	021b      	lsls	r3, r3, #8
 8003e58:	b29a      	uxth	r2, r3
 8003e5a:	7bfb      	ldrb	r3, [r7, #15]
 8003e5c:	b29b      	uxth	r3, r3
 8003e5e:	4413      	add	r3, r2
 8003e60:	b29b      	uxth	r3, r3
 8003e62:	4619      	mov	r1, r3
 8003e64:	6878      	ldr	r0, [r7, #4]
 8003e66:	f7ff feea 	bl	8003c3e <ucg_com_DelayMilliseconds>
 8003e6a:	683b      	ldr	r3, [r7, #0]
 8003e6c:	3301      	adds	r3, #1
 8003e6e:	603b      	str	r3, [r7, #0]
 8003e70:	e09e      	b.n	8003fb0 <ucg_com_SendCmdSeq+0x26c>
 8003e72:	683b      	ldr	r3, [r7, #0]
 8003e74:	3301      	adds	r3, #1
 8003e76:	603b      	str	r3, [r7, #0]
 8003e78:	683b      	ldr	r3, [r7, #0]
 8003e7a:	781b      	ldrb	r3, [r3, #0]
 8003e7c:	73fb      	strb	r3, [r7, #15]
 8003e7e:	7b7b      	ldrb	r3, [r7, #13]
 8003e80:	b29b      	uxth	r3, r3
 8003e82:	021b      	lsls	r3, r3, #8
 8003e84:	b29a      	uxth	r2, r3
 8003e86:	7bfb      	ldrb	r3, [r7, #15]
 8003e88:	b29b      	uxth	r3, r3
 8003e8a:	4413      	add	r3, r2
 8003e8c:	b29b      	uxth	r3, r3
 8003e8e:	4619      	mov	r1, r3
 8003e90:	6878      	ldr	r0, [r7, #4]
 8003e92:	f7ff fec3 	bl	8003c1c <ucg_com_DelayMicroseconds>
 8003e96:	683b      	ldr	r3, [r7, #0]
 8003e98:	3301      	adds	r3, #1
 8003e9a:	603b      	str	r3, [r7, #0]
 8003e9c:	e088      	b.n	8003fb0 <ucg_com_SendCmdSeq+0x26c>
 8003e9e:	683b      	ldr	r3, [r7, #0]
 8003ea0:	3301      	adds	r3, #1
 8003ea2:	603b      	str	r3, [r7, #0]
 8003ea4:	683b      	ldr	r3, [r7, #0]
 8003ea6:	781b      	ldrb	r3, [r3, #0]
 8003ea8:	73fb      	strb	r3, [r7, #15]
 8003eaa:	683b      	ldr	r3, [r7, #0]
 8003eac:	3301      	adds	r3, #1
 8003eae:	603b      	str	r3, [r7, #0]
 8003eb0:	683b      	ldr	r3, [r7, #0]
 8003eb2:	781b      	ldrb	r3, [r3, #0]
 8003eb4:	733b      	strb	r3, [r7, #12]
 8003eb6:	683b      	ldr	r3, [r7, #0]
 8003eb8:	3301      	adds	r3, #1
 8003eba:	603b      	str	r3, [r7, #0]
 8003ebc:	687b      	ldr	r3, [r7, #4]
 8003ebe:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 8003ec2:	f003 0301 	and.w	r3, r3, #1
 8003ec6:	b2db      	uxtb	r3, r3
 8003ec8:	4619      	mov	r1, r3
 8003eca:	6878      	ldr	r0, [r7, #4]
 8003ecc:	f7ff fe96 	bl	8003bfc <ucg_com_SetCDLineStatus>
 8003ed0:	687b      	ldr	r3, [r7, #4]
 8003ed2:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 8003ed6:	461a      	mov	r2, r3
 8003ed8:	687b      	ldr	r3, [r7, #4]
 8003eda:	f9b3 3020 	ldrsh.w	r3, [r3, #32]
 8003ede:	441a      	add	r2, r3
 8003ee0:	7b7b      	ldrb	r3, [r7, #13]
 8003ee2:	fa42 f303 	asr.w	r3, r2, r3
 8003ee6:	b2da      	uxtb	r2, r3
 8003ee8:	7bfb      	ldrb	r3, [r7, #15]
 8003eea:	4013      	ands	r3, r2
 8003eec:	b2da      	uxtb	r2, r3
 8003eee:	7b3b      	ldrb	r3, [r7, #12]
 8003ef0:	4313      	orrs	r3, r2
 8003ef2:	b2db      	uxtb	r3, r3
 8003ef4:	4619      	mov	r1, r3
 8003ef6:	6878      	ldr	r0, [r7, #4]
 8003ef8:	f7ff feb7 	bl	8003c6a <ucg_com_SendByte>
 8003efc:	e058      	b.n	8003fb0 <ucg_com_SendCmdSeq+0x26c>
 8003efe:	683b      	ldr	r3, [r7, #0]
 8003f00:	3301      	adds	r3, #1
 8003f02:	603b      	str	r3, [r7, #0]
 8003f04:	683b      	ldr	r3, [r7, #0]
 8003f06:	781b      	ldrb	r3, [r3, #0]
 8003f08:	73fb      	strb	r3, [r7, #15]
 8003f0a:	683b      	ldr	r3, [r7, #0]
 8003f0c:	3301      	adds	r3, #1
 8003f0e:	603b      	str	r3, [r7, #0]
 8003f10:	683b      	ldr	r3, [r7, #0]
 8003f12:	781b      	ldrb	r3, [r3, #0]
 8003f14:	733b      	strb	r3, [r7, #12]
 8003f16:	683b      	ldr	r3, [r7, #0]
 8003f18:	3301      	adds	r3, #1
 8003f1a:	603b      	str	r3, [r7, #0]
 8003f1c:	687b      	ldr	r3, [r7, #4]
 8003f1e:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 8003f22:	f003 0301 	and.w	r3, r3, #1
 8003f26:	b2db      	uxtb	r3, r3
 8003f28:	4619      	mov	r1, r3
 8003f2a:	6878      	ldr	r0, [r7, #4]
 8003f2c:	f7ff fe66 	bl	8003bfc <ucg_com_SetCDLineStatus>
 8003f30:	687b      	ldr	r3, [r7, #4]
 8003f32:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 8003f36:	461a      	mov	r2, r3
 8003f38:	687b      	ldr	r3, [r7, #4]
 8003f3a:	f9b3 3022 	ldrsh.w	r3, [r3, #34]	; 0x22
 8003f3e:	441a      	add	r2, r3
 8003f40:	7b7b      	ldrb	r3, [r7, #13]
 8003f42:	fa42 f303 	asr.w	r3, r2, r3
 8003f46:	b2da      	uxtb	r2, r3
 8003f48:	7bfb      	ldrb	r3, [r7, #15]
 8003f4a:	4013      	ands	r3, r2
 8003f4c:	b2da      	uxtb	r2, r3
 8003f4e:	7b3b      	ldrb	r3, [r7, #12]
 8003f50:	4313      	orrs	r3, r2
 8003f52:	b2db      	uxtb	r3, r3
 8003f54:	4619      	mov	r1, r3
 8003f56:	6878      	ldr	r0, [r7, #4]
 8003f58:	f7ff fe87 	bl	8003c6a <ucg_com_SendByte>
 8003f5c:	e028      	b.n	8003fb0 <ucg_com_SendCmdSeq+0x26c>
 8003f5e:	7b7b      	ldrb	r3, [r7, #13]
 8003f60:	089b      	lsrs	r3, r3, #2
 8003f62:	73bb      	strb	r3, [r7, #14]
 8003f64:	7b7b      	ldrb	r3, [r7, #13]
 8003f66:	f003 0303 	and.w	r3, r3, #3
 8003f6a:	737b      	strb	r3, [r7, #13]
 8003f6c:	7bbb      	ldrb	r3, [r7, #14]
 8003f6e:	2b01      	cmp	r3, #1
 8003f70:	d00c      	beq.n	8003f8c <ucg_com_SendCmdSeq+0x248>
 8003f72:	2b03      	cmp	r3, #3
 8003f74:	d013      	beq.n	8003f9e <ucg_com_SendCmdSeq+0x25a>
 8003f76:	2b00      	cmp	r3, #0
 8003f78:	d116      	bne.n	8003fa8 <ucg_com_SendCmdSeq+0x264>
 8003f7a:	7b7b      	ldrb	r3, [r7, #13]
 8003f7c:	f003 0301 	and.w	r3, r3, #1
 8003f80:	b2db      	uxtb	r3, r3
 8003f82:	4619      	mov	r1, r3
 8003f84:	6878      	ldr	r0, [r7, #4]
 8003f86:	f7ff fe19 	bl	8003bbc <ucg_com_SetResetLineStatus>
 8003f8a:	e00d      	b.n	8003fa8 <ucg_com_SendCmdSeq+0x264>
 8003f8c:	7b7b      	ldrb	r3, [r7, #13]
 8003f8e:	f003 0301 	and.w	r3, r3, #1
 8003f92:	b2db      	uxtb	r3, r3
 8003f94:	4619      	mov	r1, r3
 8003f96:	6878      	ldr	r0, [r7, #4]
 8003f98:	f7ff fe20 	bl	8003bdc <ucg_com_SetCSLineStatus>
 8003f9c:	e004      	b.n	8003fa8 <ucg_com_SendCmdSeq+0x264>
 8003f9e:	687b      	ldr	r3, [r7, #4]
 8003fa0:	7b7a      	ldrb	r2, [r7, #13]
 8003fa2:	f883 20b0 	strb.w	r2, [r3, #176]	; 0xb0
 8003fa6:	bf00      	nop
 8003fa8:	683b      	ldr	r3, [r7, #0]
 8003faa:	3301      	adds	r3, #1
 8003fac:	603b      	str	r3, [r7, #0]
 8003fae:	bf00      	nop
 8003fb0:	e6cd      	b.n	8003d4e <ucg_com_SendCmdSeq+0xa>
 8003fb2:	bf00      	nop
 8003fb4:	3710      	adds	r7, #16
 8003fb6:	46bd      	mov	sp, r7
 8003fb8:	bd80      	pop	{r7, pc}
 8003fba:	bf00      	nop

08003fbc <__errno>:
 8003fbc:	4b01      	ldr	r3, [pc, #4]	; (8003fc4 <__errno+0x8>)
 8003fbe:	6818      	ldr	r0, [r3, #0]
 8003fc0:	4770      	bx	lr
 8003fc2:	bf00      	nop
 8003fc4:	20000028 	.word	0x20000028

08003fc8 <__libc_init_array>:
 8003fc8:	b570      	push	{r4, r5, r6, lr}
 8003fca:	4d0d      	ldr	r5, [pc, #52]	; (8004000 <__libc_init_array+0x38>)
 8003fcc:	4c0d      	ldr	r4, [pc, #52]	; (8004004 <__libc_init_array+0x3c>)
 8003fce:	1b64      	subs	r4, r4, r5
 8003fd0:	10a4      	asrs	r4, r4, #2
 8003fd2:	2600      	movs	r6, #0
 8003fd4:	42a6      	cmp	r6, r4
 8003fd6:	d109      	bne.n	8003fec <__libc_init_array+0x24>
 8003fd8:	4d0b      	ldr	r5, [pc, #44]	; (8004008 <__libc_init_array+0x40>)
 8003fda:	4c0c      	ldr	r4, [pc, #48]	; (800400c <__libc_init_array+0x44>)
 8003fdc:	f000 fc8e 	bl	80048fc <_init>
 8003fe0:	1b64      	subs	r4, r4, r5
 8003fe2:	10a4      	asrs	r4, r4, #2
 8003fe4:	2600      	movs	r6, #0
 8003fe6:	42a6      	cmp	r6, r4
 8003fe8:	d105      	bne.n	8003ff6 <__libc_init_array+0x2e>
 8003fea:	bd70      	pop	{r4, r5, r6, pc}
 8003fec:	f855 3b04 	ldr.w	r3, [r5], #4
 8003ff0:	4798      	blx	r3
 8003ff2:	3601      	adds	r6, #1
 8003ff4:	e7ee      	b.n	8003fd4 <__libc_init_array+0xc>
 8003ff6:	f855 3b04 	ldr.w	r3, [r5], #4
 8003ffa:	4798      	blx	r3
 8003ffc:	3601      	adds	r6, #1
 8003ffe:	e7f2      	b.n	8003fe6 <__libc_init_array+0x1e>
 8004000:	08005224 	.word	0x08005224
 8004004:	08005224 	.word	0x08005224
 8004008:	08005224 	.word	0x08005224
 800400c:	08005228 	.word	0x08005228

08004010 <memset>:
 8004010:	4402      	add	r2, r0
 8004012:	4603      	mov	r3, r0
 8004014:	4293      	cmp	r3, r2
 8004016:	d100      	bne.n	800401a <memset+0xa>
 8004018:	4770      	bx	lr
 800401a:	f803 1b01 	strb.w	r1, [r3], #1
 800401e:	e7f9      	b.n	8004014 <memset+0x4>

08004020 <siprintf>:
 8004020:	b40e      	push	{r1, r2, r3}
 8004022:	b500      	push	{lr}
 8004024:	b09c      	sub	sp, #112	; 0x70
 8004026:	ab1d      	add	r3, sp, #116	; 0x74
 8004028:	9002      	str	r0, [sp, #8]
 800402a:	9006      	str	r0, [sp, #24]
 800402c:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8004030:	4809      	ldr	r0, [pc, #36]	; (8004058 <siprintf+0x38>)
 8004032:	9107      	str	r1, [sp, #28]
 8004034:	9104      	str	r1, [sp, #16]
 8004036:	4909      	ldr	r1, [pc, #36]	; (800405c <siprintf+0x3c>)
 8004038:	f853 2b04 	ldr.w	r2, [r3], #4
 800403c:	9105      	str	r1, [sp, #20]
 800403e:	6800      	ldr	r0, [r0, #0]
 8004040:	9301      	str	r3, [sp, #4]
 8004042:	a902      	add	r1, sp, #8
 8004044:	f000 f868 	bl	8004118 <_svfiprintf_r>
 8004048:	9b02      	ldr	r3, [sp, #8]
 800404a:	2200      	movs	r2, #0
 800404c:	701a      	strb	r2, [r3, #0]
 800404e:	b01c      	add	sp, #112	; 0x70
 8004050:	f85d eb04 	ldr.w	lr, [sp], #4
 8004054:	b003      	add	sp, #12
 8004056:	4770      	bx	lr
 8004058:	20000028 	.word	0x20000028
 800405c:	ffff0208 	.word	0xffff0208

08004060 <__ssputs_r>:
 8004060:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004064:	688e      	ldr	r6, [r1, #8]
 8004066:	429e      	cmp	r6, r3
 8004068:	4682      	mov	sl, r0
 800406a:	460c      	mov	r4, r1
 800406c:	4690      	mov	r8, r2
 800406e:	461f      	mov	r7, r3
 8004070:	d838      	bhi.n	80040e4 <__ssputs_r+0x84>
 8004072:	898a      	ldrh	r2, [r1, #12]
 8004074:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8004078:	d032      	beq.n	80040e0 <__ssputs_r+0x80>
 800407a:	6825      	ldr	r5, [r4, #0]
 800407c:	6909      	ldr	r1, [r1, #16]
 800407e:	eba5 0901 	sub.w	r9, r5, r1
 8004082:	6965      	ldr	r5, [r4, #20]
 8004084:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004088:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800408c:	3301      	adds	r3, #1
 800408e:	444b      	add	r3, r9
 8004090:	106d      	asrs	r5, r5, #1
 8004092:	429d      	cmp	r5, r3
 8004094:	bf38      	it	cc
 8004096:	461d      	movcc	r5, r3
 8004098:	0553      	lsls	r3, r2, #21
 800409a:	d531      	bpl.n	8004100 <__ssputs_r+0xa0>
 800409c:	4629      	mov	r1, r5
 800409e:	f000 fb63 	bl	8004768 <_malloc_r>
 80040a2:	4606      	mov	r6, r0
 80040a4:	b950      	cbnz	r0, 80040bc <__ssputs_r+0x5c>
 80040a6:	230c      	movs	r3, #12
 80040a8:	f8ca 3000 	str.w	r3, [sl]
 80040ac:	89a3      	ldrh	r3, [r4, #12]
 80040ae:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80040b2:	81a3      	strh	r3, [r4, #12]
 80040b4:	f04f 30ff 	mov.w	r0, #4294967295
 80040b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80040bc:	6921      	ldr	r1, [r4, #16]
 80040be:	464a      	mov	r2, r9
 80040c0:	f000 fabe 	bl	8004640 <memcpy>
 80040c4:	89a3      	ldrh	r3, [r4, #12]
 80040c6:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 80040ca:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80040ce:	81a3      	strh	r3, [r4, #12]
 80040d0:	6126      	str	r6, [r4, #16]
 80040d2:	6165      	str	r5, [r4, #20]
 80040d4:	444e      	add	r6, r9
 80040d6:	eba5 0509 	sub.w	r5, r5, r9
 80040da:	6026      	str	r6, [r4, #0]
 80040dc:	60a5      	str	r5, [r4, #8]
 80040de:	463e      	mov	r6, r7
 80040e0:	42be      	cmp	r6, r7
 80040e2:	d900      	bls.n	80040e6 <__ssputs_r+0x86>
 80040e4:	463e      	mov	r6, r7
 80040e6:	6820      	ldr	r0, [r4, #0]
 80040e8:	4632      	mov	r2, r6
 80040ea:	4641      	mov	r1, r8
 80040ec:	f000 fab6 	bl	800465c <memmove>
 80040f0:	68a3      	ldr	r3, [r4, #8]
 80040f2:	1b9b      	subs	r3, r3, r6
 80040f4:	60a3      	str	r3, [r4, #8]
 80040f6:	6823      	ldr	r3, [r4, #0]
 80040f8:	4433      	add	r3, r6
 80040fa:	6023      	str	r3, [r4, #0]
 80040fc:	2000      	movs	r0, #0
 80040fe:	e7db      	b.n	80040b8 <__ssputs_r+0x58>
 8004100:	462a      	mov	r2, r5
 8004102:	f000 fba5 	bl	8004850 <_realloc_r>
 8004106:	4606      	mov	r6, r0
 8004108:	2800      	cmp	r0, #0
 800410a:	d1e1      	bne.n	80040d0 <__ssputs_r+0x70>
 800410c:	6921      	ldr	r1, [r4, #16]
 800410e:	4650      	mov	r0, sl
 8004110:	f000 fabe 	bl	8004690 <_free_r>
 8004114:	e7c7      	b.n	80040a6 <__ssputs_r+0x46>
	...

08004118 <_svfiprintf_r>:
 8004118:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800411c:	4698      	mov	r8, r3
 800411e:	898b      	ldrh	r3, [r1, #12]
 8004120:	061b      	lsls	r3, r3, #24
 8004122:	b09d      	sub	sp, #116	; 0x74
 8004124:	4607      	mov	r7, r0
 8004126:	460d      	mov	r5, r1
 8004128:	4614      	mov	r4, r2
 800412a:	d50e      	bpl.n	800414a <_svfiprintf_r+0x32>
 800412c:	690b      	ldr	r3, [r1, #16]
 800412e:	b963      	cbnz	r3, 800414a <_svfiprintf_r+0x32>
 8004130:	2140      	movs	r1, #64	; 0x40
 8004132:	f000 fb19 	bl	8004768 <_malloc_r>
 8004136:	6028      	str	r0, [r5, #0]
 8004138:	6128      	str	r0, [r5, #16]
 800413a:	b920      	cbnz	r0, 8004146 <_svfiprintf_r+0x2e>
 800413c:	230c      	movs	r3, #12
 800413e:	603b      	str	r3, [r7, #0]
 8004140:	f04f 30ff 	mov.w	r0, #4294967295
 8004144:	e0d1      	b.n	80042ea <_svfiprintf_r+0x1d2>
 8004146:	2340      	movs	r3, #64	; 0x40
 8004148:	616b      	str	r3, [r5, #20]
 800414a:	2300      	movs	r3, #0
 800414c:	9309      	str	r3, [sp, #36]	; 0x24
 800414e:	2320      	movs	r3, #32
 8004150:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8004154:	f8cd 800c 	str.w	r8, [sp, #12]
 8004158:	2330      	movs	r3, #48	; 0x30
 800415a:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 8004304 <_svfiprintf_r+0x1ec>
 800415e:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8004162:	f04f 0901 	mov.w	r9, #1
 8004166:	4623      	mov	r3, r4
 8004168:	469a      	mov	sl, r3
 800416a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800416e:	b10a      	cbz	r2, 8004174 <_svfiprintf_r+0x5c>
 8004170:	2a25      	cmp	r2, #37	; 0x25
 8004172:	d1f9      	bne.n	8004168 <_svfiprintf_r+0x50>
 8004174:	ebba 0b04 	subs.w	fp, sl, r4
 8004178:	d00b      	beq.n	8004192 <_svfiprintf_r+0x7a>
 800417a:	465b      	mov	r3, fp
 800417c:	4622      	mov	r2, r4
 800417e:	4629      	mov	r1, r5
 8004180:	4638      	mov	r0, r7
 8004182:	f7ff ff6d 	bl	8004060 <__ssputs_r>
 8004186:	3001      	adds	r0, #1
 8004188:	f000 80aa 	beq.w	80042e0 <_svfiprintf_r+0x1c8>
 800418c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800418e:	445a      	add	r2, fp
 8004190:	9209      	str	r2, [sp, #36]	; 0x24
 8004192:	f89a 3000 	ldrb.w	r3, [sl]
 8004196:	2b00      	cmp	r3, #0
 8004198:	f000 80a2 	beq.w	80042e0 <_svfiprintf_r+0x1c8>
 800419c:	2300      	movs	r3, #0
 800419e:	f04f 32ff 	mov.w	r2, #4294967295
 80041a2:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80041a6:	f10a 0a01 	add.w	sl, sl, #1
 80041aa:	9304      	str	r3, [sp, #16]
 80041ac:	9307      	str	r3, [sp, #28]
 80041ae:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80041b2:	931a      	str	r3, [sp, #104]	; 0x68
 80041b4:	4654      	mov	r4, sl
 80041b6:	2205      	movs	r2, #5
 80041b8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80041bc:	4851      	ldr	r0, [pc, #324]	; (8004304 <_svfiprintf_r+0x1ec>)
 80041be:	f7fc f80f 	bl	80001e0 <memchr>
 80041c2:	9a04      	ldr	r2, [sp, #16]
 80041c4:	b9d8      	cbnz	r0, 80041fe <_svfiprintf_r+0xe6>
 80041c6:	06d0      	lsls	r0, r2, #27
 80041c8:	bf44      	itt	mi
 80041ca:	2320      	movmi	r3, #32
 80041cc:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80041d0:	0711      	lsls	r1, r2, #28
 80041d2:	bf44      	itt	mi
 80041d4:	232b      	movmi	r3, #43	; 0x2b
 80041d6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80041da:	f89a 3000 	ldrb.w	r3, [sl]
 80041de:	2b2a      	cmp	r3, #42	; 0x2a
 80041e0:	d015      	beq.n	800420e <_svfiprintf_r+0xf6>
 80041e2:	9a07      	ldr	r2, [sp, #28]
 80041e4:	4654      	mov	r4, sl
 80041e6:	2000      	movs	r0, #0
 80041e8:	f04f 0c0a 	mov.w	ip, #10
 80041ec:	4621      	mov	r1, r4
 80041ee:	f811 3b01 	ldrb.w	r3, [r1], #1
 80041f2:	3b30      	subs	r3, #48	; 0x30
 80041f4:	2b09      	cmp	r3, #9
 80041f6:	d94e      	bls.n	8004296 <_svfiprintf_r+0x17e>
 80041f8:	b1b0      	cbz	r0, 8004228 <_svfiprintf_r+0x110>
 80041fa:	9207      	str	r2, [sp, #28]
 80041fc:	e014      	b.n	8004228 <_svfiprintf_r+0x110>
 80041fe:	eba0 0308 	sub.w	r3, r0, r8
 8004202:	fa09 f303 	lsl.w	r3, r9, r3
 8004206:	4313      	orrs	r3, r2
 8004208:	9304      	str	r3, [sp, #16]
 800420a:	46a2      	mov	sl, r4
 800420c:	e7d2      	b.n	80041b4 <_svfiprintf_r+0x9c>
 800420e:	9b03      	ldr	r3, [sp, #12]
 8004210:	1d19      	adds	r1, r3, #4
 8004212:	681b      	ldr	r3, [r3, #0]
 8004214:	9103      	str	r1, [sp, #12]
 8004216:	2b00      	cmp	r3, #0
 8004218:	bfbb      	ittet	lt
 800421a:	425b      	neglt	r3, r3
 800421c:	f042 0202 	orrlt.w	r2, r2, #2
 8004220:	9307      	strge	r3, [sp, #28]
 8004222:	9307      	strlt	r3, [sp, #28]
 8004224:	bfb8      	it	lt
 8004226:	9204      	strlt	r2, [sp, #16]
 8004228:	7823      	ldrb	r3, [r4, #0]
 800422a:	2b2e      	cmp	r3, #46	; 0x2e
 800422c:	d10c      	bne.n	8004248 <_svfiprintf_r+0x130>
 800422e:	7863      	ldrb	r3, [r4, #1]
 8004230:	2b2a      	cmp	r3, #42	; 0x2a
 8004232:	d135      	bne.n	80042a0 <_svfiprintf_r+0x188>
 8004234:	9b03      	ldr	r3, [sp, #12]
 8004236:	1d1a      	adds	r2, r3, #4
 8004238:	681b      	ldr	r3, [r3, #0]
 800423a:	9203      	str	r2, [sp, #12]
 800423c:	2b00      	cmp	r3, #0
 800423e:	bfb8      	it	lt
 8004240:	f04f 33ff 	movlt.w	r3, #4294967295
 8004244:	3402      	adds	r4, #2
 8004246:	9305      	str	r3, [sp, #20]
 8004248:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8004314 <_svfiprintf_r+0x1fc>
 800424c:	7821      	ldrb	r1, [r4, #0]
 800424e:	2203      	movs	r2, #3
 8004250:	4650      	mov	r0, sl
 8004252:	f7fb ffc5 	bl	80001e0 <memchr>
 8004256:	b140      	cbz	r0, 800426a <_svfiprintf_r+0x152>
 8004258:	2340      	movs	r3, #64	; 0x40
 800425a:	eba0 000a 	sub.w	r0, r0, sl
 800425e:	fa03 f000 	lsl.w	r0, r3, r0
 8004262:	9b04      	ldr	r3, [sp, #16]
 8004264:	4303      	orrs	r3, r0
 8004266:	3401      	adds	r4, #1
 8004268:	9304      	str	r3, [sp, #16]
 800426a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800426e:	4826      	ldr	r0, [pc, #152]	; (8004308 <_svfiprintf_r+0x1f0>)
 8004270:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8004274:	2206      	movs	r2, #6
 8004276:	f7fb ffb3 	bl	80001e0 <memchr>
 800427a:	2800      	cmp	r0, #0
 800427c:	d038      	beq.n	80042f0 <_svfiprintf_r+0x1d8>
 800427e:	4b23      	ldr	r3, [pc, #140]	; (800430c <_svfiprintf_r+0x1f4>)
 8004280:	bb1b      	cbnz	r3, 80042ca <_svfiprintf_r+0x1b2>
 8004282:	9b03      	ldr	r3, [sp, #12]
 8004284:	3307      	adds	r3, #7
 8004286:	f023 0307 	bic.w	r3, r3, #7
 800428a:	3308      	adds	r3, #8
 800428c:	9303      	str	r3, [sp, #12]
 800428e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004290:	4433      	add	r3, r6
 8004292:	9309      	str	r3, [sp, #36]	; 0x24
 8004294:	e767      	b.n	8004166 <_svfiprintf_r+0x4e>
 8004296:	fb0c 3202 	mla	r2, ip, r2, r3
 800429a:	460c      	mov	r4, r1
 800429c:	2001      	movs	r0, #1
 800429e:	e7a5      	b.n	80041ec <_svfiprintf_r+0xd4>
 80042a0:	2300      	movs	r3, #0
 80042a2:	3401      	adds	r4, #1
 80042a4:	9305      	str	r3, [sp, #20]
 80042a6:	4619      	mov	r1, r3
 80042a8:	f04f 0c0a 	mov.w	ip, #10
 80042ac:	4620      	mov	r0, r4
 80042ae:	f810 2b01 	ldrb.w	r2, [r0], #1
 80042b2:	3a30      	subs	r2, #48	; 0x30
 80042b4:	2a09      	cmp	r2, #9
 80042b6:	d903      	bls.n	80042c0 <_svfiprintf_r+0x1a8>
 80042b8:	2b00      	cmp	r3, #0
 80042ba:	d0c5      	beq.n	8004248 <_svfiprintf_r+0x130>
 80042bc:	9105      	str	r1, [sp, #20]
 80042be:	e7c3      	b.n	8004248 <_svfiprintf_r+0x130>
 80042c0:	fb0c 2101 	mla	r1, ip, r1, r2
 80042c4:	4604      	mov	r4, r0
 80042c6:	2301      	movs	r3, #1
 80042c8:	e7f0      	b.n	80042ac <_svfiprintf_r+0x194>
 80042ca:	ab03      	add	r3, sp, #12
 80042cc:	9300      	str	r3, [sp, #0]
 80042ce:	462a      	mov	r2, r5
 80042d0:	4b0f      	ldr	r3, [pc, #60]	; (8004310 <_svfiprintf_r+0x1f8>)
 80042d2:	a904      	add	r1, sp, #16
 80042d4:	4638      	mov	r0, r7
 80042d6:	f3af 8000 	nop.w
 80042da:	1c42      	adds	r2, r0, #1
 80042dc:	4606      	mov	r6, r0
 80042de:	d1d6      	bne.n	800428e <_svfiprintf_r+0x176>
 80042e0:	89ab      	ldrh	r3, [r5, #12]
 80042e2:	065b      	lsls	r3, r3, #25
 80042e4:	f53f af2c 	bmi.w	8004140 <_svfiprintf_r+0x28>
 80042e8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80042ea:	b01d      	add	sp, #116	; 0x74
 80042ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80042f0:	ab03      	add	r3, sp, #12
 80042f2:	9300      	str	r3, [sp, #0]
 80042f4:	462a      	mov	r2, r5
 80042f6:	4b06      	ldr	r3, [pc, #24]	; (8004310 <_svfiprintf_r+0x1f8>)
 80042f8:	a904      	add	r1, sp, #16
 80042fa:	4638      	mov	r0, r7
 80042fc:	f000 f87a 	bl	80043f4 <_printf_i>
 8004300:	e7eb      	b.n	80042da <_svfiprintf_r+0x1c2>
 8004302:	bf00      	nop
 8004304:	080051f0 	.word	0x080051f0
 8004308:	080051fa 	.word	0x080051fa
 800430c:	00000000 	.word	0x00000000
 8004310:	08004061 	.word	0x08004061
 8004314:	080051f6 	.word	0x080051f6

08004318 <_printf_common>:
 8004318:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800431c:	4616      	mov	r6, r2
 800431e:	4699      	mov	r9, r3
 8004320:	688a      	ldr	r2, [r1, #8]
 8004322:	690b      	ldr	r3, [r1, #16]
 8004324:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8004328:	4293      	cmp	r3, r2
 800432a:	bfb8      	it	lt
 800432c:	4613      	movlt	r3, r2
 800432e:	6033      	str	r3, [r6, #0]
 8004330:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8004334:	4607      	mov	r7, r0
 8004336:	460c      	mov	r4, r1
 8004338:	b10a      	cbz	r2, 800433e <_printf_common+0x26>
 800433a:	3301      	adds	r3, #1
 800433c:	6033      	str	r3, [r6, #0]
 800433e:	6823      	ldr	r3, [r4, #0]
 8004340:	0699      	lsls	r1, r3, #26
 8004342:	bf42      	ittt	mi
 8004344:	6833      	ldrmi	r3, [r6, #0]
 8004346:	3302      	addmi	r3, #2
 8004348:	6033      	strmi	r3, [r6, #0]
 800434a:	6825      	ldr	r5, [r4, #0]
 800434c:	f015 0506 	ands.w	r5, r5, #6
 8004350:	d106      	bne.n	8004360 <_printf_common+0x48>
 8004352:	f104 0a19 	add.w	sl, r4, #25
 8004356:	68e3      	ldr	r3, [r4, #12]
 8004358:	6832      	ldr	r2, [r6, #0]
 800435a:	1a9b      	subs	r3, r3, r2
 800435c:	42ab      	cmp	r3, r5
 800435e:	dc26      	bgt.n	80043ae <_printf_common+0x96>
 8004360:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8004364:	1e13      	subs	r3, r2, #0
 8004366:	6822      	ldr	r2, [r4, #0]
 8004368:	bf18      	it	ne
 800436a:	2301      	movne	r3, #1
 800436c:	0692      	lsls	r2, r2, #26
 800436e:	d42b      	bmi.n	80043c8 <_printf_common+0xb0>
 8004370:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8004374:	4649      	mov	r1, r9
 8004376:	4638      	mov	r0, r7
 8004378:	47c0      	blx	r8
 800437a:	3001      	adds	r0, #1
 800437c:	d01e      	beq.n	80043bc <_printf_common+0xa4>
 800437e:	6823      	ldr	r3, [r4, #0]
 8004380:	68e5      	ldr	r5, [r4, #12]
 8004382:	6832      	ldr	r2, [r6, #0]
 8004384:	f003 0306 	and.w	r3, r3, #6
 8004388:	2b04      	cmp	r3, #4
 800438a:	bf08      	it	eq
 800438c:	1aad      	subeq	r5, r5, r2
 800438e:	68a3      	ldr	r3, [r4, #8]
 8004390:	6922      	ldr	r2, [r4, #16]
 8004392:	bf0c      	ite	eq
 8004394:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8004398:	2500      	movne	r5, #0
 800439a:	4293      	cmp	r3, r2
 800439c:	bfc4      	itt	gt
 800439e:	1a9b      	subgt	r3, r3, r2
 80043a0:	18ed      	addgt	r5, r5, r3
 80043a2:	2600      	movs	r6, #0
 80043a4:	341a      	adds	r4, #26
 80043a6:	42b5      	cmp	r5, r6
 80043a8:	d11a      	bne.n	80043e0 <_printf_common+0xc8>
 80043aa:	2000      	movs	r0, #0
 80043ac:	e008      	b.n	80043c0 <_printf_common+0xa8>
 80043ae:	2301      	movs	r3, #1
 80043b0:	4652      	mov	r2, sl
 80043b2:	4649      	mov	r1, r9
 80043b4:	4638      	mov	r0, r7
 80043b6:	47c0      	blx	r8
 80043b8:	3001      	adds	r0, #1
 80043ba:	d103      	bne.n	80043c4 <_printf_common+0xac>
 80043bc:	f04f 30ff 	mov.w	r0, #4294967295
 80043c0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80043c4:	3501      	adds	r5, #1
 80043c6:	e7c6      	b.n	8004356 <_printf_common+0x3e>
 80043c8:	18e1      	adds	r1, r4, r3
 80043ca:	1c5a      	adds	r2, r3, #1
 80043cc:	2030      	movs	r0, #48	; 0x30
 80043ce:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80043d2:	4422      	add	r2, r4
 80043d4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80043d8:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80043dc:	3302      	adds	r3, #2
 80043de:	e7c7      	b.n	8004370 <_printf_common+0x58>
 80043e0:	2301      	movs	r3, #1
 80043e2:	4622      	mov	r2, r4
 80043e4:	4649      	mov	r1, r9
 80043e6:	4638      	mov	r0, r7
 80043e8:	47c0      	blx	r8
 80043ea:	3001      	adds	r0, #1
 80043ec:	d0e6      	beq.n	80043bc <_printf_common+0xa4>
 80043ee:	3601      	adds	r6, #1
 80043f0:	e7d9      	b.n	80043a6 <_printf_common+0x8e>
	...

080043f4 <_printf_i>:
 80043f4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80043f8:	7e0f      	ldrb	r7, [r1, #24]
 80043fa:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80043fc:	2f78      	cmp	r7, #120	; 0x78
 80043fe:	4691      	mov	r9, r2
 8004400:	4680      	mov	r8, r0
 8004402:	460c      	mov	r4, r1
 8004404:	469a      	mov	sl, r3
 8004406:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800440a:	d807      	bhi.n	800441c <_printf_i+0x28>
 800440c:	2f62      	cmp	r7, #98	; 0x62
 800440e:	d80a      	bhi.n	8004426 <_printf_i+0x32>
 8004410:	2f00      	cmp	r7, #0
 8004412:	f000 80d8 	beq.w	80045c6 <_printf_i+0x1d2>
 8004416:	2f58      	cmp	r7, #88	; 0x58
 8004418:	f000 80a3 	beq.w	8004562 <_printf_i+0x16e>
 800441c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8004420:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8004424:	e03a      	b.n	800449c <_printf_i+0xa8>
 8004426:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800442a:	2b15      	cmp	r3, #21
 800442c:	d8f6      	bhi.n	800441c <_printf_i+0x28>
 800442e:	a101      	add	r1, pc, #4	; (adr r1, 8004434 <_printf_i+0x40>)
 8004430:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8004434:	0800448d 	.word	0x0800448d
 8004438:	080044a1 	.word	0x080044a1
 800443c:	0800441d 	.word	0x0800441d
 8004440:	0800441d 	.word	0x0800441d
 8004444:	0800441d 	.word	0x0800441d
 8004448:	0800441d 	.word	0x0800441d
 800444c:	080044a1 	.word	0x080044a1
 8004450:	0800441d 	.word	0x0800441d
 8004454:	0800441d 	.word	0x0800441d
 8004458:	0800441d 	.word	0x0800441d
 800445c:	0800441d 	.word	0x0800441d
 8004460:	080045ad 	.word	0x080045ad
 8004464:	080044d1 	.word	0x080044d1
 8004468:	0800458f 	.word	0x0800458f
 800446c:	0800441d 	.word	0x0800441d
 8004470:	0800441d 	.word	0x0800441d
 8004474:	080045cf 	.word	0x080045cf
 8004478:	0800441d 	.word	0x0800441d
 800447c:	080044d1 	.word	0x080044d1
 8004480:	0800441d 	.word	0x0800441d
 8004484:	0800441d 	.word	0x0800441d
 8004488:	08004597 	.word	0x08004597
 800448c:	682b      	ldr	r3, [r5, #0]
 800448e:	1d1a      	adds	r2, r3, #4
 8004490:	681b      	ldr	r3, [r3, #0]
 8004492:	602a      	str	r2, [r5, #0]
 8004494:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8004498:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800449c:	2301      	movs	r3, #1
 800449e:	e0a3      	b.n	80045e8 <_printf_i+0x1f4>
 80044a0:	6820      	ldr	r0, [r4, #0]
 80044a2:	6829      	ldr	r1, [r5, #0]
 80044a4:	0606      	lsls	r6, r0, #24
 80044a6:	f101 0304 	add.w	r3, r1, #4
 80044aa:	d50a      	bpl.n	80044c2 <_printf_i+0xce>
 80044ac:	680e      	ldr	r6, [r1, #0]
 80044ae:	602b      	str	r3, [r5, #0]
 80044b0:	2e00      	cmp	r6, #0
 80044b2:	da03      	bge.n	80044bc <_printf_i+0xc8>
 80044b4:	232d      	movs	r3, #45	; 0x2d
 80044b6:	4276      	negs	r6, r6
 80044b8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80044bc:	485e      	ldr	r0, [pc, #376]	; (8004638 <_printf_i+0x244>)
 80044be:	230a      	movs	r3, #10
 80044c0:	e019      	b.n	80044f6 <_printf_i+0x102>
 80044c2:	680e      	ldr	r6, [r1, #0]
 80044c4:	602b      	str	r3, [r5, #0]
 80044c6:	f010 0f40 	tst.w	r0, #64	; 0x40
 80044ca:	bf18      	it	ne
 80044cc:	b236      	sxthne	r6, r6
 80044ce:	e7ef      	b.n	80044b0 <_printf_i+0xbc>
 80044d0:	682b      	ldr	r3, [r5, #0]
 80044d2:	6820      	ldr	r0, [r4, #0]
 80044d4:	1d19      	adds	r1, r3, #4
 80044d6:	6029      	str	r1, [r5, #0]
 80044d8:	0601      	lsls	r1, r0, #24
 80044da:	d501      	bpl.n	80044e0 <_printf_i+0xec>
 80044dc:	681e      	ldr	r6, [r3, #0]
 80044de:	e002      	b.n	80044e6 <_printf_i+0xf2>
 80044e0:	0646      	lsls	r6, r0, #25
 80044e2:	d5fb      	bpl.n	80044dc <_printf_i+0xe8>
 80044e4:	881e      	ldrh	r6, [r3, #0]
 80044e6:	4854      	ldr	r0, [pc, #336]	; (8004638 <_printf_i+0x244>)
 80044e8:	2f6f      	cmp	r7, #111	; 0x6f
 80044ea:	bf0c      	ite	eq
 80044ec:	2308      	moveq	r3, #8
 80044ee:	230a      	movne	r3, #10
 80044f0:	2100      	movs	r1, #0
 80044f2:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80044f6:	6865      	ldr	r5, [r4, #4]
 80044f8:	60a5      	str	r5, [r4, #8]
 80044fa:	2d00      	cmp	r5, #0
 80044fc:	bfa2      	ittt	ge
 80044fe:	6821      	ldrge	r1, [r4, #0]
 8004500:	f021 0104 	bicge.w	r1, r1, #4
 8004504:	6021      	strge	r1, [r4, #0]
 8004506:	b90e      	cbnz	r6, 800450c <_printf_i+0x118>
 8004508:	2d00      	cmp	r5, #0
 800450a:	d04d      	beq.n	80045a8 <_printf_i+0x1b4>
 800450c:	4615      	mov	r5, r2
 800450e:	fbb6 f1f3 	udiv	r1, r6, r3
 8004512:	fb03 6711 	mls	r7, r3, r1, r6
 8004516:	5dc7      	ldrb	r7, [r0, r7]
 8004518:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800451c:	4637      	mov	r7, r6
 800451e:	42bb      	cmp	r3, r7
 8004520:	460e      	mov	r6, r1
 8004522:	d9f4      	bls.n	800450e <_printf_i+0x11a>
 8004524:	2b08      	cmp	r3, #8
 8004526:	d10b      	bne.n	8004540 <_printf_i+0x14c>
 8004528:	6823      	ldr	r3, [r4, #0]
 800452a:	07de      	lsls	r6, r3, #31
 800452c:	d508      	bpl.n	8004540 <_printf_i+0x14c>
 800452e:	6923      	ldr	r3, [r4, #16]
 8004530:	6861      	ldr	r1, [r4, #4]
 8004532:	4299      	cmp	r1, r3
 8004534:	bfde      	ittt	le
 8004536:	2330      	movle	r3, #48	; 0x30
 8004538:	f805 3c01 	strble.w	r3, [r5, #-1]
 800453c:	f105 35ff 	addle.w	r5, r5, #4294967295
 8004540:	1b52      	subs	r2, r2, r5
 8004542:	6122      	str	r2, [r4, #16]
 8004544:	f8cd a000 	str.w	sl, [sp]
 8004548:	464b      	mov	r3, r9
 800454a:	aa03      	add	r2, sp, #12
 800454c:	4621      	mov	r1, r4
 800454e:	4640      	mov	r0, r8
 8004550:	f7ff fee2 	bl	8004318 <_printf_common>
 8004554:	3001      	adds	r0, #1
 8004556:	d14c      	bne.n	80045f2 <_printf_i+0x1fe>
 8004558:	f04f 30ff 	mov.w	r0, #4294967295
 800455c:	b004      	add	sp, #16
 800455e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004562:	4835      	ldr	r0, [pc, #212]	; (8004638 <_printf_i+0x244>)
 8004564:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8004568:	6829      	ldr	r1, [r5, #0]
 800456a:	6823      	ldr	r3, [r4, #0]
 800456c:	f851 6b04 	ldr.w	r6, [r1], #4
 8004570:	6029      	str	r1, [r5, #0]
 8004572:	061d      	lsls	r5, r3, #24
 8004574:	d514      	bpl.n	80045a0 <_printf_i+0x1ac>
 8004576:	07df      	lsls	r7, r3, #31
 8004578:	bf44      	itt	mi
 800457a:	f043 0320 	orrmi.w	r3, r3, #32
 800457e:	6023      	strmi	r3, [r4, #0]
 8004580:	b91e      	cbnz	r6, 800458a <_printf_i+0x196>
 8004582:	6823      	ldr	r3, [r4, #0]
 8004584:	f023 0320 	bic.w	r3, r3, #32
 8004588:	6023      	str	r3, [r4, #0]
 800458a:	2310      	movs	r3, #16
 800458c:	e7b0      	b.n	80044f0 <_printf_i+0xfc>
 800458e:	6823      	ldr	r3, [r4, #0]
 8004590:	f043 0320 	orr.w	r3, r3, #32
 8004594:	6023      	str	r3, [r4, #0]
 8004596:	2378      	movs	r3, #120	; 0x78
 8004598:	4828      	ldr	r0, [pc, #160]	; (800463c <_printf_i+0x248>)
 800459a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800459e:	e7e3      	b.n	8004568 <_printf_i+0x174>
 80045a0:	0659      	lsls	r1, r3, #25
 80045a2:	bf48      	it	mi
 80045a4:	b2b6      	uxthmi	r6, r6
 80045a6:	e7e6      	b.n	8004576 <_printf_i+0x182>
 80045a8:	4615      	mov	r5, r2
 80045aa:	e7bb      	b.n	8004524 <_printf_i+0x130>
 80045ac:	682b      	ldr	r3, [r5, #0]
 80045ae:	6826      	ldr	r6, [r4, #0]
 80045b0:	6961      	ldr	r1, [r4, #20]
 80045b2:	1d18      	adds	r0, r3, #4
 80045b4:	6028      	str	r0, [r5, #0]
 80045b6:	0635      	lsls	r5, r6, #24
 80045b8:	681b      	ldr	r3, [r3, #0]
 80045ba:	d501      	bpl.n	80045c0 <_printf_i+0x1cc>
 80045bc:	6019      	str	r1, [r3, #0]
 80045be:	e002      	b.n	80045c6 <_printf_i+0x1d2>
 80045c0:	0670      	lsls	r0, r6, #25
 80045c2:	d5fb      	bpl.n	80045bc <_printf_i+0x1c8>
 80045c4:	8019      	strh	r1, [r3, #0]
 80045c6:	2300      	movs	r3, #0
 80045c8:	6123      	str	r3, [r4, #16]
 80045ca:	4615      	mov	r5, r2
 80045cc:	e7ba      	b.n	8004544 <_printf_i+0x150>
 80045ce:	682b      	ldr	r3, [r5, #0]
 80045d0:	1d1a      	adds	r2, r3, #4
 80045d2:	602a      	str	r2, [r5, #0]
 80045d4:	681d      	ldr	r5, [r3, #0]
 80045d6:	6862      	ldr	r2, [r4, #4]
 80045d8:	2100      	movs	r1, #0
 80045da:	4628      	mov	r0, r5
 80045dc:	f7fb fe00 	bl	80001e0 <memchr>
 80045e0:	b108      	cbz	r0, 80045e6 <_printf_i+0x1f2>
 80045e2:	1b40      	subs	r0, r0, r5
 80045e4:	6060      	str	r0, [r4, #4]
 80045e6:	6863      	ldr	r3, [r4, #4]
 80045e8:	6123      	str	r3, [r4, #16]
 80045ea:	2300      	movs	r3, #0
 80045ec:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80045f0:	e7a8      	b.n	8004544 <_printf_i+0x150>
 80045f2:	6923      	ldr	r3, [r4, #16]
 80045f4:	462a      	mov	r2, r5
 80045f6:	4649      	mov	r1, r9
 80045f8:	4640      	mov	r0, r8
 80045fa:	47d0      	blx	sl
 80045fc:	3001      	adds	r0, #1
 80045fe:	d0ab      	beq.n	8004558 <_printf_i+0x164>
 8004600:	6823      	ldr	r3, [r4, #0]
 8004602:	079b      	lsls	r3, r3, #30
 8004604:	d413      	bmi.n	800462e <_printf_i+0x23a>
 8004606:	68e0      	ldr	r0, [r4, #12]
 8004608:	9b03      	ldr	r3, [sp, #12]
 800460a:	4298      	cmp	r0, r3
 800460c:	bfb8      	it	lt
 800460e:	4618      	movlt	r0, r3
 8004610:	e7a4      	b.n	800455c <_printf_i+0x168>
 8004612:	2301      	movs	r3, #1
 8004614:	4632      	mov	r2, r6
 8004616:	4649      	mov	r1, r9
 8004618:	4640      	mov	r0, r8
 800461a:	47d0      	blx	sl
 800461c:	3001      	adds	r0, #1
 800461e:	d09b      	beq.n	8004558 <_printf_i+0x164>
 8004620:	3501      	adds	r5, #1
 8004622:	68e3      	ldr	r3, [r4, #12]
 8004624:	9903      	ldr	r1, [sp, #12]
 8004626:	1a5b      	subs	r3, r3, r1
 8004628:	42ab      	cmp	r3, r5
 800462a:	dcf2      	bgt.n	8004612 <_printf_i+0x21e>
 800462c:	e7eb      	b.n	8004606 <_printf_i+0x212>
 800462e:	2500      	movs	r5, #0
 8004630:	f104 0619 	add.w	r6, r4, #25
 8004634:	e7f5      	b.n	8004622 <_printf_i+0x22e>
 8004636:	bf00      	nop
 8004638:	08005201 	.word	0x08005201
 800463c:	08005212 	.word	0x08005212

08004640 <memcpy>:
 8004640:	440a      	add	r2, r1
 8004642:	4291      	cmp	r1, r2
 8004644:	f100 33ff 	add.w	r3, r0, #4294967295
 8004648:	d100      	bne.n	800464c <memcpy+0xc>
 800464a:	4770      	bx	lr
 800464c:	b510      	push	{r4, lr}
 800464e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004652:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004656:	4291      	cmp	r1, r2
 8004658:	d1f9      	bne.n	800464e <memcpy+0xe>
 800465a:	bd10      	pop	{r4, pc}

0800465c <memmove>:
 800465c:	4288      	cmp	r0, r1
 800465e:	b510      	push	{r4, lr}
 8004660:	eb01 0402 	add.w	r4, r1, r2
 8004664:	d902      	bls.n	800466c <memmove+0x10>
 8004666:	4284      	cmp	r4, r0
 8004668:	4623      	mov	r3, r4
 800466a:	d807      	bhi.n	800467c <memmove+0x20>
 800466c:	1e43      	subs	r3, r0, #1
 800466e:	42a1      	cmp	r1, r4
 8004670:	d008      	beq.n	8004684 <memmove+0x28>
 8004672:	f811 2b01 	ldrb.w	r2, [r1], #1
 8004676:	f803 2f01 	strb.w	r2, [r3, #1]!
 800467a:	e7f8      	b.n	800466e <memmove+0x12>
 800467c:	4402      	add	r2, r0
 800467e:	4601      	mov	r1, r0
 8004680:	428a      	cmp	r2, r1
 8004682:	d100      	bne.n	8004686 <memmove+0x2a>
 8004684:	bd10      	pop	{r4, pc}
 8004686:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800468a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800468e:	e7f7      	b.n	8004680 <memmove+0x24>

08004690 <_free_r>:
 8004690:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004692:	2900      	cmp	r1, #0
 8004694:	d044      	beq.n	8004720 <_free_r+0x90>
 8004696:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800469a:	9001      	str	r0, [sp, #4]
 800469c:	2b00      	cmp	r3, #0
 800469e:	f1a1 0404 	sub.w	r4, r1, #4
 80046a2:	bfb8      	it	lt
 80046a4:	18e4      	addlt	r4, r4, r3
 80046a6:	f000 f913 	bl	80048d0 <__malloc_lock>
 80046aa:	4a1e      	ldr	r2, [pc, #120]	; (8004724 <_free_r+0x94>)
 80046ac:	9801      	ldr	r0, [sp, #4]
 80046ae:	6813      	ldr	r3, [r2, #0]
 80046b0:	b933      	cbnz	r3, 80046c0 <_free_r+0x30>
 80046b2:	6063      	str	r3, [r4, #4]
 80046b4:	6014      	str	r4, [r2, #0]
 80046b6:	b003      	add	sp, #12
 80046b8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80046bc:	f000 b90e 	b.w	80048dc <__malloc_unlock>
 80046c0:	42a3      	cmp	r3, r4
 80046c2:	d908      	bls.n	80046d6 <_free_r+0x46>
 80046c4:	6825      	ldr	r5, [r4, #0]
 80046c6:	1961      	adds	r1, r4, r5
 80046c8:	428b      	cmp	r3, r1
 80046ca:	bf01      	itttt	eq
 80046cc:	6819      	ldreq	r1, [r3, #0]
 80046ce:	685b      	ldreq	r3, [r3, #4]
 80046d0:	1949      	addeq	r1, r1, r5
 80046d2:	6021      	streq	r1, [r4, #0]
 80046d4:	e7ed      	b.n	80046b2 <_free_r+0x22>
 80046d6:	461a      	mov	r2, r3
 80046d8:	685b      	ldr	r3, [r3, #4]
 80046da:	b10b      	cbz	r3, 80046e0 <_free_r+0x50>
 80046dc:	42a3      	cmp	r3, r4
 80046de:	d9fa      	bls.n	80046d6 <_free_r+0x46>
 80046e0:	6811      	ldr	r1, [r2, #0]
 80046e2:	1855      	adds	r5, r2, r1
 80046e4:	42a5      	cmp	r5, r4
 80046e6:	d10b      	bne.n	8004700 <_free_r+0x70>
 80046e8:	6824      	ldr	r4, [r4, #0]
 80046ea:	4421      	add	r1, r4
 80046ec:	1854      	adds	r4, r2, r1
 80046ee:	42a3      	cmp	r3, r4
 80046f0:	6011      	str	r1, [r2, #0]
 80046f2:	d1e0      	bne.n	80046b6 <_free_r+0x26>
 80046f4:	681c      	ldr	r4, [r3, #0]
 80046f6:	685b      	ldr	r3, [r3, #4]
 80046f8:	6053      	str	r3, [r2, #4]
 80046fa:	4421      	add	r1, r4
 80046fc:	6011      	str	r1, [r2, #0]
 80046fe:	e7da      	b.n	80046b6 <_free_r+0x26>
 8004700:	d902      	bls.n	8004708 <_free_r+0x78>
 8004702:	230c      	movs	r3, #12
 8004704:	6003      	str	r3, [r0, #0]
 8004706:	e7d6      	b.n	80046b6 <_free_r+0x26>
 8004708:	6825      	ldr	r5, [r4, #0]
 800470a:	1961      	adds	r1, r4, r5
 800470c:	428b      	cmp	r3, r1
 800470e:	bf04      	itt	eq
 8004710:	6819      	ldreq	r1, [r3, #0]
 8004712:	685b      	ldreq	r3, [r3, #4]
 8004714:	6063      	str	r3, [r4, #4]
 8004716:	bf04      	itt	eq
 8004718:	1949      	addeq	r1, r1, r5
 800471a:	6021      	streq	r1, [r4, #0]
 800471c:	6054      	str	r4, [r2, #4]
 800471e:	e7ca      	b.n	80046b6 <_free_r+0x26>
 8004720:	b003      	add	sp, #12
 8004722:	bd30      	pop	{r4, r5, pc}
 8004724:	20001364 	.word	0x20001364

08004728 <sbrk_aligned>:
 8004728:	b570      	push	{r4, r5, r6, lr}
 800472a:	4e0e      	ldr	r6, [pc, #56]	; (8004764 <sbrk_aligned+0x3c>)
 800472c:	460c      	mov	r4, r1
 800472e:	6831      	ldr	r1, [r6, #0]
 8004730:	4605      	mov	r5, r0
 8004732:	b911      	cbnz	r1, 800473a <sbrk_aligned+0x12>
 8004734:	f000 f8bc 	bl	80048b0 <_sbrk_r>
 8004738:	6030      	str	r0, [r6, #0]
 800473a:	4621      	mov	r1, r4
 800473c:	4628      	mov	r0, r5
 800473e:	f000 f8b7 	bl	80048b0 <_sbrk_r>
 8004742:	1c43      	adds	r3, r0, #1
 8004744:	d00a      	beq.n	800475c <sbrk_aligned+0x34>
 8004746:	1cc4      	adds	r4, r0, #3
 8004748:	f024 0403 	bic.w	r4, r4, #3
 800474c:	42a0      	cmp	r0, r4
 800474e:	d007      	beq.n	8004760 <sbrk_aligned+0x38>
 8004750:	1a21      	subs	r1, r4, r0
 8004752:	4628      	mov	r0, r5
 8004754:	f000 f8ac 	bl	80048b0 <_sbrk_r>
 8004758:	3001      	adds	r0, #1
 800475a:	d101      	bne.n	8004760 <sbrk_aligned+0x38>
 800475c:	f04f 34ff 	mov.w	r4, #4294967295
 8004760:	4620      	mov	r0, r4
 8004762:	bd70      	pop	{r4, r5, r6, pc}
 8004764:	20001368 	.word	0x20001368

08004768 <_malloc_r>:
 8004768:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800476c:	1ccd      	adds	r5, r1, #3
 800476e:	f025 0503 	bic.w	r5, r5, #3
 8004772:	3508      	adds	r5, #8
 8004774:	2d0c      	cmp	r5, #12
 8004776:	bf38      	it	cc
 8004778:	250c      	movcc	r5, #12
 800477a:	2d00      	cmp	r5, #0
 800477c:	4607      	mov	r7, r0
 800477e:	db01      	blt.n	8004784 <_malloc_r+0x1c>
 8004780:	42a9      	cmp	r1, r5
 8004782:	d905      	bls.n	8004790 <_malloc_r+0x28>
 8004784:	230c      	movs	r3, #12
 8004786:	603b      	str	r3, [r7, #0]
 8004788:	2600      	movs	r6, #0
 800478a:	4630      	mov	r0, r6
 800478c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004790:	4e2e      	ldr	r6, [pc, #184]	; (800484c <_malloc_r+0xe4>)
 8004792:	f000 f89d 	bl	80048d0 <__malloc_lock>
 8004796:	6833      	ldr	r3, [r6, #0]
 8004798:	461c      	mov	r4, r3
 800479a:	bb34      	cbnz	r4, 80047ea <_malloc_r+0x82>
 800479c:	4629      	mov	r1, r5
 800479e:	4638      	mov	r0, r7
 80047a0:	f7ff ffc2 	bl	8004728 <sbrk_aligned>
 80047a4:	1c43      	adds	r3, r0, #1
 80047a6:	4604      	mov	r4, r0
 80047a8:	d14d      	bne.n	8004846 <_malloc_r+0xde>
 80047aa:	6834      	ldr	r4, [r6, #0]
 80047ac:	4626      	mov	r6, r4
 80047ae:	2e00      	cmp	r6, #0
 80047b0:	d140      	bne.n	8004834 <_malloc_r+0xcc>
 80047b2:	6823      	ldr	r3, [r4, #0]
 80047b4:	4631      	mov	r1, r6
 80047b6:	4638      	mov	r0, r7
 80047b8:	eb04 0803 	add.w	r8, r4, r3
 80047bc:	f000 f878 	bl	80048b0 <_sbrk_r>
 80047c0:	4580      	cmp	r8, r0
 80047c2:	d13a      	bne.n	800483a <_malloc_r+0xd2>
 80047c4:	6821      	ldr	r1, [r4, #0]
 80047c6:	3503      	adds	r5, #3
 80047c8:	1a6d      	subs	r5, r5, r1
 80047ca:	f025 0503 	bic.w	r5, r5, #3
 80047ce:	3508      	adds	r5, #8
 80047d0:	2d0c      	cmp	r5, #12
 80047d2:	bf38      	it	cc
 80047d4:	250c      	movcc	r5, #12
 80047d6:	4629      	mov	r1, r5
 80047d8:	4638      	mov	r0, r7
 80047da:	f7ff ffa5 	bl	8004728 <sbrk_aligned>
 80047de:	3001      	adds	r0, #1
 80047e0:	d02b      	beq.n	800483a <_malloc_r+0xd2>
 80047e2:	6823      	ldr	r3, [r4, #0]
 80047e4:	442b      	add	r3, r5
 80047e6:	6023      	str	r3, [r4, #0]
 80047e8:	e00e      	b.n	8004808 <_malloc_r+0xa0>
 80047ea:	6822      	ldr	r2, [r4, #0]
 80047ec:	1b52      	subs	r2, r2, r5
 80047ee:	d41e      	bmi.n	800482e <_malloc_r+0xc6>
 80047f0:	2a0b      	cmp	r2, #11
 80047f2:	d916      	bls.n	8004822 <_malloc_r+0xba>
 80047f4:	1961      	adds	r1, r4, r5
 80047f6:	42a3      	cmp	r3, r4
 80047f8:	6025      	str	r5, [r4, #0]
 80047fa:	bf18      	it	ne
 80047fc:	6059      	strne	r1, [r3, #4]
 80047fe:	6863      	ldr	r3, [r4, #4]
 8004800:	bf08      	it	eq
 8004802:	6031      	streq	r1, [r6, #0]
 8004804:	5162      	str	r2, [r4, r5]
 8004806:	604b      	str	r3, [r1, #4]
 8004808:	4638      	mov	r0, r7
 800480a:	f104 060b 	add.w	r6, r4, #11
 800480e:	f000 f865 	bl	80048dc <__malloc_unlock>
 8004812:	f026 0607 	bic.w	r6, r6, #7
 8004816:	1d23      	adds	r3, r4, #4
 8004818:	1af2      	subs	r2, r6, r3
 800481a:	d0b6      	beq.n	800478a <_malloc_r+0x22>
 800481c:	1b9b      	subs	r3, r3, r6
 800481e:	50a3      	str	r3, [r4, r2]
 8004820:	e7b3      	b.n	800478a <_malloc_r+0x22>
 8004822:	6862      	ldr	r2, [r4, #4]
 8004824:	42a3      	cmp	r3, r4
 8004826:	bf0c      	ite	eq
 8004828:	6032      	streq	r2, [r6, #0]
 800482a:	605a      	strne	r2, [r3, #4]
 800482c:	e7ec      	b.n	8004808 <_malloc_r+0xa0>
 800482e:	4623      	mov	r3, r4
 8004830:	6864      	ldr	r4, [r4, #4]
 8004832:	e7b2      	b.n	800479a <_malloc_r+0x32>
 8004834:	4634      	mov	r4, r6
 8004836:	6876      	ldr	r6, [r6, #4]
 8004838:	e7b9      	b.n	80047ae <_malloc_r+0x46>
 800483a:	230c      	movs	r3, #12
 800483c:	603b      	str	r3, [r7, #0]
 800483e:	4638      	mov	r0, r7
 8004840:	f000 f84c 	bl	80048dc <__malloc_unlock>
 8004844:	e7a1      	b.n	800478a <_malloc_r+0x22>
 8004846:	6025      	str	r5, [r4, #0]
 8004848:	e7de      	b.n	8004808 <_malloc_r+0xa0>
 800484a:	bf00      	nop
 800484c:	20001364 	.word	0x20001364

08004850 <_realloc_r>:
 8004850:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004854:	4680      	mov	r8, r0
 8004856:	4614      	mov	r4, r2
 8004858:	460e      	mov	r6, r1
 800485a:	b921      	cbnz	r1, 8004866 <_realloc_r+0x16>
 800485c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004860:	4611      	mov	r1, r2
 8004862:	f7ff bf81 	b.w	8004768 <_malloc_r>
 8004866:	b92a      	cbnz	r2, 8004874 <_realloc_r+0x24>
 8004868:	f7ff ff12 	bl	8004690 <_free_r>
 800486c:	4625      	mov	r5, r4
 800486e:	4628      	mov	r0, r5
 8004870:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004874:	f000 f838 	bl	80048e8 <_malloc_usable_size_r>
 8004878:	4284      	cmp	r4, r0
 800487a:	4607      	mov	r7, r0
 800487c:	d802      	bhi.n	8004884 <_realloc_r+0x34>
 800487e:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8004882:	d812      	bhi.n	80048aa <_realloc_r+0x5a>
 8004884:	4621      	mov	r1, r4
 8004886:	4640      	mov	r0, r8
 8004888:	f7ff ff6e 	bl	8004768 <_malloc_r>
 800488c:	4605      	mov	r5, r0
 800488e:	2800      	cmp	r0, #0
 8004890:	d0ed      	beq.n	800486e <_realloc_r+0x1e>
 8004892:	42bc      	cmp	r4, r7
 8004894:	4622      	mov	r2, r4
 8004896:	4631      	mov	r1, r6
 8004898:	bf28      	it	cs
 800489a:	463a      	movcs	r2, r7
 800489c:	f7ff fed0 	bl	8004640 <memcpy>
 80048a0:	4631      	mov	r1, r6
 80048a2:	4640      	mov	r0, r8
 80048a4:	f7ff fef4 	bl	8004690 <_free_r>
 80048a8:	e7e1      	b.n	800486e <_realloc_r+0x1e>
 80048aa:	4635      	mov	r5, r6
 80048ac:	e7df      	b.n	800486e <_realloc_r+0x1e>
	...

080048b0 <_sbrk_r>:
 80048b0:	b538      	push	{r3, r4, r5, lr}
 80048b2:	4d06      	ldr	r5, [pc, #24]	; (80048cc <_sbrk_r+0x1c>)
 80048b4:	2300      	movs	r3, #0
 80048b6:	4604      	mov	r4, r0
 80048b8:	4608      	mov	r0, r1
 80048ba:	602b      	str	r3, [r5, #0]
 80048bc:	f7fc f876 	bl	80009ac <_sbrk>
 80048c0:	1c43      	adds	r3, r0, #1
 80048c2:	d102      	bne.n	80048ca <_sbrk_r+0x1a>
 80048c4:	682b      	ldr	r3, [r5, #0]
 80048c6:	b103      	cbz	r3, 80048ca <_sbrk_r+0x1a>
 80048c8:	6023      	str	r3, [r4, #0]
 80048ca:	bd38      	pop	{r3, r4, r5, pc}
 80048cc:	2000136c 	.word	0x2000136c

080048d0 <__malloc_lock>:
 80048d0:	4801      	ldr	r0, [pc, #4]	; (80048d8 <__malloc_lock+0x8>)
 80048d2:	f000 b811 	b.w	80048f8 <__retarget_lock_acquire_recursive>
 80048d6:	bf00      	nop
 80048d8:	20001370 	.word	0x20001370

080048dc <__malloc_unlock>:
 80048dc:	4801      	ldr	r0, [pc, #4]	; (80048e4 <__malloc_unlock+0x8>)
 80048de:	f000 b80c 	b.w	80048fa <__retarget_lock_release_recursive>
 80048e2:	bf00      	nop
 80048e4:	20001370 	.word	0x20001370

080048e8 <_malloc_usable_size_r>:
 80048e8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80048ec:	1f18      	subs	r0, r3, #4
 80048ee:	2b00      	cmp	r3, #0
 80048f0:	bfbc      	itt	lt
 80048f2:	580b      	ldrlt	r3, [r1, r0]
 80048f4:	18c0      	addlt	r0, r0, r3
 80048f6:	4770      	bx	lr

080048f8 <__retarget_lock_acquire_recursive>:
 80048f8:	4770      	bx	lr

080048fa <__retarget_lock_release_recursive>:
 80048fa:	4770      	bx	lr

080048fc <_init>:
 80048fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80048fe:	bf00      	nop
 8004900:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004902:	bc08      	pop	{r3}
 8004904:	469e      	mov	lr, r3
 8004906:	4770      	bx	lr

08004908 <_fini>:
 8004908:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800490a:	bf00      	nop
 800490c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800490e:	bc08      	pop	{r3}
 8004910:	469e      	mov	lr, r3
 8004912:	4770      	bx	lr
